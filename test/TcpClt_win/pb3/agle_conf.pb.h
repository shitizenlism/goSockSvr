// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: agle_conf.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_agle_5fconf_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_agle_5fconf_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "commu.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_agle_5fconf_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_agle_5fconf_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[13]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_agle_5fconf_2eproto;
namespace ivi {
namespace agle {
class AgleConfMsg;
class AgleConfMsgDefaultTypeInternal;
extern AgleConfMsgDefaultTypeInternal _AgleConfMsg_default_instance_;
class AgleConfMsg_AudiosMsg;
class AgleConfMsg_AudiosMsgDefaultTypeInternal;
extern AgleConfMsg_AudiosMsgDefaultTypeInternal _AgleConfMsg_AudiosMsg_default_instance_;
class AgleConfMsg_AudiosMsg_AudioEntityMsg;
class AgleConfMsg_AudiosMsg_AudioEntityMsgDefaultTypeInternal;
extern AgleConfMsg_AudiosMsg_AudioEntityMsgDefaultTypeInternal _AgleConfMsg_AudiosMsg_AudioEntityMsg_default_instance_;
class AgleConfMsg_LogMsg;
class AgleConfMsg_LogMsgDefaultTypeInternal;
extern AgleConfMsg_LogMsgDefaultTypeInternal _AgleConfMsg_LogMsg_default_instance_;
class AgleConfMsg_ManagementMsg;
class AgleConfMsg_ManagementMsgDefaultTypeInternal;
extern AgleConfMsg_ManagementMsgDefaultTypeInternal _AgleConfMsg_ManagementMsg_default_instance_;
class AgleConfMsg_NtpMsg;
class AgleConfMsg_NtpMsgDefaultTypeInternal;
extern AgleConfMsg_NtpMsgDefaultTypeInternal _AgleConfMsg_NtpMsg_default_instance_;
class AgleConfMsg_NtpMsg_NtpEntityMsg;
class AgleConfMsg_NtpMsg_NtpEntityMsgDefaultTypeInternal;
extern AgleConfMsg_NtpMsg_NtpEntityMsgDefaultTypeInternal _AgleConfMsg_NtpMsg_NtpEntityMsg_default_instance_;
class AgleConfMsg_RecordMsg;
class AgleConfMsg_RecordMsgDefaultTypeInternal;
extern AgleConfMsg_RecordMsgDefaultTypeInternal _AgleConfMsg_RecordMsg_default_instance_;
class AgleConfMsg_RtmpServerMsg;
class AgleConfMsg_RtmpServerMsgDefaultTypeInternal;
extern AgleConfMsg_RtmpServerMsgDefaultTypeInternal _AgleConfMsg_RtmpServerMsg_default_instance_;
class AgleConfMsg_RtmpServerMsg_ServerEntityMsg;
class AgleConfMsg_RtmpServerMsg_ServerEntityMsgDefaultTypeInternal;
extern AgleConfMsg_RtmpServerMsg_ServerEntityMsgDefaultTypeInternal _AgleConfMsg_RtmpServerMsg_ServerEntityMsg_default_instance_;
class AgleConfMsg_VideosMsg;
class AgleConfMsg_VideosMsgDefaultTypeInternal;
extern AgleConfMsg_VideosMsgDefaultTypeInternal _AgleConfMsg_VideosMsg_default_instance_;
class AgleConfMsg_VideosMsg_CropMsg;
class AgleConfMsg_VideosMsg_CropMsgDefaultTypeInternal;
extern AgleConfMsg_VideosMsg_CropMsgDefaultTypeInternal _AgleConfMsg_VideosMsg_CropMsg_default_instance_;
class AgleConfMsg_VideosMsg_VideoEntityMsg;
class AgleConfMsg_VideosMsg_VideoEntityMsgDefaultTypeInternal;
extern AgleConfMsg_VideosMsg_VideoEntityMsgDefaultTypeInternal _AgleConfMsg_VideosMsg_VideoEntityMsg_default_instance_;
}  // namespace agle
}  // namespace ivi
PROTOBUF_NAMESPACE_OPEN
template<> ::ivi::agle::AgleConfMsg* Arena::CreateMaybeMessage<::ivi::agle::AgleConfMsg>(Arena*);
template<> ::ivi::agle::AgleConfMsg_AudiosMsg* Arena::CreateMaybeMessage<::ivi::agle::AgleConfMsg_AudiosMsg>(Arena*);
template<> ::ivi::agle::AgleConfMsg_AudiosMsg_AudioEntityMsg* Arena::CreateMaybeMessage<::ivi::agle::AgleConfMsg_AudiosMsg_AudioEntityMsg>(Arena*);
template<> ::ivi::agle::AgleConfMsg_LogMsg* Arena::CreateMaybeMessage<::ivi::agle::AgleConfMsg_LogMsg>(Arena*);
template<> ::ivi::agle::AgleConfMsg_ManagementMsg* Arena::CreateMaybeMessage<::ivi::agle::AgleConfMsg_ManagementMsg>(Arena*);
template<> ::ivi::agle::AgleConfMsg_NtpMsg* Arena::CreateMaybeMessage<::ivi::agle::AgleConfMsg_NtpMsg>(Arena*);
template<> ::ivi::agle::AgleConfMsg_NtpMsg_NtpEntityMsg* Arena::CreateMaybeMessage<::ivi::agle::AgleConfMsg_NtpMsg_NtpEntityMsg>(Arena*);
template<> ::ivi::agle::AgleConfMsg_RecordMsg* Arena::CreateMaybeMessage<::ivi::agle::AgleConfMsg_RecordMsg>(Arena*);
template<> ::ivi::agle::AgleConfMsg_RtmpServerMsg* Arena::CreateMaybeMessage<::ivi::agle::AgleConfMsg_RtmpServerMsg>(Arena*);
template<> ::ivi::agle::AgleConfMsg_RtmpServerMsg_ServerEntityMsg* Arena::CreateMaybeMessage<::ivi::agle::AgleConfMsg_RtmpServerMsg_ServerEntityMsg>(Arena*);
template<> ::ivi::agle::AgleConfMsg_VideosMsg* Arena::CreateMaybeMessage<::ivi::agle::AgleConfMsg_VideosMsg>(Arena*);
template<> ::ivi::agle::AgleConfMsg_VideosMsg_CropMsg* Arena::CreateMaybeMessage<::ivi::agle::AgleConfMsg_VideosMsg_CropMsg>(Arena*);
template<> ::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg* Arena::CreateMaybeMessage<::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace ivi {
namespace agle {

enum AgleConfMsg_AudiosMsg_EnumAudioBitrate : int {
  AgleConfMsg_AudiosMsg_EnumAudioBitrate_kbps_320 = 0,
  AgleConfMsg_AudiosMsg_EnumAudioBitrate_kbps_256 = 1,
  AgleConfMsg_AudiosMsg_EnumAudioBitrate_kbps_128 = 2,
  AgleConfMsg_AudiosMsg_EnumAudioBitrate_kbps_96 = 3,
  AgleConfMsg_AudiosMsg_EnumAudioBitrate_kbps_80 = 4,
  AgleConfMsg_AudiosMsg_EnumAudioBitrate_kbps_64 = 5,
  AgleConfMsg_AudiosMsg_EnumAudioBitrate_kbps_48 = 6,
  AgleConfMsg_AudiosMsg_EnumAudioBitrate_kbps_36 = 7,
  AgleConfMsg_AudiosMsg_EnumAudioBitrate_AgleConfMsg_AudiosMsg_EnumAudioBitrate_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  AgleConfMsg_AudiosMsg_EnumAudioBitrate_AgleConfMsg_AudiosMsg_EnumAudioBitrate_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool AgleConfMsg_AudiosMsg_EnumAudioBitrate_IsValid(int value);
constexpr AgleConfMsg_AudiosMsg_EnumAudioBitrate AgleConfMsg_AudiosMsg_EnumAudioBitrate_EnumAudioBitrate_MIN = AgleConfMsg_AudiosMsg_EnumAudioBitrate_kbps_320;
constexpr AgleConfMsg_AudiosMsg_EnumAudioBitrate AgleConfMsg_AudiosMsg_EnumAudioBitrate_EnumAudioBitrate_MAX = AgleConfMsg_AudiosMsg_EnumAudioBitrate_kbps_36;
constexpr int AgleConfMsg_AudiosMsg_EnumAudioBitrate_EnumAudioBitrate_ARRAYSIZE = AgleConfMsg_AudiosMsg_EnumAudioBitrate_EnumAudioBitrate_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AgleConfMsg_AudiosMsg_EnumAudioBitrate_descriptor();
template<typename T>
inline const std::string& AgleConfMsg_AudiosMsg_EnumAudioBitrate_Name(T enum_t_value) {
  static_assert(::std::is_same<T, AgleConfMsg_AudiosMsg_EnumAudioBitrate>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function AgleConfMsg_AudiosMsg_EnumAudioBitrate_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    AgleConfMsg_AudiosMsg_EnumAudioBitrate_descriptor(), enum_t_value);
}
inline bool AgleConfMsg_AudiosMsg_EnumAudioBitrate_Parse(
    const std::string& name, AgleConfMsg_AudiosMsg_EnumAudioBitrate* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<AgleConfMsg_AudiosMsg_EnumAudioBitrate>(
    AgleConfMsg_AudiosMsg_EnumAudioBitrate_descriptor(), name, value);
}
enum AgleConfMsg_AudiosMsg_EnumAudioFormat : int {
  AgleConfMsg_AudiosMsg_EnumAudioFormat_aac_low = 0,
  AgleConfMsg_AudiosMsg_EnumAudioFormat_AgleConfMsg_AudiosMsg_EnumAudioFormat_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  AgleConfMsg_AudiosMsg_EnumAudioFormat_AgleConfMsg_AudiosMsg_EnumAudioFormat_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool AgleConfMsg_AudiosMsg_EnumAudioFormat_IsValid(int value);
constexpr AgleConfMsg_AudiosMsg_EnumAudioFormat AgleConfMsg_AudiosMsg_EnumAudioFormat_EnumAudioFormat_MIN = AgleConfMsg_AudiosMsg_EnumAudioFormat_aac_low;
constexpr AgleConfMsg_AudiosMsg_EnumAudioFormat AgleConfMsg_AudiosMsg_EnumAudioFormat_EnumAudioFormat_MAX = AgleConfMsg_AudiosMsg_EnumAudioFormat_aac_low;
constexpr int AgleConfMsg_AudiosMsg_EnumAudioFormat_EnumAudioFormat_ARRAYSIZE = AgleConfMsg_AudiosMsg_EnumAudioFormat_EnumAudioFormat_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AgleConfMsg_AudiosMsg_EnumAudioFormat_descriptor();
template<typename T>
inline const std::string& AgleConfMsg_AudiosMsg_EnumAudioFormat_Name(T enum_t_value) {
  static_assert(::std::is_same<T, AgleConfMsg_AudiosMsg_EnumAudioFormat>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function AgleConfMsg_AudiosMsg_EnumAudioFormat_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    AgleConfMsg_AudiosMsg_EnumAudioFormat_descriptor(), enum_t_value);
}
inline bool AgleConfMsg_AudiosMsg_EnumAudioFormat_Parse(
    const std::string& name, AgleConfMsg_AudiosMsg_EnumAudioFormat* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<AgleConfMsg_AudiosMsg_EnumAudioFormat>(
    AgleConfMsg_AudiosMsg_EnumAudioFormat_descriptor(), name, value);
}
enum AgleConfMsg_AudiosMsg_EnumAudioSamplerate : int {
  AgleConfMsg_AudiosMsg_EnumAudioSamplerate_Hz_48000 = 0,
  AgleConfMsg_AudiosMsg_EnumAudioSamplerate_Hz_44100 = 1,
  AgleConfMsg_AudiosMsg_EnumAudioSamplerate_Hz_24000 = 2,
  AgleConfMsg_AudiosMsg_EnumAudioSamplerate_Hz_22050 = 3,
  AgleConfMsg_AudiosMsg_EnumAudioSamplerate_Hz_16000 = 4,
  AgleConfMsg_AudiosMsg_EnumAudioSamplerate_AgleConfMsg_AudiosMsg_EnumAudioSamplerate_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  AgleConfMsg_AudiosMsg_EnumAudioSamplerate_AgleConfMsg_AudiosMsg_EnumAudioSamplerate_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool AgleConfMsg_AudiosMsg_EnumAudioSamplerate_IsValid(int value);
constexpr AgleConfMsg_AudiosMsg_EnumAudioSamplerate AgleConfMsg_AudiosMsg_EnumAudioSamplerate_EnumAudioSamplerate_MIN = AgleConfMsg_AudiosMsg_EnumAudioSamplerate_Hz_48000;
constexpr AgleConfMsg_AudiosMsg_EnumAudioSamplerate AgleConfMsg_AudiosMsg_EnumAudioSamplerate_EnumAudioSamplerate_MAX = AgleConfMsg_AudiosMsg_EnumAudioSamplerate_Hz_16000;
constexpr int AgleConfMsg_AudiosMsg_EnumAudioSamplerate_EnumAudioSamplerate_ARRAYSIZE = AgleConfMsg_AudiosMsg_EnumAudioSamplerate_EnumAudioSamplerate_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AgleConfMsg_AudiosMsg_EnumAudioSamplerate_descriptor();
template<typename T>
inline const std::string& AgleConfMsg_AudiosMsg_EnumAudioSamplerate_Name(T enum_t_value) {
  static_assert(::std::is_same<T, AgleConfMsg_AudiosMsg_EnumAudioSamplerate>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function AgleConfMsg_AudiosMsg_EnumAudioSamplerate_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    AgleConfMsg_AudiosMsg_EnumAudioSamplerate_descriptor(), enum_t_value);
}
inline bool AgleConfMsg_AudiosMsg_EnumAudioSamplerate_Parse(
    const std::string& name, AgleConfMsg_AudiosMsg_EnumAudioSamplerate* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<AgleConfMsg_AudiosMsg_EnumAudioSamplerate>(
    AgleConfMsg_AudiosMsg_EnumAudioSamplerate_descriptor(), name, value);
}
enum AgleConfMsg_VideosMsg_EnumVideoEncodeFormat : int {
  AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_x264 = 0,
  AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_h264_qsv = 1,
  AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_h264_nvenc = 2,
  AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_IsValid(int value);
constexpr AgleConfMsg_VideosMsg_EnumVideoEncodeFormat AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_EnumVideoEncodeFormat_MIN = AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_x264;
constexpr AgleConfMsg_VideosMsg_EnumVideoEncodeFormat AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_EnumVideoEncodeFormat_MAX = AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_h264_nvenc;
constexpr int AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_EnumVideoEncodeFormat_ARRAYSIZE = AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_EnumVideoEncodeFormat_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_descriptor();
template<typename T>
inline const std::string& AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_Name(T enum_t_value) {
  static_assert(::std::is_same<T, AgleConfMsg_VideosMsg_EnumVideoEncodeFormat>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_descriptor(), enum_t_value);
}
inline bool AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_Parse(
    const std::string& name, AgleConfMsg_VideosMsg_EnumVideoEncodeFormat* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<AgleConfMsg_VideosMsg_EnumVideoEncodeFormat>(
    AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_descriptor(), name, value);
}
enum AgleConfMsg_VideosMsg_EnumVideoEncodeQuality : int {
  AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_speed = 0,
  AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_balance = 1,
  AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_quality = 2,
  AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_IsValid(int value);
constexpr AgleConfMsg_VideosMsg_EnumVideoEncodeQuality AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_EnumVideoEncodeQuality_MIN = AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_speed;
constexpr AgleConfMsg_VideosMsg_EnumVideoEncodeQuality AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_EnumVideoEncodeQuality_MAX = AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_quality;
constexpr int AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_EnumVideoEncodeQuality_ARRAYSIZE = AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_EnumVideoEncodeQuality_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_descriptor();
template<typename T>
inline const std::string& AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_Name(T enum_t_value) {
  static_assert(::std::is_same<T, AgleConfMsg_VideosMsg_EnumVideoEncodeQuality>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_descriptor(), enum_t_value);
}
inline bool AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_Parse(
    const std::string& name, AgleConfMsg_VideosMsg_EnumVideoEncodeQuality* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<AgleConfMsg_VideosMsg_EnumVideoEncodeQuality>(
    AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_descriptor(), name, value);
}
enum AgleConfMsg_VideosMsg_EnumVideoOutSize : int {
  AgleConfMsg_VideosMsg_EnumVideoOutSize_size_1920x1080 = 0,
  AgleConfMsg_VideosMsg_EnumVideoOutSize_size_1280x720 = 1,
  AgleConfMsg_VideosMsg_EnumVideoOutSize_size_720x480 = 2,
  AgleConfMsg_VideosMsg_EnumVideoOutSize_size_640x480 = 3,
  AgleConfMsg_VideosMsg_EnumVideoOutSize_size_640x360 = 4,
  AgleConfMsg_VideosMsg_EnumVideoOutSize_AgleConfMsg_VideosMsg_EnumVideoOutSize_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  AgleConfMsg_VideosMsg_EnumVideoOutSize_AgleConfMsg_VideosMsg_EnumVideoOutSize_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool AgleConfMsg_VideosMsg_EnumVideoOutSize_IsValid(int value);
constexpr AgleConfMsg_VideosMsg_EnumVideoOutSize AgleConfMsg_VideosMsg_EnumVideoOutSize_EnumVideoOutSize_MIN = AgleConfMsg_VideosMsg_EnumVideoOutSize_size_1920x1080;
constexpr AgleConfMsg_VideosMsg_EnumVideoOutSize AgleConfMsg_VideosMsg_EnumVideoOutSize_EnumVideoOutSize_MAX = AgleConfMsg_VideosMsg_EnumVideoOutSize_size_640x360;
constexpr int AgleConfMsg_VideosMsg_EnumVideoOutSize_EnumVideoOutSize_ARRAYSIZE = AgleConfMsg_VideosMsg_EnumVideoOutSize_EnumVideoOutSize_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AgleConfMsg_VideosMsg_EnumVideoOutSize_descriptor();
template<typename T>
inline const std::string& AgleConfMsg_VideosMsg_EnumVideoOutSize_Name(T enum_t_value) {
  static_assert(::std::is_same<T, AgleConfMsg_VideosMsg_EnumVideoOutSize>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function AgleConfMsg_VideosMsg_EnumVideoOutSize_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    AgleConfMsg_VideosMsg_EnumVideoOutSize_descriptor(), enum_t_value);
}
inline bool AgleConfMsg_VideosMsg_EnumVideoOutSize_Parse(
    const std::string& name, AgleConfMsg_VideosMsg_EnumVideoOutSize* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<AgleConfMsg_VideosMsg_EnumVideoOutSize>(
    AgleConfMsg_VideosMsg_EnumVideoOutSize_descriptor(), name, value);
}
enum AgleConfMsg_VideosMsg_EnumVideoBitrate : int {
  AgleConfMsg_VideosMsg_EnumVideoBitrate_kbps_3000 = 0,
  AgleConfMsg_VideosMsg_EnumVideoBitrate_kbps_2000 = 1,
  AgleConfMsg_VideosMsg_EnumVideoBitrate_kbps_1000 = 2,
  AgleConfMsg_VideosMsg_EnumVideoBitrate_kbps_800 = 3,
  AgleConfMsg_VideosMsg_EnumVideoBitrate_kbps_600 = 4,
  AgleConfMsg_VideosMsg_EnumVideoBitrate_kbps_500 = 5,
  AgleConfMsg_VideosMsg_EnumVideoBitrate_kbps_400 = 6,
  AgleConfMsg_VideosMsg_EnumVideoBitrate_kbps_350 = 7,
  AgleConfMsg_VideosMsg_EnumVideoBitrate_kbps_300 = 8,
  AgleConfMsg_VideosMsg_EnumVideoBitrate_kbps_200 = 9,
  AgleConfMsg_VideosMsg_EnumVideoBitrate_kbps_150 = 10,
  AgleConfMsg_VideosMsg_EnumVideoBitrate_kbps_100 = 11,
  AgleConfMsg_VideosMsg_EnumVideoBitrate_AgleConfMsg_VideosMsg_EnumVideoBitrate_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  AgleConfMsg_VideosMsg_EnumVideoBitrate_AgleConfMsg_VideosMsg_EnumVideoBitrate_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool AgleConfMsg_VideosMsg_EnumVideoBitrate_IsValid(int value);
constexpr AgleConfMsg_VideosMsg_EnumVideoBitrate AgleConfMsg_VideosMsg_EnumVideoBitrate_EnumVideoBitrate_MIN = AgleConfMsg_VideosMsg_EnumVideoBitrate_kbps_3000;
constexpr AgleConfMsg_VideosMsg_EnumVideoBitrate AgleConfMsg_VideosMsg_EnumVideoBitrate_EnumVideoBitrate_MAX = AgleConfMsg_VideosMsg_EnumVideoBitrate_kbps_100;
constexpr int AgleConfMsg_VideosMsg_EnumVideoBitrate_EnumVideoBitrate_ARRAYSIZE = AgleConfMsg_VideosMsg_EnumVideoBitrate_EnumVideoBitrate_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AgleConfMsg_VideosMsg_EnumVideoBitrate_descriptor();
template<typename T>
inline const std::string& AgleConfMsg_VideosMsg_EnumVideoBitrate_Name(T enum_t_value) {
  static_assert(::std::is_same<T, AgleConfMsg_VideosMsg_EnumVideoBitrate>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function AgleConfMsg_VideosMsg_EnumVideoBitrate_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    AgleConfMsg_VideosMsg_EnumVideoBitrate_descriptor(), enum_t_value);
}
inline bool AgleConfMsg_VideosMsg_EnumVideoBitrate_Parse(
    const std::string& name, AgleConfMsg_VideosMsg_EnumVideoBitrate* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<AgleConfMsg_VideosMsg_EnumVideoBitrate>(
    AgleConfMsg_VideosMsg_EnumVideoBitrate_descriptor(), name, value);
}
enum AgleConfMsg_VideosMsg_EnumVideoFramerate : int {
  AgleConfMsg_VideosMsg_EnumVideoFramerate_fps_30 = 0,
  AgleConfMsg_VideosMsg_EnumVideoFramerate_fps_25 = 1,
  AgleConfMsg_VideosMsg_EnumVideoFramerate_fps_20 = 2,
  AgleConfMsg_VideosMsg_EnumVideoFramerate_fps_15 = 3,
  AgleConfMsg_VideosMsg_EnumVideoFramerate_AgleConfMsg_VideosMsg_EnumVideoFramerate_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  AgleConfMsg_VideosMsg_EnumVideoFramerate_AgleConfMsg_VideosMsg_EnumVideoFramerate_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool AgleConfMsg_VideosMsg_EnumVideoFramerate_IsValid(int value);
constexpr AgleConfMsg_VideosMsg_EnumVideoFramerate AgleConfMsg_VideosMsg_EnumVideoFramerate_EnumVideoFramerate_MIN = AgleConfMsg_VideosMsg_EnumVideoFramerate_fps_30;
constexpr AgleConfMsg_VideosMsg_EnumVideoFramerate AgleConfMsg_VideosMsg_EnumVideoFramerate_EnumVideoFramerate_MAX = AgleConfMsg_VideosMsg_EnumVideoFramerate_fps_15;
constexpr int AgleConfMsg_VideosMsg_EnumVideoFramerate_EnumVideoFramerate_ARRAYSIZE = AgleConfMsg_VideosMsg_EnumVideoFramerate_EnumVideoFramerate_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AgleConfMsg_VideosMsg_EnumVideoFramerate_descriptor();
template<typename T>
inline const std::string& AgleConfMsg_VideosMsg_EnumVideoFramerate_Name(T enum_t_value) {
  static_assert(::std::is_same<T, AgleConfMsg_VideosMsg_EnumVideoFramerate>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function AgleConfMsg_VideosMsg_EnumVideoFramerate_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    AgleConfMsg_VideosMsg_EnumVideoFramerate_descriptor(), enum_t_value);
}
inline bool AgleConfMsg_VideosMsg_EnumVideoFramerate_Parse(
    const std::string& name, AgleConfMsg_VideosMsg_EnumVideoFramerate* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<AgleConfMsg_VideosMsg_EnumVideoFramerate>(
    AgleConfMsg_VideosMsg_EnumVideoFramerate_descriptor(), name, value);
}
// ===================================================================

class AgleConfMsg_NtpMsg_NtpEntityMsg :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg) */ {
 public:
  AgleConfMsg_NtpMsg_NtpEntityMsg();
  virtual ~AgleConfMsg_NtpMsg_NtpEntityMsg();

  AgleConfMsg_NtpMsg_NtpEntityMsg(const AgleConfMsg_NtpMsg_NtpEntityMsg& from);
  AgleConfMsg_NtpMsg_NtpEntityMsg(AgleConfMsg_NtpMsg_NtpEntityMsg&& from) noexcept
    : AgleConfMsg_NtpMsg_NtpEntityMsg() {
    *this = ::std::move(from);
  }

  inline AgleConfMsg_NtpMsg_NtpEntityMsg& operator=(const AgleConfMsg_NtpMsg_NtpEntityMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgleConfMsg_NtpMsg_NtpEntityMsg& operator=(AgleConfMsg_NtpMsg_NtpEntityMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AgleConfMsg_NtpMsg_NtpEntityMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AgleConfMsg_NtpMsg_NtpEntityMsg* internal_default_instance() {
    return reinterpret_cast<const AgleConfMsg_NtpMsg_NtpEntityMsg*>(
               &_AgleConfMsg_NtpMsg_NtpEntityMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AgleConfMsg_NtpMsg_NtpEntityMsg& a, AgleConfMsg_NtpMsg_NtpEntityMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(AgleConfMsg_NtpMsg_NtpEntityMsg* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AgleConfMsg_NtpMsg_NtpEntityMsg* New() const final {
    return CreateMaybeMessage<AgleConfMsg_NtpMsg_NtpEntityMsg>(nullptr);
  }

  AgleConfMsg_NtpMsg_NtpEntityMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AgleConfMsg_NtpMsg_NtpEntityMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AgleConfMsg_NtpMsg_NtpEntityMsg& from);
  void MergeFrom(const AgleConfMsg_NtpMsg_NtpEntityMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgleConfMsg_NtpMsg_NtpEntityMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agle_5fconf_2eproto);
    return ::descriptor_table_agle_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServerNameFieldNumber = 1,
  };
  // string server_name = 1;
  void clear_server_name();
  const std::string& server_name() const;
  void set_server_name(const std::string& value);
  void set_server_name(std::string&& value);
  void set_server_name(const char* value);
  void set_server_name(const char* value, size_t size);
  std::string* mutable_server_name();
  std::string* release_server_name();
  void set_allocated_server_name(std::string* server_name);
  private:
  const std::string& _internal_server_name() const;
  void _internal_set_server_name(const std::string& value);
  std::string* _internal_mutable_server_name();
  public:

  // @@protoc_insertion_point(class_scope:ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr server_name_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agle_5fconf_2eproto;
};
// -------------------------------------------------------------------

class AgleConfMsg_NtpMsg :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ivi.agle.AgleConfMsg.NtpMsg) */ {
 public:
  AgleConfMsg_NtpMsg();
  virtual ~AgleConfMsg_NtpMsg();

  AgleConfMsg_NtpMsg(const AgleConfMsg_NtpMsg& from);
  AgleConfMsg_NtpMsg(AgleConfMsg_NtpMsg&& from) noexcept
    : AgleConfMsg_NtpMsg() {
    *this = ::std::move(from);
  }

  inline AgleConfMsg_NtpMsg& operator=(const AgleConfMsg_NtpMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgleConfMsg_NtpMsg& operator=(AgleConfMsg_NtpMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AgleConfMsg_NtpMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AgleConfMsg_NtpMsg* internal_default_instance() {
    return reinterpret_cast<const AgleConfMsg_NtpMsg*>(
               &_AgleConfMsg_NtpMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AgleConfMsg_NtpMsg& a, AgleConfMsg_NtpMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(AgleConfMsg_NtpMsg* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AgleConfMsg_NtpMsg* New() const final {
    return CreateMaybeMessage<AgleConfMsg_NtpMsg>(nullptr);
  }

  AgleConfMsg_NtpMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AgleConfMsg_NtpMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AgleConfMsg_NtpMsg& from);
  void MergeFrom(const AgleConfMsg_NtpMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgleConfMsg_NtpMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ivi.agle.AgleConfMsg.NtpMsg";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agle_5fconf_2eproto);
    return ::descriptor_table_agle_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef AgleConfMsg_NtpMsg_NtpEntityMsg NtpEntityMsg;

  // accessors -------------------------------------------------------

  enum : int {
    kNtpServerFieldNumber = 2,
    kIsEnableFieldNumber = 1,
  };
  // repeated .ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg ntp_server = 2;
  int ntp_server_size() const;
  private:
  int _internal_ntp_server_size() const;
  public:
  void clear_ntp_server();
  ::ivi::agle::AgleConfMsg_NtpMsg_NtpEntityMsg* mutable_ntp_server(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ivi::agle::AgleConfMsg_NtpMsg_NtpEntityMsg >*
      mutable_ntp_server();
  private:
  const ::ivi::agle::AgleConfMsg_NtpMsg_NtpEntityMsg& _internal_ntp_server(int index) const;
  ::ivi::agle::AgleConfMsg_NtpMsg_NtpEntityMsg* _internal_add_ntp_server();
  public:
  const ::ivi::agle::AgleConfMsg_NtpMsg_NtpEntityMsg& ntp_server(int index) const;
  ::ivi::agle::AgleConfMsg_NtpMsg_NtpEntityMsg* add_ntp_server();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ivi::agle::AgleConfMsg_NtpMsg_NtpEntityMsg >&
      ntp_server() const;

  // bool is_enable = 1;
  void clear_is_enable();
  bool is_enable() const;
  void set_is_enable(bool value);
  private:
  bool _internal_is_enable() const;
  void _internal_set_is_enable(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ivi.agle.AgleConfMsg.NtpMsg)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ivi::agle::AgleConfMsg_NtpMsg_NtpEntityMsg > ntp_server_;
  bool is_enable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agle_5fconf_2eproto;
};
// -------------------------------------------------------------------

class AgleConfMsg_LogMsg :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ivi.agle.AgleConfMsg.LogMsg) */ {
 public:
  AgleConfMsg_LogMsg();
  virtual ~AgleConfMsg_LogMsg();

  AgleConfMsg_LogMsg(const AgleConfMsg_LogMsg& from);
  AgleConfMsg_LogMsg(AgleConfMsg_LogMsg&& from) noexcept
    : AgleConfMsg_LogMsg() {
    *this = ::std::move(from);
  }

  inline AgleConfMsg_LogMsg& operator=(const AgleConfMsg_LogMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgleConfMsg_LogMsg& operator=(AgleConfMsg_LogMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AgleConfMsg_LogMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AgleConfMsg_LogMsg* internal_default_instance() {
    return reinterpret_cast<const AgleConfMsg_LogMsg*>(
               &_AgleConfMsg_LogMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(AgleConfMsg_LogMsg& a, AgleConfMsg_LogMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(AgleConfMsg_LogMsg* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AgleConfMsg_LogMsg* New() const final {
    return CreateMaybeMessage<AgleConfMsg_LogMsg>(nullptr);
  }

  AgleConfMsg_LogMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AgleConfMsg_LogMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AgleConfMsg_LogMsg& from);
  void MergeFrom(const AgleConfMsg_LogMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgleConfMsg_LogMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ivi.agle.AgleConfMsg.LogMsg";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agle_5fconf_2eproto);
    return ::descriptor_table_agle_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLogPathFieldNumber = 2,
    kIsEnableFieldNumber = 1,
  };
  // string log_path = 2;
  void clear_log_path();
  const std::string& log_path() const;
  void set_log_path(const std::string& value);
  void set_log_path(std::string&& value);
  void set_log_path(const char* value);
  void set_log_path(const char* value, size_t size);
  std::string* mutable_log_path();
  std::string* release_log_path();
  void set_allocated_log_path(std::string* log_path);
  private:
  const std::string& _internal_log_path() const;
  void _internal_set_log_path(const std::string& value);
  std::string* _internal_mutable_log_path();
  public:

  // bool is_enable = 1;
  void clear_is_enable();
  bool is_enable() const;
  void set_is_enable(bool value);
  private:
  bool _internal_is_enable() const;
  void _internal_set_is_enable(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ivi.agle.AgleConfMsg.LogMsg)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr log_path_;
  bool is_enable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agle_5fconf_2eproto;
};
// -------------------------------------------------------------------

class AgleConfMsg_ManagementMsg :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ivi.agle.AgleConfMsg.ManagementMsg) */ {
 public:
  AgleConfMsg_ManagementMsg();
  virtual ~AgleConfMsg_ManagementMsg();

  AgleConfMsg_ManagementMsg(const AgleConfMsg_ManagementMsg& from);
  AgleConfMsg_ManagementMsg(AgleConfMsg_ManagementMsg&& from) noexcept
    : AgleConfMsg_ManagementMsg() {
    *this = ::std::move(from);
  }

  inline AgleConfMsg_ManagementMsg& operator=(const AgleConfMsg_ManagementMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgleConfMsg_ManagementMsg& operator=(AgleConfMsg_ManagementMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AgleConfMsg_ManagementMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AgleConfMsg_ManagementMsg* internal_default_instance() {
    return reinterpret_cast<const AgleConfMsg_ManagementMsg*>(
               &_AgleConfMsg_ManagementMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(AgleConfMsg_ManagementMsg& a, AgleConfMsg_ManagementMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(AgleConfMsg_ManagementMsg* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AgleConfMsg_ManagementMsg* New() const final {
    return CreateMaybeMessage<AgleConfMsg_ManagementMsg>(nullptr);
  }

  AgleConfMsg_ManagementMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AgleConfMsg_ManagementMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AgleConfMsg_ManagementMsg& from);
  void MergeFrom(const AgleConfMsg_ManagementMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgleConfMsg_ManagementMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ivi.agle.AgleConfMsg.ManagementMsg";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agle_5fconf_2eproto);
    return ::descriptor_table_agle_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTcpServerIpFieldNumber = 2,
    kClientTypeFieldNumber = 4,
    kClientIDFieldNumber = 5,
    kIsEnableFieldNumber = 1,
    kTcpServerPortFieldNumber = 3,
    kLoginIntervalFieldNumber = 6,
  };
  // string tcp_server_ip = 2;
  void clear_tcp_server_ip();
  const std::string& tcp_server_ip() const;
  void set_tcp_server_ip(const std::string& value);
  void set_tcp_server_ip(std::string&& value);
  void set_tcp_server_ip(const char* value);
  void set_tcp_server_ip(const char* value, size_t size);
  std::string* mutable_tcp_server_ip();
  std::string* release_tcp_server_ip();
  void set_allocated_tcp_server_ip(std::string* tcp_server_ip);
  private:
  const std::string& _internal_tcp_server_ip() const;
  void _internal_set_tcp_server_ip(const std::string& value);
  std::string* _internal_mutable_tcp_server_ip();
  public:

  // string client_type = 4;
  void clear_client_type();
  const std::string& client_type() const;
  void set_client_type(const std::string& value);
  void set_client_type(std::string&& value);
  void set_client_type(const char* value);
  void set_client_type(const char* value, size_t size);
  std::string* mutable_client_type();
  std::string* release_client_type();
  void set_allocated_client_type(std::string* client_type);
  private:
  const std::string& _internal_client_type() const;
  void _internal_set_client_type(const std::string& value);
  std::string* _internal_mutable_client_type();
  public:

  // string client_ID = 5;
  void clear_client_id();
  const std::string& client_id() const;
  void set_client_id(const std::string& value);
  void set_client_id(std::string&& value);
  void set_client_id(const char* value);
  void set_client_id(const char* value, size_t size);
  std::string* mutable_client_id();
  std::string* release_client_id();
  void set_allocated_client_id(std::string* client_id);
  private:
  const std::string& _internal_client_id() const;
  void _internal_set_client_id(const std::string& value);
  std::string* _internal_mutable_client_id();
  public:

  // bool is_enable = 1;
  void clear_is_enable();
  bool is_enable() const;
  void set_is_enable(bool value);
  private:
  bool _internal_is_enable() const;
  void _internal_set_is_enable(bool value);
  public:

  // uint32 tcp_server_port = 3;
  void clear_tcp_server_port();
  ::PROTOBUF_NAMESPACE_ID::uint32 tcp_server_port() const;
  void set_tcp_server_port(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tcp_server_port() const;
  void _internal_set_tcp_server_port(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 login_interval = 6;
  void clear_login_interval();
  ::PROTOBUF_NAMESPACE_ID::uint32 login_interval() const;
  void set_login_interval(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_login_interval() const;
  void _internal_set_login_interval(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:ivi.agle.AgleConfMsg.ManagementMsg)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tcp_server_ip_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr client_type_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr client_id_;
  bool is_enable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tcp_server_port_;
  ::PROTOBUF_NAMESPACE_ID::uint32 login_interval_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agle_5fconf_2eproto;
};
// -------------------------------------------------------------------

class AgleConfMsg_RecordMsg :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ivi.agle.AgleConfMsg.RecordMsg) */ {
 public:
  AgleConfMsg_RecordMsg();
  virtual ~AgleConfMsg_RecordMsg();

  AgleConfMsg_RecordMsg(const AgleConfMsg_RecordMsg& from);
  AgleConfMsg_RecordMsg(AgleConfMsg_RecordMsg&& from) noexcept
    : AgleConfMsg_RecordMsg() {
    *this = ::std::move(from);
  }

  inline AgleConfMsg_RecordMsg& operator=(const AgleConfMsg_RecordMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgleConfMsg_RecordMsg& operator=(AgleConfMsg_RecordMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AgleConfMsg_RecordMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AgleConfMsg_RecordMsg* internal_default_instance() {
    return reinterpret_cast<const AgleConfMsg_RecordMsg*>(
               &_AgleConfMsg_RecordMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(AgleConfMsg_RecordMsg& a, AgleConfMsg_RecordMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(AgleConfMsg_RecordMsg* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AgleConfMsg_RecordMsg* New() const final {
    return CreateMaybeMessage<AgleConfMsg_RecordMsg>(nullptr);
  }

  AgleConfMsg_RecordMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AgleConfMsg_RecordMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AgleConfMsg_RecordMsg& from);
  void MergeFrom(const AgleConfMsg_RecordMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgleConfMsg_RecordMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ivi.agle.AgleConfMsg.RecordMsg";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agle_5fconf_2eproto);
    return ::descriptor_table_agle_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRecPathFieldNumber = 2,
    kRecStartTimeFieldNumber = 6,
    kRecStopTimeFieldNumber = 7,
    kIsEnableFieldNumber = 1,
    kRecRecycleDaysFieldNumber = 3,
    kRecSegmentHourFieldNumber = 4,
    kRecSegmentMinutesFieldNumber = 5,
  };
  // string rec_path = 2;
  void clear_rec_path();
  const std::string& rec_path() const;
  void set_rec_path(const std::string& value);
  void set_rec_path(std::string&& value);
  void set_rec_path(const char* value);
  void set_rec_path(const char* value, size_t size);
  std::string* mutable_rec_path();
  std::string* release_rec_path();
  void set_allocated_rec_path(std::string* rec_path);
  private:
  const std::string& _internal_rec_path() const;
  void _internal_set_rec_path(const std::string& value);
  std::string* _internal_mutable_rec_path();
  public:

  // string rec_start_time = 6;
  void clear_rec_start_time();
  const std::string& rec_start_time() const;
  void set_rec_start_time(const std::string& value);
  void set_rec_start_time(std::string&& value);
  void set_rec_start_time(const char* value);
  void set_rec_start_time(const char* value, size_t size);
  std::string* mutable_rec_start_time();
  std::string* release_rec_start_time();
  void set_allocated_rec_start_time(std::string* rec_start_time);
  private:
  const std::string& _internal_rec_start_time() const;
  void _internal_set_rec_start_time(const std::string& value);
  std::string* _internal_mutable_rec_start_time();
  public:

  // string rec_stop_time = 7;
  void clear_rec_stop_time();
  const std::string& rec_stop_time() const;
  void set_rec_stop_time(const std::string& value);
  void set_rec_stop_time(std::string&& value);
  void set_rec_stop_time(const char* value);
  void set_rec_stop_time(const char* value, size_t size);
  std::string* mutable_rec_stop_time();
  std::string* release_rec_stop_time();
  void set_allocated_rec_stop_time(std::string* rec_stop_time);
  private:
  const std::string& _internal_rec_stop_time() const;
  void _internal_set_rec_stop_time(const std::string& value);
  std::string* _internal_mutable_rec_stop_time();
  public:

  // bool is_enable = 1;
  void clear_is_enable();
  bool is_enable() const;
  void set_is_enable(bool value);
  private:
  bool _internal_is_enable() const;
  void _internal_set_is_enable(bool value);
  public:

  // uint32 rec_recycle_days = 3;
  void clear_rec_recycle_days();
  ::PROTOBUF_NAMESPACE_ID::uint32 rec_recycle_days() const;
  void set_rec_recycle_days(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rec_recycle_days() const;
  void _internal_set_rec_recycle_days(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 rec_segment_hour = 4;
  void clear_rec_segment_hour();
  ::PROTOBUF_NAMESPACE_ID::uint32 rec_segment_hour() const;
  void set_rec_segment_hour(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rec_segment_hour() const;
  void _internal_set_rec_segment_hour(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 rec_segment_minutes = 5;
  void clear_rec_segment_minutes();
  ::PROTOBUF_NAMESPACE_ID::uint32 rec_segment_minutes() const;
  void set_rec_segment_minutes(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rec_segment_minutes() const;
  void _internal_set_rec_segment_minutes(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:ivi.agle.AgleConfMsg.RecordMsg)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr rec_path_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr rec_start_time_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr rec_stop_time_;
  bool is_enable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rec_recycle_days_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rec_segment_hour_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rec_segment_minutes_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agle_5fconf_2eproto;
};
// -------------------------------------------------------------------

class AgleConfMsg_RtmpServerMsg_ServerEntityMsg :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg) */ {
 public:
  AgleConfMsg_RtmpServerMsg_ServerEntityMsg();
  virtual ~AgleConfMsg_RtmpServerMsg_ServerEntityMsg();

  AgleConfMsg_RtmpServerMsg_ServerEntityMsg(const AgleConfMsg_RtmpServerMsg_ServerEntityMsg& from);
  AgleConfMsg_RtmpServerMsg_ServerEntityMsg(AgleConfMsg_RtmpServerMsg_ServerEntityMsg&& from) noexcept
    : AgleConfMsg_RtmpServerMsg_ServerEntityMsg() {
    *this = ::std::move(from);
  }

  inline AgleConfMsg_RtmpServerMsg_ServerEntityMsg& operator=(const AgleConfMsg_RtmpServerMsg_ServerEntityMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgleConfMsg_RtmpServerMsg_ServerEntityMsg& operator=(AgleConfMsg_RtmpServerMsg_ServerEntityMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AgleConfMsg_RtmpServerMsg_ServerEntityMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AgleConfMsg_RtmpServerMsg_ServerEntityMsg* internal_default_instance() {
    return reinterpret_cast<const AgleConfMsg_RtmpServerMsg_ServerEntityMsg*>(
               &_AgleConfMsg_RtmpServerMsg_ServerEntityMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(AgleConfMsg_RtmpServerMsg_ServerEntityMsg& a, AgleConfMsg_RtmpServerMsg_ServerEntityMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(AgleConfMsg_RtmpServerMsg_ServerEntityMsg* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AgleConfMsg_RtmpServerMsg_ServerEntityMsg* New() const final {
    return CreateMaybeMessage<AgleConfMsg_RtmpServerMsg_ServerEntityMsg>(nullptr);
  }

  AgleConfMsg_RtmpServerMsg_ServerEntityMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AgleConfMsg_RtmpServerMsg_ServerEntityMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AgleConfMsg_RtmpServerMsg_ServerEntityMsg& from);
  void MergeFrom(const AgleConfMsg_RtmpServerMsg_ServerEntityMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgleConfMsg_RtmpServerMsg_ServerEntityMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agle_5fconf_2eproto);
    return ::descriptor_table_agle_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRtmpServerUrlFieldNumber = 3,
    kStreamNameFieldNumber = 4,
    kIsMasterFieldNumber = 1,
    kEntityIdFieldNumber = 2,
  };
  // string rtmp_server_url = 3;
  void clear_rtmp_server_url();
  const std::string& rtmp_server_url() const;
  void set_rtmp_server_url(const std::string& value);
  void set_rtmp_server_url(std::string&& value);
  void set_rtmp_server_url(const char* value);
  void set_rtmp_server_url(const char* value, size_t size);
  std::string* mutable_rtmp_server_url();
  std::string* release_rtmp_server_url();
  void set_allocated_rtmp_server_url(std::string* rtmp_server_url);
  private:
  const std::string& _internal_rtmp_server_url() const;
  void _internal_set_rtmp_server_url(const std::string& value);
  std::string* _internal_mutable_rtmp_server_url();
  public:

  // string stream_name = 4;
  void clear_stream_name();
  const std::string& stream_name() const;
  void set_stream_name(const std::string& value);
  void set_stream_name(std::string&& value);
  void set_stream_name(const char* value);
  void set_stream_name(const char* value, size_t size);
  std::string* mutable_stream_name();
  std::string* release_stream_name();
  void set_allocated_stream_name(std::string* stream_name);
  private:
  const std::string& _internal_stream_name() const;
  void _internal_set_stream_name(const std::string& value);
  std::string* _internal_mutable_stream_name();
  public:

  // bool is_master = 1;
  void clear_is_master();
  bool is_master() const;
  void set_is_master(bool value);
  private:
  bool _internal_is_master() const;
  void _internal_set_is_master(bool value);
  public:

  // uint32 entity_id = 2;
  void clear_entity_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 entity_id() const;
  void set_entity_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_entity_id() const;
  void _internal_set_entity_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr rtmp_server_url_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr stream_name_;
  bool is_master_;
  ::PROTOBUF_NAMESPACE_ID::uint32 entity_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agle_5fconf_2eproto;
};
// -------------------------------------------------------------------

class AgleConfMsg_RtmpServerMsg :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ivi.agle.AgleConfMsg.RtmpServerMsg) */ {
 public:
  AgleConfMsg_RtmpServerMsg();
  virtual ~AgleConfMsg_RtmpServerMsg();

  AgleConfMsg_RtmpServerMsg(const AgleConfMsg_RtmpServerMsg& from);
  AgleConfMsg_RtmpServerMsg(AgleConfMsg_RtmpServerMsg&& from) noexcept
    : AgleConfMsg_RtmpServerMsg() {
    *this = ::std::move(from);
  }

  inline AgleConfMsg_RtmpServerMsg& operator=(const AgleConfMsg_RtmpServerMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgleConfMsg_RtmpServerMsg& operator=(AgleConfMsg_RtmpServerMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AgleConfMsg_RtmpServerMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AgleConfMsg_RtmpServerMsg* internal_default_instance() {
    return reinterpret_cast<const AgleConfMsg_RtmpServerMsg*>(
               &_AgleConfMsg_RtmpServerMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(AgleConfMsg_RtmpServerMsg& a, AgleConfMsg_RtmpServerMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(AgleConfMsg_RtmpServerMsg* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AgleConfMsg_RtmpServerMsg* New() const final {
    return CreateMaybeMessage<AgleConfMsg_RtmpServerMsg>(nullptr);
  }

  AgleConfMsg_RtmpServerMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AgleConfMsg_RtmpServerMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AgleConfMsg_RtmpServerMsg& from);
  void MergeFrom(const AgleConfMsg_RtmpServerMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgleConfMsg_RtmpServerMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ivi.agle.AgleConfMsg.RtmpServerMsg";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agle_5fconf_2eproto);
    return ::descriptor_table_agle_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef AgleConfMsg_RtmpServerMsg_ServerEntityMsg ServerEntityMsg;

  // accessors -------------------------------------------------------

  enum : int {
    kRtmpServersFieldNumber = 2,
    kIsEnableFieldNumber = 1,
  };
  // repeated .ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg rtmp_servers = 2;
  int rtmp_servers_size() const;
  private:
  int _internal_rtmp_servers_size() const;
  public:
  void clear_rtmp_servers();
  ::ivi::agle::AgleConfMsg_RtmpServerMsg_ServerEntityMsg* mutable_rtmp_servers(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ivi::agle::AgleConfMsg_RtmpServerMsg_ServerEntityMsg >*
      mutable_rtmp_servers();
  private:
  const ::ivi::agle::AgleConfMsg_RtmpServerMsg_ServerEntityMsg& _internal_rtmp_servers(int index) const;
  ::ivi::agle::AgleConfMsg_RtmpServerMsg_ServerEntityMsg* _internal_add_rtmp_servers();
  public:
  const ::ivi::agle::AgleConfMsg_RtmpServerMsg_ServerEntityMsg& rtmp_servers(int index) const;
  ::ivi::agle::AgleConfMsg_RtmpServerMsg_ServerEntityMsg* add_rtmp_servers();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ivi::agle::AgleConfMsg_RtmpServerMsg_ServerEntityMsg >&
      rtmp_servers() const;

  // bool is_enable = 1;
  void clear_is_enable();
  bool is_enable() const;
  void set_is_enable(bool value);
  private:
  bool _internal_is_enable() const;
  void _internal_set_is_enable(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ivi.agle.AgleConfMsg.RtmpServerMsg)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ivi::agle::AgleConfMsg_RtmpServerMsg_ServerEntityMsg > rtmp_servers_;
  bool is_enable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agle_5fconf_2eproto;
};
// -------------------------------------------------------------------

class AgleConfMsg_AudiosMsg_AudioEntityMsg :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg) */ {
 public:
  AgleConfMsg_AudiosMsg_AudioEntityMsg();
  virtual ~AgleConfMsg_AudiosMsg_AudioEntityMsg();

  AgleConfMsg_AudiosMsg_AudioEntityMsg(const AgleConfMsg_AudiosMsg_AudioEntityMsg& from);
  AgleConfMsg_AudiosMsg_AudioEntityMsg(AgleConfMsg_AudiosMsg_AudioEntityMsg&& from) noexcept
    : AgleConfMsg_AudiosMsg_AudioEntityMsg() {
    *this = ::std::move(from);
  }

  inline AgleConfMsg_AudiosMsg_AudioEntityMsg& operator=(const AgleConfMsg_AudiosMsg_AudioEntityMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgleConfMsg_AudiosMsg_AudioEntityMsg& operator=(AgleConfMsg_AudiosMsg_AudioEntityMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AgleConfMsg_AudiosMsg_AudioEntityMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AgleConfMsg_AudiosMsg_AudioEntityMsg* internal_default_instance() {
    return reinterpret_cast<const AgleConfMsg_AudiosMsg_AudioEntityMsg*>(
               &_AgleConfMsg_AudiosMsg_AudioEntityMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(AgleConfMsg_AudiosMsg_AudioEntityMsg& a, AgleConfMsg_AudiosMsg_AudioEntityMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(AgleConfMsg_AudiosMsg_AudioEntityMsg* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AgleConfMsg_AudiosMsg_AudioEntityMsg* New() const final {
    return CreateMaybeMessage<AgleConfMsg_AudiosMsg_AudioEntityMsg>(nullptr);
  }

  AgleConfMsg_AudiosMsg_AudioEntityMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AgleConfMsg_AudiosMsg_AudioEntityMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AgleConfMsg_AudiosMsg_AudioEntityMsg& from);
  void MergeFrom(const AgleConfMsg_AudiosMsg_AudioEntityMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgleConfMsg_AudiosMsg_AudioEntityMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agle_5fconf_2eproto);
    return ::descriptor_table_agle_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannelsFieldNumber = 3,
    kIsEnableFieldNumber = 1,
    kEntityIdFieldNumber = 2,
    kBitrateFieldNumber = 4,
    kFormatFieldNumber = 5,
    kSamplerateFieldNumber = 6,
  };
  // string channels = 3;
  void clear_channels();
  const std::string& channels() const;
  void set_channels(const std::string& value);
  void set_channels(std::string&& value);
  void set_channels(const char* value);
  void set_channels(const char* value, size_t size);
  std::string* mutable_channels();
  std::string* release_channels();
  void set_allocated_channels(std::string* channels);
  private:
  const std::string& _internal_channels() const;
  void _internal_set_channels(const std::string& value);
  std::string* _internal_mutable_channels();
  public:

  // bool is_enable = 1;
  void clear_is_enable();
  bool is_enable() const;
  void set_is_enable(bool value);
  private:
  bool _internal_is_enable() const;
  void _internal_set_is_enable(bool value);
  public:

  // uint32 entity_id = 2;
  void clear_entity_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 entity_id() const;
  void set_entity_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_entity_id() const;
  void _internal_set_entity_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // .ivi.agle.AgleConfMsg.AudiosMsg.EnumAudioBitrate bitrate = 4;
  void clear_bitrate();
  ::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioBitrate bitrate() const;
  void set_bitrate(::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioBitrate value);
  private:
  ::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioBitrate _internal_bitrate() const;
  void _internal_set_bitrate(::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioBitrate value);
  public:

  // .ivi.agle.AgleConfMsg.AudiosMsg.EnumAudioFormat format = 5;
  void clear_format();
  ::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioFormat format() const;
  void set_format(::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioFormat value);
  private:
  ::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioFormat _internal_format() const;
  void _internal_set_format(::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioFormat value);
  public:

  // .ivi.agle.AgleConfMsg.AudiosMsg.EnumAudioSamplerate samplerate = 6;
  void clear_samplerate();
  ::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioSamplerate samplerate() const;
  void set_samplerate(::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioSamplerate value);
  private:
  ::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioSamplerate _internal_samplerate() const;
  void _internal_set_samplerate(::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioSamplerate value);
  public:

  // @@protoc_insertion_point(class_scope:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr channels_;
  bool is_enable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 entity_id_;
  int bitrate_;
  int format_;
  int samplerate_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agle_5fconf_2eproto;
};
// -------------------------------------------------------------------

class AgleConfMsg_AudiosMsg :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ivi.agle.AgleConfMsg.AudiosMsg) */ {
 public:
  AgleConfMsg_AudiosMsg();
  virtual ~AgleConfMsg_AudiosMsg();

  AgleConfMsg_AudiosMsg(const AgleConfMsg_AudiosMsg& from);
  AgleConfMsg_AudiosMsg(AgleConfMsg_AudiosMsg&& from) noexcept
    : AgleConfMsg_AudiosMsg() {
    *this = ::std::move(from);
  }

  inline AgleConfMsg_AudiosMsg& operator=(const AgleConfMsg_AudiosMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgleConfMsg_AudiosMsg& operator=(AgleConfMsg_AudiosMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AgleConfMsg_AudiosMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AgleConfMsg_AudiosMsg* internal_default_instance() {
    return reinterpret_cast<const AgleConfMsg_AudiosMsg*>(
               &_AgleConfMsg_AudiosMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(AgleConfMsg_AudiosMsg& a, AgleConfMsg_AudiosMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(AgleConfMsg_AudiosMsg* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AgleConfMsg_AudiosMsg* New() const final {
    return CreateMaybeMessage<AgleConfMsg_AudiosMsg>(nullptr);
  }

  AgleConfMsg_AudiosMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AgleConfMsg_AudiosMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AgleConfMsg_AudiosMsg& from);
  void MergeFrom(const AgleConfMsg_AudiosMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgleConfMsg_AudiosMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ivi.agle.AgleConfMsg.AudiosMsg";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agle_5fconf_2eproto);
    return ::descriptor_table_agle_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef AgleConfMsg_AudiosMsg_AudioEntityMsg AudioEntityMsg;

  typedef AgleConfMsg_AudiosMsg_EnumAudioBitrate EnumAudioBitrate;
  static constexpr EnumAudioBitrate kbps_320 =
    AgleConfMsg_AudiosMsg_EnumAudioBitrate_kbps_320;
  static constexpr EnumAudioBitrate kbps_256 =
    AgleConfMsg_AudiosMsg_EnumAudioBitrate_kbps_256;
  static constexpr EnumAudioBitrate kbps_128 =
    AgleConfMsg_AudiosMsg_EnumAudioBitrate_kbps_128;
  static constexpr EnumAudioBitrate kbps_96 =
    AgleConfMsg_AudiosMsg_EnumAudioBitrate_kbps_96;
  static constexpr EnumAudioBitrate kbps_80 =
    AgleConfMsg_AudiosMsg_EnumAudioBitrate_kbps_80;
  static constexpr EnumAudioBitrate kbps_64 =
    AgleConfMsg_AudiosMsg_EnumAudioBitrate_kbps_64;
  static constexpr EnumAudioBitrate kbps_48 =
    AgleConfMsg_AudiosMsg_EnumAudioBitrate_kbps_48;
  static constexpr EnumAudioBitrate kbps_36 =
    AgleConfMsg_AudiosMsg_EnumAudioBitrate_kbps_36;
  static inline bool EnumAudioBitrate_IsValid(int value) {
    return AgleConfMsg_AudiosMsg_EnumAudioBitrate_IsValid(value);
  }
  static constexpr EnumAudioBitrate EnumAudioBitrate_MIN =
    AgleConfMsg_AudiosMsg_EnumAudioBitrate_EnumAudioBitrate_MIN;
  static constexpr EnumAudioBitrate EnumAudioBitrate_MAX =
    AgleConfMsg_AudiosMsg_EnumAudioBitrate_EnumAudioBitrate_MAX;
  static constexpr int EnumAudioBitrate_ARRAYSIZE =
    AgleConfMsg_AudiosMsg_EnumAudioBitrate_EnumAudioBitrate_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EnumAudioBitrate_descriptor() {
    return AgleConfMsg_AudiosMsg_EnumAudioBitrate_descriptor();
  }
  template<typename T>
  static inline const std::string& EnumAudioBitrate_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EnumAudioBitrate>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EnumAudioBitrate_Name.");
    return AgleConfMsg_AudiosMsg_EnumAudioBitrate_Name(enum_t_value);
  }
  static inline bool EnumAudioBitrate_Parse(const std::string& name,
      EnumAudioBitrate* value) {
    return AgleConfMsg_AudiosMsg_EnumAudioBitrate_Parse(name, value);
  }

  typedef AgleConfMsg_AudiosMsg_EnumAudioFormat EnumAudioFormat;
  static constexpr EnumAudioFormat aac_low =
    AgleConfMsg_AudiosMsg_EnumAudioFormat_aac_low;
  static inline bool EnumAudioFormat_IsValid(int value) {
    return AgleConfMsg_AudiosMsg_EnumAudioFormat_IsValid(value);
  }
  static constexpr EnumAudioFormat EnumAudioFormat_MIN =
    AgleConfMsg_AudiosMsg_EnumAudioFormat_EnumAudioFormat_MIN;
  static constexpr EnumAudioFormat EnumAudioFormat_MAX =
    AgleConfMsg_AudiosMsg_EnumAudioFormat_EnumAudioFormat_MAX;
  static constexpr int EnumAudioFormat_ARRAYSIZE =
    AgleConfMsg_AudiosMsg_EnumAudioFormat_EnumAudioFormat_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EnumAudioFormat_descriptor() {
    return AgleConfMsg_AudiosMsg_EnumAudioFormat_descriptor();
  }
  template<typename T>
  static inline const std::string& EnumAudioFormat_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EnumAudioFormat>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EnumAudioFormat_Name.");
    return AgleConfMsg_AudiosMsg_EnumAudioFormat_Name(enum_t_value);
  }
  static inline bool EnumAudioFormat_Parse(const std::string& name,
      EnumAudioFormat* value) {
    return AgleConfMsg_AudiosMsg_EnumAudioFormat_Parse(name, value);
  }

  typedef AgleConfMsg_AudiosMsg_EnumAudioSamplerate EnumAudioSamplerate;
  static constexpr EnumAudioSamplerate Hz_48000 =
    AgleConfMsg_AudiosMsg_EnumAudioSamplerate_Hz_48000;
  static constexpr EnumAudioSamplerate Hz_44100 =
    AgleConfMsg_AudiosMsg_EnumAudioSamplerate_Hz_44100;
  static constexpr EnumAudioSamplerate Hz_24000 =
    AgleConfMsg_AudiosMsg_EnumAudioSamplerate_Hz_24000;
  static constexpr EnumAudioSamplerate Hz_22050 =
    AgleConfMsg_AudiosMsg_EnumAudioSamplerate_Hz_22050;
  static constexpr EnumAudioSamplerate Hz_16000 =
    AgleConfMsg_AudiosMsg_EnumAudioSamplerate_Hz_16000;
  static inline bool EnumAudioSamplerate_IsValid(int value) {
    return AgleConfMsg_AudiosMsg_EnumAudioSamplerate_IsValid(value);
  }
  static constexpr EnumAudioSamplerate EnumAudioSamplerate_MIN =
    AgleConfMsg_AudiosMsg_EnumAudioSamplerate_EnumAudioSamplerate_MIN;
  static constexpr EnumAudioSamplerate EnumAudioSamplerate_MAX =
    AgleConfMsg_AudiosMsg_EnumAudioSamplerate_EnumAudioSamplerate_MAX;
  static constexpr int EnumAudioSamplerate_ARRAYSIZE =
    AgleConfMsg_AudiosMsg_EnumAudioSamplerate_EnumAudioSamplerate_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EnumAudioSamplerate_descriptor() {
    return AgleConfMsg_AudiosMsg_EnumAudioSamplerate_descriptor();
  }
  template<typename T>
  static inline const std::string& EnumAudioSamplerate_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EnumAudioSamplerate>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EnumAudioSamplerate_Name.");
    return AgleConfMsg_AudiosMsg_EnumAudioSamplerate_Name(enum_t_value);
  }
  static inline bool EnumAudioSamplerate_Parse(const std::string& name,
      EnumAudioSamplerate* value) {
    return AgleConfMsg_AudiosMsg_EnumAudioSamplerate_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kAudiosFieldNumber = 4,
    kDeviceNameFieldNumber = 2,
    kDevicePathFieldNumber = 3,
    kIsEnableFieldNumber = 1,
  };
  // repeated .ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg audios = 4;
  int audios_size() const;
  private:
  int _internal_audios_size() const;
  public:
  void clear_audios();
  ::ivi::agle::AgleConfMsg_AudiosMsg_AudioEntityMsg* mutable_audios(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ivi::agle::AgleConfMsg_AudiosMsg_AudioEntityMsg >*
      mutable_audios();
  private:
  const ::ivi::agle::AgleConfMsg_AudiosMsg_AudioEntityMsg& _internal_audios(int index) const;
  ::ivi::agle::AgleConfMsg_AudiosMsg_AudioEntityMsg* _internal_add_audios();
  public:
  const ::ivi::agle::AgleConfMsg_AudiosMsg_AudioEntityMsg& audios(int index) const;
  ::ivi::agle::AgleConfMsg_AudiosMsg_AudioEntityMsg* add_audios();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ivi::agle::AgleConfMsg_AudiosMsg_AudioEntityMsg >&
      audios() const;

  // string device_name = 2;
  void clear_device_name();
  const std::string& device_name() const;
  void set_device_name(const std::string& value);
  void set_device_name(std::string&& value);
  void set_device_name(const char* value);
  void set_device_name(const char* value, size_t size);
  std::string* mutable_device_name();
  std::string* release_device_name();
  void set_allocated_device_name(std::string* device_name);
  private:
  const std::string& _internal_device_name() const;
  void _internal_set_device_name(const std::string& value);
  std::string* _internal_mutable_device_name();
  public:

  // string device_path = 3;
  void clear_device_path();
  const std::string& device_path() const;
  void set_device_path(const std::string& value);
  void set_device_path(std::string&& value);
  void set_device_path(const char* value);
  void set_device_path(const char* value, size_t size);
  std::string* mutable_device_path();
  std::string* release_device_path();
  void set_allocated_device_path(std::string* device_path);
  private:
  const std::string& _internal_device_path() const;
  void _internal_set_device_path(const std::string& value);
  std::string* _internal_mutable_device_path();
  public:

  // bool is_enable = 1;
  void clear_is_enable();
  bool is_enable() const;
  void set_is_enable(bool value);
  private:
  bool _internal_is_enable() const;
  void _internal_set_is_enable(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ivi.agle.AgleConfMsg.AudiosMsg)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ivi::agle::AgleConfMsg_AudiosMsg_AudioEntityMsg > audios_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr device_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr device_path_;
  bool is_enable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agle_5fconf_2eproto;
};
// -------------------------------------------------------------------

class AgleConfMsg_VideosMsg_CropMsg :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ivi.agle.AgleConfMsg.VideosMsg.CropMsg) */ {
 public:
  AgleConfMsg_VideosMsg_CropMsg();
  virtual ~AgleConfMsg_VideosMsg_CropMsg();

  AgleConfMsg_VideosMsg_CropMsg(const AgleConfMsg_VideosMsg_CropMsg& from);
  AgleConfMsg_VideosMsg_CropMsg(AgleConfMsg_VideosMsg_CropMsg&& from) noexcept
    : AgleConfMsg_VideosMsg_CropMsg() {
    *this = ::std::move(from);
  }

  inline AgleConfMsg_VideosMsg_CropMsg& operator=(const AgleConfMsg_VideosMsg_CropMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgleConfMsg_VideosMsg_CropMsg& operator=(AgleConfMsg_VideosMsg_CropMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AgleConfMsg_VideosMsg_CropMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AgleConfMsg_VideosMsg_CropMsg* internal_default_instance() {
    return reinterpret_cast<const AgleConfMsg_VideosMsg_CropMsg*>(
               &_AgleConfMsg_VideosMsg_CropMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(AgleConfMsg_VideosMsg_CropMsg& a, AgleConfMsg_VideosMsg_CropMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(AgleConfMsg_VideosMsg_CropMsg* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AgleConfMsg_VideosMsg_CropMsg* New() const final {
    return CreateMaybeMessage<AgleConfMsg_VideosMsg_CropMsg>(nullptr);
  }

  AgleConfMsg_VideosMsg_CropMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AgleConfMsg_VideosMsg_CropMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AgleConfMsg_VideosMsg_CropMsg& from);
  void MergeFrom(const AgleConfMsg_VideosMsg_CropMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgleConfMsg_VideosMsg_CropMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ivi.agle.AgleConfMsg.VideosMsg.CropMsg";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agle_5fconf_2eproto);
    return ::descriptor_table_agle_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIsEnableFieldNumber = 1,
    kCropXFieldNumber = 2,
    kCropYFieldNumber = 3,
    kCropWidthFieldNumber = 4,
    kCropHeightFieldNumber = 5,
  };
  // bool is_enable = 1;
  void clear_is_enable();
  bool is_enable() const;
  void set_is_enable(bool value);
  private:
  bool _internal_is_enable() const;
  void _internal_set_is_enable(bool value);
  public:

  // uint32 crop_x = 2;
  void clear_crop_x();
  ::PROTOBUF_NAMESPACE_ID::uint32 crop_x() const;
  void set_crop_x(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_crop_x() const;
  void _internal_set_crop_x(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 crop_y = 3;
  void clear_crop_y();
  ::PROTOBUF_NAMESPACE_ID::uint32 crop_y() const;
  void set_crop_y(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_crop_y() const;
  void _internal_set_crop_y(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 crop_width = 4;
  void clear_crop_width();
  ::PROTOBUF_NAMESPACE_ID::uint32 crop_width() const;
  void set_crop_width(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_crop_width() const;
  void _internal_set_crop_width(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 crop_height = 5;
  void clear_crop_height();
  ::PROTOBUF_NAMESPACE_ID::uint32 crop_height() const;
  void set_crop_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_crop_height() const;
  void _internal_set_crop_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:ivi.agle.AgleConfMsg.VideosMsg.CropMsg)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_enable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 crop_x_;
  ::PROTOBUF_NAMESPACE_ID::uint32 crop_y_;
  ::PROTOBUF_NAMESPACE_ID::uint32 crop_width_;
  ::PROTOBUF_NAMESPACE_ID::uint32 crop_height_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agle_5fconf_2eproto;
};
// -------------------------------------------------------------------

class AgleConfMsg_VideosMsg_VideoEntityMsg :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg) */ {
 public:
  AgleConfMsg_VideosMsg_VideoEntityMsg();
  virtual ~AgleConfMsg_VideosMsg_VideoEntityMsg();

  AgleConfMsg_VideosMsg_VideoEntityMsg(const AgleConfMsg_VideosMsg_VideoEntityMsg& from);
  AgleConfMsg_VideosMsg_VideoEntityMsg(AgleConfMsg_VideosMsg_VideoEntityMsg&& from) noexcept
    : AgleConfMsg_VideosMsg_VideoEntityMsg() {
    *this = ::std::move(from);
  }

  inline AgleConfMsg_VideosMsg_VideoEntityMsg& operator=(const AgleConfMsg_VideosMsg_VideoEntityMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgleConfMsg_VideosMsg_VideoEntityMsg& operator=(AgleConfMsg_VideosMsg_VideoEntityMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AgleConfMsg_VideosMsg_VideoEntityMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AgleConfMsg_VideosMsg_VideoEntityMsg* internal_default_instance() {
    return reinterpret_cast<const AgleConfMsg_VideosMsg_VideoEntityMsg*>(
               &_AgleConfMsg_VideosMsg_VideoEntityMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(AgleConfMsg_VideosMsg_VideoEntityMsg& a, AgleConfMsg_VideosMsg_VideoEntityMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(AgleConfMsg_VideosMsg_VideoEntityMsg* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AgleConfMsg_VideosMsg_VideoEntityMsg* New() const final {
    return CreateMaybeMessage<AgleConfMsg_VideosMsg_VideoEntityMsg>(nullptr);
  }

  AgleConfMsg_VideosMsg_VideoEntityMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AgleConfMsg_VideosMsg_VideoEntityMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AgleConfMsg_VideosMsg_VideoEntityMsg& from);
  void MergeFrom(const AgleConfMsg_VideosMsg_VideoEntityMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgleConfMsg_VideosMsg_VideoEntityMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agle_5fconf_2eproto);
    return ::descriptor_table_agle_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCropSettingFieldNumber = 7,
    kIsEnableFieldNumber = 1,
    kEntityIdFieldNumber = 2,
    kOutputsizeFieldNumber = 3,
    kBitrateFieldNumber = 4,
    kFramerateFieldNumber = 5,
    kKeyframeFrequencyFieldNumber = 6,
  };
  // .ivi.agle.AgleConfMsg.VideosMsg.CropMsg crop_setting = 7;
  bool has_crop_setting() const;
  private:
  bool _internal_has_crop_setting() const;
  public:
  void clear_crop_setting();
  const ::ivi::agle::AgleConfMsg_VideosMsg_CropMsg& crop_setting() const;
  ::ivi::agle::AgleConfMsg_VideosMsg_CropMsg* release_crop_setting();
  ::ivi::agle::AgleConfMsg_VideosMsg_CropMsg* mutable_crop_setting();
  void set_allocated_crop_setting(::ivi::agle::AgleConfMsg_VideosMsg_CropMsg* crop_setting);
  private:
  const ::ivi::agle::AgleConfMsg_VideosMsg_CropMsg& _internal_crop_setting() const;
  ::ivi::agle::AgleConfMsg_VideosMsg_CropMsg* _internal_mutable_crop_setting();
  public:

  // bool is_enable = 1;
  void clear_is_enable();
  bool is_enable() const;
  void set_is_enable(bool value);
  private:
  bool _internal_is_enable() const;
  void _internal_set_is_enable(bool value);
  public:

  // uint32 entity_id = 2;
  void clear_entity_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 entity_id() const;
  void set_entity_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_entity_id() const;
  void _internal_set_entity_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // .ivi.agle.AgleConfMsg.VideosMsg.EnumVideoOutSize outputsize = 3;
  void clear_outputsize();
  ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoOutSize outputsize() const;
  void set_outputsize(::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoOutSize value);
  private:
  ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoOutSize _internal_outputsize() const;
  void _internal_set_outputsize(::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoOutSize value);
  public:

  // .ivi.agle.AgleConfMsg.VideosMsg.EnumVideoBitrate bitrate = 4;
  void clear_bitrate();
  ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoBitrate bitrate() const;
  void set_bitrate(::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoBitrate value);
  private:
  ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoBitrate _internal_bitrate() const;
  void _internal_set_bitrate(::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoBitrate value);
  public:

  // .ivi.agle.AgleConfMsg.VideosMsg.EnumVideoFramerate framerate = 5;
  void clear_framerate();
  ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoFramerate framerate() const;
  void set_framerate(::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoFramerate value);
  private:
  ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoFramerate _internal_framerate() const;
  void _internal_set_framerate(::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoFramerate value);
  public:

  // uint32 keyframe_frequency = 6;
  void clear_keyframe_frequency();
  ::PROTOBUF_NAMESPACE_ID::uint32 keyframe_frequency() const;
  void set_keyframe_frequency(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_keyframe_frequency() const;
  void _internal_set_keyframe_frequency(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::ivi::agle::AgleConfMsg_VideosMsg_CropMsg* crop_setting_;
  bool is_enable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 entity_id_;
  int outputsize_;
  int bitrate_;
  int framerate_;
  ::PROTOBUF_NAMESPACE_ID::uint32 keyframe_frequency_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agle_5fconf_2eproto;
};
// -------------------------------------------------------------------

class AgleConfMsg_VideosMsg :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ivi.agle.AgleConfMsg.VideosMsg) */ {
 public:
  AgleConfMsg_VideosMsg();
  virtual ~AgleConfMsg_VideosMsg();

  AgleConfMsg_VideosMsg(const AgleConfMsg_VideosMsg& from);
  AgleConfMsg_VideosMsg(AgleConfMsg_VideosMsg&& from) noexcept
    : AgleConfMsg_VideosMsg() {
    *this = ::std::move(from);
  }

  inline AgleConfMsg_VideosMsg& operator=(const AgleConfMsg_VideosMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgleConfMsg_VideosMsg& operator=(AgleConfMsg_VideosMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AgleConfMsg_VideosMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AgleConfMsg_VideosMsg* internal_default_instance() {
    return reinterpret_cast<const AgleConfMsg_VideosMsg*>(
               &_AgleConfMsg_VideosMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(AgleConfMsg_VideosMsg& a, AgleConfMsg_VideosMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(AgleConfMsg_VideosMsg* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AgleConfMsg_VideosMsg* New() const final {
    return CreateMaybeMessage<AgleConfMsg_VideosMsg>(nullptr);
  }

  AgleConfMsg_VideosMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AgleConfMsg_VideosMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AgleConfMsg_VideosMsg& from);
  void MergeFrom(const AgleConfMsg_VideosMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgleConfMsg_VideosMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ivi.agle.AgleConfMsg.VideosMsg";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agle_5fconf_2eproto);
    return ::descriptor_table_agle_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef AgleConfMsg_VideosMsg_CropMsg CropMsg;
  typedef AgleConfMsg_VideosMsg_VideoEntityMsg VideoEntityMsg;

  typedef AgleConfMsg_VideosMsg_EnumVideoEncodeFormat EnumVideoEncodeFormat;
  static constexpr EnumVideoEncodeFormat x264 =
    AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_x264;
  static constexpr EnumVideoEncodeFormat h264_qsv =
    AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_h264_qsv;
  static constexpr EnumVideoEncodeFormat h264_nvenc =
    AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_h264_nvenc;
  static inline bool EnumVideoEncodeFormat_IsValid(int value) {
    return AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_IsValid(value);
  }
  static constexpr EnumVideoEncodeFormat EnumVideoEncodeFormat_MIN =
    AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_EnumVideoEncodeFormat_MIN;
  static constexpr EnumVideoEncodeFormat EnumVideoEncodeFormat_MAX =
    AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_EnumVideoEncodeFormat_MAX;
  static constexpr int EnumVideoEncodeFormat_ARRAYSIZE =
    AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_EnumVideoEncodeFormat_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EnumVideoEncodeFormat_descriptor() {
    return AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_descriptor();
  }
  template<typename T>
  static inline const std::string& EnumVideoEncodeFormat_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EnumVideoEncodeFormat>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EnumVideoEncodeFormat_Name.");
    return AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_Name(enum_t_value);
  }
  static inline bool EnumVideoEncodeFormat_Parse(const std::string& name,
      EnumVideoEncodeFormat* value) {
    return AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_Parse(name, value);
  }

  typedef AgleConfMsg_VideosMsg_EnumVideoEncodeQuality EnumVideoEncodeQuality;
  static constexpr EnumVideoEncodeQuality speed =
    AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_speed;
  static constexpr EnumVideoEncodeQuality balance =
    AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_balance;
  static constexpr EnumVideoEncodeQuality quality =
    AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_quality;
  static inline bool EnumVideoEncodeQuality_IsValid(int value) {
    return AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_IsValid(value);
  }
  static constexpr EnumVideoEncodeQuality EnumVideoEncodeQuality_MIN =
    AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_EnumVideoEncodeQuality_MIN;
  static constexpr EnumVideoEncodeQuality EnumVideoEncodeQuality_MAX =
    AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_EnumVideoEncodeQuality_MAX;
  static constexpr int EnumVideoEncodeQuality_ARRAYSIZE =
    AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_EnumVideoEncodeQuality_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EnumVideoEncodeQuality_descriptor() {
    return AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_descriptor();
  }
  template<typename T>
  static inline const std::string& EnumVideoEncodeQuality_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EnumVideoEncodeQuality>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EnumVideoEncodeQuality_Name.");
    return AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_Name(enum_t_value);
  }
  static inline bool EnumVideoEncodeQuality_Parse(const std::string& name,
      EnumVideoEncodeQuality* value) {
    return AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_Parse(name, value);
  }

  typedef AgleConfMsg_VideosMsg_EnumVideoOutSize EnumVideoOutSize;
  static constexpr EnumVideoOutSize size_1920x1080 =
    AgleConfMsg_VideosMsg_EnumVideoOutSize_size_1920x1080;
  static constexpr EnumVideoOutSize size_1280x720 =
    AgleConfMsg_VideosMsg_EnumVideoOutSize_size_1280x720;
  static constexpr EnumVideoOutSize size_720x480 =
    AgleConfMsg_VideosMsg_EnumVideoOutSize_size_720x480;
  static constexpr EnumVideoOutSize size_640x480 =
    AgleConfMsg_VideosMsg_EnumVideoOutSize_size_640x480;
  static constexpr EnumVideoOutSize size_640x360 =
    AgleConfMsg_VideosMsg_EnumVideoOutSize_size_640x360;
  static inline bool EnumVideoOutSize_IsValid(int value) {
    return AgleConfMsg_VideosMsg_EnumVideoOutSize_IsValid(value);
  }
  static constexpr EnumVideoOutSize EnumVideoOutSize_MIN =
    AgleConfMsg_VideosMsg_EnumVideoOutSize_EnumVideoOutSize_MIN;
  static constexpr EnumVideoOutSize EnumVideoOutSize_MAX =
    AgleConfMsg_VideosMsg_EnumVideoOutSize_EnumVideoOutSize_MAX;
  static constexpr int EnumVideoOutSize_ARRAYSIZE =
    AgleConfMsg_VideosMsg_EnumVideoOutSize_EnumVideoOutSize_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EnumVideoOutSize_descriptor() {
    return AgleConfMsg_VideosMsg_EnumVideoOutSize_descriptor();
  }
  template<typename T>
  static inline const std::string& EnumVideoOutSize_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EnumVideoOutSize>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EnumVideoOutSize_Name.");
    return AgleConfMsg_VideosMsg_EnumVideoOutSize_Name(enum_t_value);
  }
  static inline bool EnumVideoOutSize_Parse(const std::string& name,
      EnumVideoOutSize* value) {
    return AgleConfMsg_VideosMsg_EnumVideoOutSize_Parse(name, value);
  }

  typedef AgleConfMsg_VideosMsg_EnumVideoBitrate EnumVideoBitrate;
  static constexpr EnumVideoBitrate kbps_3000 =
    AgleConfMsg_VideosMsg_EnumVideoBitrate_kbps_3000;
  static constexpr EnumVideoBitrate kbps_2000 =
    AgleConfMsg_VideosMsg_EnumVideoBitrate_kbps_2000;
  static constexpr EnumVideoBitrate kbps_1000 =
    AgleConfMsg_VideosMsg_EnumVideoBitrate_kbps_1000;
  static constexpr EnumVideoBitrate kbps_800 =
    AgleConfMsg_VideosMsg_EnumVideoBitrate_kbps_800;
  static constexpr EnumVideoBitrate kbps_600 =
    AgleConfMsg_VideosMsg_EnumVideoBitrate_kbps_600;
  static constexpr EnumVideoBitrate kbps_500 =
    AgleConfMsg_VideosMsg_EnumVideoBitrate_kbps_500;
  static constexpr EnumVideoBitrate kbps_400 =
    AgleConfMsg_VideosMsg_EnumVideoBitrate_kbps_400;
  static constexpr EnumVideoBitrate kbps_350 =
    AgleConfMsg_VideosMsg_EnumVideoBitrate_kbps_350;
  static constexpr EnumVideoBitrate kbps_300 =
    AgleConfMsg_VideosMsg_EnumVideoBitrate_kbps_300;
  static constexpr EnumVideoBitrate kbps_200 =
    AgleConfMsg_VideosMsg_EnumVideoBitrate_kbps_200;
  static constexpr EnumVideoBitrate kbps_150 =
    AgleConfMsg_VideosMsg_EnumVideoBitrate_kbps_150;
  static constexpr EnumVideoBitrate kbps_100 =
    AgleConfMsg_VideosMsg_EnumVideoBitrate_kbps_100;
  static inline bool EnumVideoBitrate_IsValid(int value) {
    return AgleConfMsg_VideosMsg_EnumVideoBitrate_IsValid(value);
  }
  static constexpr EnumVideoBitrate EnumVideoBitrate_MIN =
    AgleConfMsg_VideosMsg_EnumVideoBitrate_EnumVideoBitrate_MIN;
  static constexpr EnumVideoBitrate EnumVideoBitrate_MAX =
    AgleConfMsg_VideosMsg_EnumVideoBitrate_EnumVideoBitrate_MAX;
  static constexpr int EnumVideoBitrate_ARRAYSIZE =
    AgleConfMsg_VideosMsg_EnumVideoBitrate_EnumVideoBitrate_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EnumVideoBitrate_descriptor() {
    return AgleConfMsg_VideosMsg_EnumVideoBitrate_descriptor();
  }
  template<typename T>
  static inline const std::string& EnumVideoBitrate_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EnumVideoBitrate>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EnumVideoBitrate_Name.");
    return AgleConfMsg_VideosMsg_EnumVideoBitrate_Name(enum_t_value);
  }
  static inline bool EnumVideoBitrate_Parse(const std::string& name,
      EnumVideoBitrate* value) {
    return AgleConfMsg_VideosMsg_EnumVideoBitrate_Parse(name, value);
  }

  typedef AgleConfMsg_VideosMsg_EnumVideoFramerate EnumVideoFramerate;
  static constexpr EnumVideoFramerate fps_30 =
    AgleConfMsg_VideosMsg_EnumVideoFramerate_fps_30;
  static constexpr EnumVideoFramerate fps_25 =
    AgleConfMsg_VideosMsg_EnumVideoFramerate_fps_25;
  static constexpr EnumVideoFramerate fps_20 =
    AgleConfMsg_VideosMsg_EnumVideoFramerate_fps_20;
  static constexpr EnumVideoFramerate fps_15 =
    AgleConfMsg_VideosMsg_EnumVideoFramerate_fps_15;
  static inline bool EnumVideoFramerate_IsValid(int value) {
    return AgleConfMsg_VideosMsg_EnumVideoFramerate_IsValid(value);
  }
  static constexpr EnumVideoFramerate EnumVideoFramerate_MIN =
    AgleConfMsg_VideosMsg_EnumVideoFramerate_EnumVideoFramerate_MIN;
  static constexpr EnumVideoFramerate EnumVideoFramerate_MAX =
    AgleConfMsg_VideosMsg_EnumVideoFramerate_EnumVideoFramerate_MAX;
  static constexpr int EnumVideoFramerate_ARRAYSIZE =
    AgleConfMsg_VideosMsg_EnumVideoFramerate_EnumVideoFramerate_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EnumVideoFramerate_descriptor() {
    return AgleConfMsg_VideosMsg_EnumVideoFramerate_descriptor();
  }
  template<typename T>
  static inline const std::string& EnumVideoFramerate_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EnumVideoFramerate>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EnumVideoFramerate_Name.");
    return AgleConfMsg_VideosMsg_EnumVideoFramerate_Name(enum_t_value);
  }
  static inline bool EnumVideoFramerate_Parse(const std::string& name,
      EnumVideoFramerate* value) {
    return AgleConfMsg_VideosMsg_EnumVideoFramerate_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kVideosFieldNumber = 6,
    kDeviceNameFieldNumber = 2,
    kDevicePathFieldNumber = 3,
    kIsEnableFieldNumber = 1,
    kVideoEncoderFieldNumber = 4,
    kVideoQualityFieldNumber = 5,
  };
  // repeated .ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg videos = 6;
  int videos_size() const;
  private:
  int _internal_videos_size() const;
  public:
  void clear_videos();
  ::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg* mutable_videos(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg >*
      mutable_videos();
  private:
  const ::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg& _internal_videos(int index) const;
  ::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg* _internal_add_videos();
  public:
  const ::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg& videos(int index) const;
  ::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg* add_videos();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg >&
      videos() const;

  // string device_name = 2;
  void clear_device_name();
  const std::string& device_name() const;
  void set_device_name(const std::string& value);
  void set_device_name(std::string&& value);
  void set_device_name(const char* value);
  void set_device_name(const char* value, size_t size);
  std::string* mutable_device_name();
  std::string* release_device_name();
  void set_allocated_device_name(std::string* device_name);
  private:
  const std::string& _internal_device_name() const;
  void _internal_set_device_name(const std::string& value);
  std::string* _internal_mutable_device_name();
  public:

  // string device_path = 3;
  void clear_device_path();
  const std::string& device_path() const;
  void set_device_path(const std::string& value);
  void set_device_path(std::string&& value);
  void set_device_path(const char* value);
  void set_device_path(const char* value, size_t size);
  std::string* mutable_device_path();
  std::string* release_device_path();
  void set_allocated_device_path(std::string* device_path);
  private:
  const std::string& _internal_device_path() const;
  void _internal_set_device_path(const std::string& value);
  std::string* _internal_mutable_device_path();
  public:

  // bool is_enable = 1;
  void clear_is_enable();
  bool is_enable() const;
  void set_is_enable(bool value);
  private:
  bool _internal_is_enable() const;
  void _internal_set_is_enable(bool value);
  public:

  // .ivi.agle.AgleConfMsg.VideosMsg.EnumVideoEncodeFormat video_encoder = 4;
  void clear_video_encoder();
  ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoEncodeFormat video_encoder() const;
  void set_video_encoder(::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoEncodeFormat value);
  private:
  ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoEncodeFormat _internal_video_encoder() const;
  void _internal_set_video_encoder(::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoEncodeFormat value);
  public:

  // .ivi.agle.AgleConfMsg.VideosMsg.EnumVideoEncodeQuality video_quality = 5;
  void clear_video_quality();
  ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoEncodeQuality video_quality() const;
  void set_video_quality(::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoEncodeQuality value);
  private:
  ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoEncodeQuality _internal_video_quality() const;
  void _internal_set_video_quality(::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoEncodeQuality value);
  public:

  // @@protoc_insertion_point(class_scope:ivi.agle.AgleConfMsg.VideosMsg)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg > videos_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr device_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr device_path_;
  bool is_enable_;
  int video_encoder_;
  int video_quality_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agle_5fconf_2eproto;
};
// -------------------------------------------------------------------

class AgleConfMsg :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ivi.agle.AgleConfMsg) */ {
 public:
  AgleConfMsg();
  virtual ~AgleConfMsg();

  AgleConfMsg(const AgleConfMsg& from);
  AgleConfMsg(AgleConfMsg&& from) noexcept
    : AgleConfMsg() {
    *this = ::std::move(from);
  }

  inline AgleConfMsg& operator=(const AgleConfMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgleConfMsg& operator=(AgleConfMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AgleConfMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AgleConfMsg* internal_default_instance() {
    return reinterpret_cast<const AgleConfMsg*>(
               &_AgleConfMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(AgleConfMsg& a, AgleConfMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(AgleConfMsg* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AgleConfMsg* New() const final {
    return CreateMaybeMessage<AgleConfMsg>(nullptr);
  }

  AgleConfMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AgleConfMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AgleConfMsg& from);
  void MergeFrom(const AgleConfMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgleConfMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ivi.agle.AgleConfMsg";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agle_5fconf_2eproto);
    return ::descriptor_table_agle_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef AgleConfMsg_NtpMsg NtpMsg;
  typedef AgleConfMsg_LogMsg LogMsg;
  typedef AgleConfMsg_ManagementMsg ManagementMsg;
  typedef AgleConfMsg_RecordMsg RecordMsg;
  typedef AgleConfMsg_RtmpServerMsg RtmpServerMsg;
  typedef AgleConfMsg_AudiosMsg AudiosMsg;
  typedef AgleConfMsg_VideosMsg VideosMsg;

  // accessors -------------------------------------------------------

  enum : int {
    kNtpMsgFieldNumber = 1,
    kLogMsgFieldNumber = 2,
    kManagementMsgFieldNumber = 3,
    kRecordMsgFieldNumber = 4,
    kRtmpServerMsgFieldNumber = 5,
    kAudioMsgFieldNumber = 6,
    kVideoMsgFieldNumber = 7,
  };
  // .ivi.agle.AgleConfMsg.NtpMsg ntp_msg = 1;
  bool has_ntp_msg() const;
  private:
  bool _internal_has_ntp_msg() const;
  public:
  void clear_ntp_msg();
  const ::ivi::agle::AgleConfMsg_NtpMsg& ntp_msg() const;
  ::ivi::agle::AgleConfMsg_NtpMsg* release_ntp_msg();
  ::ivi::agle::AgleConfMsg_NtpMsg* mutable_ntp_msg();
  void set_allocated_ntp_msg(::ivi::agle::AgleConfMsg_NtpMsg* ntp_msg);
  private:
  const ::ivi::agle::AgleConfMsg_NtpMsg& _internal_ntp_msg() const;
  ::ivi::agle::AgleConfMsg_NtpMsg* _internal_mutable_ntp_msg();
  public:

  // .ivi.agle.AgleConfMsg.LogMsg log_msg = 2;
  bool has_log_msg() const;
  private:
  bool _internal_has_log_msg() const;
  public:
  void clear_log_msg();
  const ::ivi::agle::AgleConfMsg_LogMsg& log_msg() const;
  ::ivi::agle::AgleConfMsg_LogMsg* release_log_msg();
  ::ivi::agle::AgleConfMsg_LogMsg* mutable_log_msg();
  void set_allocated_log_msg(::ivi::agle::AgleConfMsg_LogMsg* log_msg);
  private:
  const ::ivi::agle::AgleConfMsg_LogMsg& _internal_log_msg() const;
  ::ivi::agle::AgleConfMsg_LogMsg* _internal_mutable_log_msg();
  public:

  // .ivi.agle.AgleConfMsg.ManagementMsg management_msg = 3;
  bool has_management_msg() const;
  private:
  bool _internal_has_management_msg() const;
  public:
  void clear_management_msg();
  const ::ivi::agle::AgleConfMsg_ManagementMsg& management_msg() const;
  ::ivi::agle::AgleConfMsg_ManagementMsg* release_management_msg();
  ::ivi::agle::AgleConfMsg_ManagementMsg* mutable_management_msg();
  void set_allocated_management_msg(::ivi::agle::AgleConfMsg_ManagementMsg* management_msg);
  private:
  const ::ivi::agle::AgleConfMsg_ManagementMsg& _internal_management_msg() const;
  ::ivi::agle::AgleConfMsg_ManagementMsg* _internal_mutable_management_msg();
  public:

  // .ivi.agle.AgleConfMsg.RecordMsg record_msg = 4;
  bool has_record_msg() const;
  private:
  bool _internal_has_record_msg() const;
  public:
  void clear_record_msg();
  const ::ivi::agle::AgleConfMsg_RecordMsg& record_msg() const;
  ::ivi::agle::AgleConfMsg_RecordMsg* release_record_msg();
  ::ivi::agle::AgleConfMsg_RecordMsg* mutable_record_msg();
  void set_allocated_record_msg(::ivi::agle::AgleConfMsg_RecordMsg* record_msg);
  private:
  const ::ivi::agle::AgleConfMsg_RecordMsg& _internal_record_msg() const;
  ::ivi::agle::AgleConfMsg_RecordMsg* _internal_mutable_record_msg();
  public:

  // .ivi.agle.AgleConfMsg.RtmpServerMsg rtmp_server_msg = 5;
  bool has_rtmp_server_msg() const;
  private:
  bool _internal_has_rtmp_server_msg() const;
  public:
  void clear_rtmp_server_msg();
  const ::ivi::agle::AgleConfMsg_RtmpServerMsg& rtmp_server_msg() const;
  ::ivi::agle::AgleConfMsg_RtmpServerMsg* release_rtmp_server_msg();
  ::ivi::agle::AgleConfMsg_RtmpServerMsg* mutable_rtmp_server_msg();
  void set_allocated_rtmp_server_msg(::ivi::agle::AgleConfMsg_RtmpServerMsg* rtmp_server_msg);
  private:
  const ::ivi::agle::AgleConfMsg_RtmpServerMsg& _internal_rtmp_server_msg() const;
  ::ivi::agle::AgleConfMsg_RtmpServerMsg* _internal_mutable_rtmp_server_msg();
  public:

  // .ivi.agle.AgleConfMsg.AudiosMsg audio_msg = 6;
  bool has_audio_msg() const;
  private:
  bool _internal_has_audio_msg() const;
  public:
  void clear_audio_msg();
  const ::ivi::agle::AgleConfMsg_AudiosMsg& audio_msg() const;
  ::ivi::agle::AgleConfMsg_AudiosMsg* release_audio_msg();
  ::ivi::agle::AgleConfMsg_AudiosMsg* mutable_audio_msg();
  void set_allocated_audio_msg(::ivi::agle::AgleConfMsg_AudiosMsg* audio_msg);
  private:
  const ::ivi::agle::AgleConfMsg_AudiosMsg& _internal_audio_msg() const;
  ::ivi::agle::AgleConfMsg_AudiosMsg* _internal_mutable_audio_msg();
  public:

  // .ivi.agle.AgleConfMsg.VideosMsg video_msg = 7;
  bool has_video_msg() const;
  private:
  bool _internal_has_video_msg() const;
  public:
  void clear_video_msg();
  const ::ivi::agle::AgleConfMsg_VideosMsg& video_msg() const;
  ::ivi::agle::AgleConfMsg_VideosMsg* release_video_msg();
  ::ivi::agle::AgleConfMsg_VideosMsg* mutable_video_msg();
  void set_allocated_video_msg(::ivi::agle::AgleConfMsg_VideosMsg* video_msg);
  private:
  const ::ivi::agle::AgleConfMsg_VideosMsg& _internal_video_msg() const;
  ::ivi::agle::AgleConfMsg_VideosMsg* _internal_mutable_video_msg();
  public:

  // @@protoc_insertion_point(class_scope:ivi.agle.AgleConfMsg)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::ivi::agle::AgleConfMsg_NtpMsg* ntp_msg_;
  ::ivi::agle::AgleConfMsg_LogMsg* log_msg_;
  ::ivi::agle::AgleConfMsg_ManagementMsg* management_msg_;
  ::ivi::agle::AgleConfMsg_RecordMsg* record_msg_;
  ::ivi::agle::AgleConfMsg_RtmpServerMsg* rtmp_server_msg_;
  ::ivi::agle::AgleConfMsg_AudiosMsg* audio_msg_;
  ::ivi::agle::AgleConfMsg_VideosMsg* video_msg_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agle_5fconf_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AgleConfMsg_NtpMsg_NtpEntityMsg

// string server_name = 1;
inline void AgleConfMsg_NtpMsg_NtpEntityMsg::clear_server_name() {
  server_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& AgleConfMsg_NtpMsg_NtpEntityMsg::server_name() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg.server_name)
  return _internal_server_name();
}
inline void AgleConfMsg_NtpMsg_NtpEntityMsg::set_server_name(const std::string& value) {
  _internal_set_server_name(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg.server_name)
}
inline std::string* AgleConfMsg_NtpMsg_NtpEntityMsg::mutable_server_name() {
  // @@protoc_insertion_point(field_mutable:ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg.server_name)
  return _internal_mutable_server_name();
}
inline const std::string& AgleConfMsg_NtpMsg_NtpEntityMsg::_internal_server_name() const {
  return server_name_.GetNoArena();
}
inline void AgleConfMsg_NtpMsg_NtpEntityMsg::_internal_set_server_name(const std::string& value) {
  
  server_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void AgleConfMsg_NtpMsg_NtpEntityMsg::set_server_name(std::string&& value) {
  
  server_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg.server_name)
}
inline void AgleConfMsg_NtpMsg_NtpEntityMsg::set_server_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  server_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg.server_name)
}
inline void AgleConfMsg_NtpMsg_NtpEntityMsg::set_server_name(const char* value, size_t size) {
  
  server_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg.server_name)
}
inline std::string* AgleConfMsg_NtpMsg_NtpEntityMsg::_internal_mutable_server_name() {
  
  return server_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AgleConfMsg_NtpMsg_NtpEntityMsg::release_server_name() {
  // @@protoc_insertion_point(field_release:ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg.server_name)
  
  return server_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AgleConfMsg_NtpMsg_NtpEntityMsg::set_allocated_server_name(std::string* server_name) {
  if (server_name != nullptr) {
    
  } else {
    
  }
  server_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), server_name);
  // @@protoc_insertion_point(field_set_allocated:ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg.server_name)
}

// -------------------------------------------------------------------

// AgleConfMsg_NtpMsg

// bool is_enable = 1;
inline void AgleConfMsg_NtpMsg::clear_is_enable() {
  is_enable_ = false;
}
inline bool AgleConfMsg_NtpMsg::_internal_is_enable() const {
  return is_enable_;
}
inline bool AgleConfMsg_NtpMsg::is_enable() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.NtpMsg.is_enable)
  return _internal_is_enable();
}
inline void AgleConfMsg_NtpMsg::_internal_set_is_enable(bool value) {
  
  is_enable_ = value;
}
inline void AgleConfMsg_NtpMsg::set_is_enable(bool value) {
  _internal_set_is_enable(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.NtpMsg.is_enable)
}

// repeated .ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg ntp_server = 2;
inline int AgleConfMsg_NtpMsg::_internal_ntp_server_size() const {
  return ntp_server_.size();
}
inline int AgleConfMsg_NtpMsg::ntp_server_size() const {
  return _internal_ntp_server_size();
}
inline void AgleConfMsg_NtpMsg::clear_ntp_server() {
  ntp_server_.Clear();
}
inline ::ivi::agle::AgleConfMsg_NtpMsg_NtpEntityMsg* AgleConfMsg_NtpMsg::mutable_ntp_server(int index) {
  // @@protoc_insertion_point(field_mutable:ivi.agle.AgleConfMsg.NtpMsg.ntp_server)
  return ntp_server_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ivi::agle::AgleConfMsg_NtpMsg_NtpEntityMsg >*
AgleConfMsg_NtpMsg::mutable_ntp_server() {
  // @@protoc_insertion_point(field_mutable_list:ivi.agle.AgleConfMsg.NtpMsg.ntp_server)
  return &ntp_server_;
}
inline const ::ivi::agle::AgleConfMsg_NtpMsg_NtpEntityMsg& AgleConfMsg_NtpMsg::_internal_ntp_server(int index) const {
  return ntp_server_.Get(index);
}
inline const ::ivi::agle::AgleConfMsg_NtpMsg_NtpEntityMsg& AgleConfMsg_NtpMsg::ntp_server(int index) const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.NtpMsg.ntp_server)
  return _internal_ntp_server(index);
}
inline ::ivi::agle::AgleConfMsg_NtpMsg_NtpEntityMsg* AgleConfMsg_NtpMsg::_internal_add_ntp_server() {
  return ntp_server_.Add();
}
inline ::ivi::agle::AgleConfMsg_NtpMsg_NtpEntityMsg* AgleConfMsg_NtpMsg::add_ntp_server() {
  // @@protoc_insertion_point(field_add:ivi.agle.AgleConfMsg.NtpMsg.ntp_server)
  return _internal_add_ntp_server();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ivi::agle::AgleConfMsg_NtpMsg_NtpEntityMsg >&
AgleConfMsg_NtpMsg::ntp_server() const {
  // @@protoc_insertion_point(field_list:ivi.agle.AgleConfMsg.NtpMsg.ntp_server)
  return ntp_server_;
}

// -------------------------------------------------------------------

// AgleConfMsg_LogMsg

// bool is_enable = 1;
inline void AgleConfMsg_LogMsg::clear_is_enable() {
  is_enable_ = false;
}
inline bool AgleConfMsg_LogMsg::_internal_is_enable() const {
  return is_enable_;
}
inline bool AgleConfMsg_LogMsg::is_enable() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.LogMsg.is_enable)
  return _internal_is_enable();
}
inline void AgleConfMsg_LogMsg::_internal_set_is_enable(bool value) {
  
  is_enable_ = value;
}
inline void AgleConfMsg_LogMsg::set_is_enable(bool value) {
  _internal_set_is_enable(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.LogMsg.is_enable)
}

// string log_path = 2;
inline void AgleConfMsg_LogMsg::clear_log_path() {
  log_path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& AgleConfMsg_LogMsg::log_path() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.LogMsg.log_path)
  return _internal_log_path();
}
inline void AgleConfMsg_LogMsg::set_log_path(const std::string& value) {
  _internal_set_log_path(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.LogMsg.log_path)
}
inline std::string* AgleConfMsg_LogMsg::mutable_log_path() {
  // @@protoc_insertion_point(field_mutable:ivi.agle.AgleConfMsg.LogMsg.log_path)
  return _internal_mutable_log_path();
}
inline const std::string& AgleConfMsg_LogMsg::_internal_log_path() const {
  return log_path_.GetNoArena();
}
inline void AgleConfMsg_LogMsg::_internal_set_log_path(const std::string& value) {
  
  log_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void AgleConfMsg_LogMsg::set_log_path(std::string&& value) {
  
  log_path_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ivi.agle.AgleConfMsg.LogMsg.log_path)
}
inline void AgleConfMsg_LogMsg::set_log_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  log_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ivi.agle.AgleConfMsg.LogMsg.log_path)
}
inline void AgleConfMsg_LogMsg::set_log_path(const char* value, size_t size) {
  
  log_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ivi.agle.AgleConfMsg.LogMsg.log_path)
}
inline std::string* AgleConfMsg_LogMsg::_internal_mutable_log_path() {
  
  return log_path_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AgleConfMsg_LogMsg::release_log_path() {
  // @@protoc_insertion_point(field_release:ivi.agle.AgleConfMsg.LogMsg.log_path)
  
  return log_path_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AgleConfMsg_LogMsg::set_allocated_log_path(std::string* log_path) {
  if (log_path != nullptr) {
    
  } else {
    
  }
  log_path_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), log_path);
  // @@protoc_insertion_point(field_set_allocated:ivi.agle.AgleConfMsg.LogMsg.log_path)
}

// -------------------------------------------------------------------

// AgleConfMsg_ManagementMsg

// bool is_enable = 1;
inline void AgleConfMsg_ManagementMsg::clear_is_enable() {
  is_enable_ = false;
}
inline bool AgleConfMsg_ManagementMsg::_internal_is_enable() const {
  return is_enable_;
}
inline bool AgleConfMsg_ManagementMsg::is_enable() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.ManagementMsg.is_enable)
  return _internal_is_enable();
}
inline void AgleConfMsg_ManagementMsg::_internal_set_is_enable(bool value) {
  
  is_enable_ = value;
}
inline void AgleConfMsg_ManagementMsg::set_is_enable(bool value) {
  _internal_set_is_enable(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.ManagementMsg.is_enable)
}

// string tcp_server_ip = 2;
inline void AgleConfMsg_ManagementMsg::clear_tcp_server_ip() {
  tcp_server_ip_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& AgleConfMsg_ManagementMsg::tcp_server_ip() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.ManagementMsg.tcp_server_ip)
  return _internal_tcp_server_ip();
}
inline void AgleConfMsg_ManagementMsg::set_tcp_server_ip(const std::string& value) {
  _internal_set_tcp_server_ip(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.ManagementMsg.tcp_server_ip)
}
inline std::string* AgleConfMsg_ManagementMsg::mutable_tcp_server_ip() {
  // @@protoc_insertion_point(field_mutable:ivi.agle.AgleConfMsg.ManagementMsg.tcp_server_ip)
  return _internal_mutable_tcp_server_ip();
}
inline const std::string& AgleConfMsg_ManagementMsg::_internal_tcp_server_ip() const {
  return tcp_server_ip_.GetNoArena();
}
inline void AgleConfMsg_ManagementMsg::_internal_set_tcp_server_ip(const std::string& value) {
  
  tcp_server_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void AgleConfMsg_ManagementMsg::set_tcp_server_ip(std::string&& value) {
  
  tcp_server_ip_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ivi.agle.AgleConfMsg.ManagementMsg.tcp_server_ip)
}
inline void AgleConfMsg_ManagementMsg::set_tcp_server_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tcp_server_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ivi.agle.AgleConfMsg.ManagementMsg.tcp_server_ip)
}
inline void AgleConfMsg_ManagementMsg::set_tcp_server_ip(const char* value, size_t size) {
  
  tcp_server_ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ivi.agle.AgleConfMsg.ManagementMsg.tcp_server_ip)
}
inline std::string* AgleConfMsg_ManagementMsg::_internal_mutable_tcp_server_ip() {
  
  return tcp_server_ip_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AgleConfMsg_ManagementMsg::release_tcp_server_ip() {
  // @@protoc_insertion_point(field_release:ivi.agle.AgleConfMsg.ManagementMsg.tcp_server_ip)
  
  return tcp_server_ip_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AgleConfMsg_ManagementMsg::set_allocated_tcp_server_ip(std::string* tcp_server_ip) {
  if (tcp_server_ip != nullptr) {
    
  } else {
    
  }
  tcp_server_ip_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tcp_server_ip);
  // @@protoc_insertion_point(field_set_allocated:ivi.agle.AgleConfMsg.ManagementMsg.tcp_server_ip)
}

// uint32 tcp_server_port = 3;
inline void AgleConfMsg_ManagementMsg::clear_tcp_server_port() {
  tcp_server_port_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AgleConfMsg_ManagementMsg::_internal_tcp_server_port() const {
  return tcp_server_port_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AgleConfMsg_ManagementMsg::tcp_server_port() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.ManagementMsg.tcp_server_port)
  return _internal_tcp_server_port();
}
inline void AgleConfMsg_ManagementMsg::_internal_set_tcp_server_port(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  tcp_server_port_ = value;
}
inline void AgleConfMsg_ManagementMsg::set_tcp_server_port(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tcp_server_port(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.ManagementMsg.tcp_server_port)
}

// string client_type = 4;
inline void AgleConfMsg_ManagementMsg::clear_client_type() {
  client_type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& AgleConfMsg_ManagementMsg::client_type() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.ManagementMsg.client_type)
  return _internal_client_type();
}
inline void AgleConfMsg_ManagementMsg::set_client_type(const std::string& value) {
  _internal_set_client_type(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.ManagementMsg.client_type)
}
inline std::string* AgleConfMsg_ManagementMsg::mutable_client_type() {
  // @@protoc_insertion_point(field_mutable:ivi.agle.AgleConfMsg.ManagementMsg.client_type)
  return _internal_mutable_client_type();
}
inline const std::string& AgleConfMsg_ManagementMsg::_internal_client_type() const {
  return client_type_.GetNoArena();
}
inline void AgleConfMsg_ManagementMsg::_internal_set_client_type(const std::string& value) {
  
  client_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void AgleConfMsg_ManagementMsg::set_client_type(std::string&& value) {
  
  client_type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ivi.agle.AgleConfMsg.ManagementMsg.client_type)
}
inline void AgleConfMsg_ManagementMsg::set_client_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  client_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ivi.agle.AgleConfMsg.ManagementMsg.client_type)
}
inline void AgleConfMsg_ManagementMsg::set_client_type(const char* value, size_t size) {
  
  client_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ivi.agle.AgleConfMsg.ManagementMsg.client_type)
}
inline std::string* AgleConfMsg_ManagementMsg::_internal_mutable_client_type() {
  
  return client_type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AgleConfMsg_ManagementMsg::release_client_type() {
  // @@protoc_insertion_point(field_release:ivi.agle.AgleConfMsg.ManagementMsg.client_type)
  
  return client_type_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AgleConfMsg_ManagementMsg::set_allocated_client_type(std::string* client_type) {
  if (client_type != nullptr) {
    
  } else {
    
  }
  client_type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), client_type);
  // @@protoc_insertion_point(field_set_allocated:ivi.agle.AgleConfMsg.ManagementMsg.client_type)
}

// string client_ID = 5;
inline void AgleConfMsg_ManagementMsg::clear_client_id() {
  client_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& AgleConfMsg_ManagementMsg::client_id() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.ManagementMsg.client_ID)
  return _internal_client_id();
}
inline void AgleConfMsg_ManagementMsg::set_client_id(const std::string& value) {
  _internal_set_client_id(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.ManagementMsg.client_ID)
}
inline std::string* AgleConfMsg_ManagementMsg::mutable_client_id() {
  // @@protoc_insertion_point(field_mutable:ivi.agle.AgleConfMsg.ManagementMsg.client_ID)
  return _internal_mutable_client_id();
}
inline const std::string& AgleConfMsg_ManagementMsg::_internal_client_id() const {
  return client_id_.GetNoArena();
}
inline void AgleConfMsg_ManagementMsg::_internal_set_client_id(const std::string& value) {
  
  client_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void AgleConfMsg_ManagementMsg::set_client_id(std::string&& value) {
  
  client_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ivi.agle.AgleConfMsg.ManagementMsg.client_ID)
}
inline void AgleConfMsg_ManagementMsg::set_client_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  client_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ivi.agle.AgleConfMsg.ManagementMsg.client_ID)
}
inline void AgleConfMsg_ManagementMsg::set_client_id(const char* value, size_t size) {
  
  client_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ivi.agle.AgleConfMsg.ManagementMsg.client_ID)
}
inline std::string* AgleConfMsg_ManagementMsg::_internal_mutable_client_id() {
  
  return client_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AgleConfMsg_ManagementMsg::release_client_id() {
  // @@protoc_insertion_point(field_release:ivi.agle.AgleConfMsg.ManagementMsg.client_ID)
  
  return client_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AgleConfMsg_ManagementMsg::set_allocated_client_id(std::string* client_id) {
  if (client_id != nullptr) {
    
  } else {
    
  }
  client_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), client_id);
  // @@protoc_insertion_point(field_set_allocated:ivi.agle.AgleConfMsg.ManagementMsg.client_ID)
}

// uint32 login_interval = 6;
inline void AgleConfMsg_ManagementMsg::clear_login_interval() {
  login_interval_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AgleConfMsg_ManagementMsg::_internal_login_interval() const {
  return login_interval_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AgleConfMsg_ManagementMsg::login_interval() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.ManagementMsg.login_interval)
  return _internal_login_interval();
}
inline void AgleConfMsg_ManagementMsg::_internal_set_login_interval(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  login_interval_ = value;
}
inline void AgleConfMsg_ManagementMsg::set_login_interval(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_login_interval(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.ManagementMsg.login_interval)
}

// -------------------------------------------------------------------

// AgleConfMsg_RecordMsg

// bool is_enable = 1;
inline void AgleConfMsg_RecordMsg::clear_is_enable() {
  is_enable_ = false;
}
inline bool AgleConfMsg_RecordMsg::_internal_is_enable() const {
  return is_enable_;
}
inline bool AgleConfMsg_RecordMsg::is_enable() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.RecordMsg.is_enable)
  return _internal_is_enable();
}
inline void AgleConfMsg_RecordMsg::_internal_set_is_enable(bool value) {
  
  is_enable_ = value;
}
inline void AgleConfMsg_RecordMsg::set_is_enable(bool value) {
  _internal_set_is_enable(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.RecordMsg.is_enable)
}

// string rec_path = 2;
inline void AgleConfMsg_RecordMsg::clear_rec_path() {
  rec_path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& AgleConfMsg_RecordMsg::rec_path() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.RecordMsg.rec_path)
  return _internal_rec_path();
}
inline void AgleConfMsg_RecordMsg::set_rec_path(const std::string& value) {
  _internal_set_rec_path(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.RecordMsg.rec_path)
}
inline std::string* AgleConfMsg_RecordMsg::mutable_rec_path() {
  // @@protoc_insertion_point(field_mutable:ivi.agle.AgleConfMsg.RecordMsg.rec_path)
  return _internal_mutable_rec_path();
}
inline const std::string& AgleConfMsg_RecordMsg::_internal_rec_path() const {
  return rec_path_.GetNoArena();
}
inline void AgleConfMsg_RecordMsg::_internal_set_rec_path(const std::string& value) {
  
  rec_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void AgleConfMsg_RecordMsg::set_rec_path(std::string&& value) {
  
  rec_path_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ivi.agle.AgleConfMsg.RecordMsg.rec_path)
}
inline void AgleConfMsg_RecordMsg::set_rec_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  rec_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ivi.agle.AgleConfMsg.RecordMsg.rec_path)
}
inline void AgleConfMsg_RecordMsg::set_rec_path(const char* value, size_t size) {
  
  rec_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ivi.agle.AgleConfMsg.RecordMsg.rec_path)
}
inline std::string* AgleConfMsg_RecordMsg::_internal_mutable_rec_path() {
  
  return rec_path_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AgleConfMsg_RecordMsg::release_rec_path() {
  // @@protoc_insertion_point(field_release:ivi.agle.AgleConfMsg.RecordMsg.rec_path)
  
  return rec_path_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AgleConfMsg_RecordMsg::set_allocated_rec_path(std::string* rec_path) {
  if (rec_path != nullptr) {
    
  } else {
    
  }
  rec_path_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), rec_path);
  // @@protoc_insertion_point(field_set_allocated:ivi.agle.AgleConfMsg.RecordMsg.rec_path)
}

// uint32 rec_recycle_days = 3;
inline void AgleConfMsg_RecordMsg::clear_rec_recycle_days() {
  rec_recycle_days_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AgleConfMsg_RecordMsg::_internal_rec_recycle_days() const {
  return rec_recycle_days_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AgleConfMsg_RecordMsg::rec_recycle_days() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.RecordMsg.rec_recycle_days)
  return _internal_rec_recycle_days();
}
inline void AgleConfMsg_RecordMsg::_internal_set_rec_recycle_days(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  rec_recycle_days_ = value;
}
inline void AgleConfMsg_RecordMsg::set_rec_recycle_days(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rec_recycle_days(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.RecordMsg.rec_recycle_days)
}

// uint32 rec_segment_hour = 4;
inline void AgleConfMsg_RecordMsg::clear_rec_segment_hour() {
  rec_segment_hour_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AgleConfMsg_RecordMsg::_internal_rec_segment_hour() const {
  return rec_segment_hour_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AgleConfMsg_RecordMsg::rec_segment_hour() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.RecordMsg.rec_segment_hour)
  return _internal_rec_segment_hour();
}
inline void AgleConfMsg_RecordMsg::_internal_set_rec_segment_hour(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  rec_segment_hour_ = value;
}
inline void AgleConfMsg_RecordMsg::set_rec_segment_hour(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rec_segment_hour(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.RecordMsg.rec_segment_hour)
}

// uint32 rec_segment_minutes = 5;
inline void AgleConfMsg_RecordMsg::clear_rec_segment_minutes() {
  rec_segment_minutes_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AgleConfMsg_RecordMsg::_internal_rec_segment_minutes() const {
  return rec_segment_minutes_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AgleConfMsg_RecordMsg::rec_segment_minutes() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.RecordMsg.rec_segment_minutes)
  return _internal_rec_segment_minutes();
}
inline void AgleConfMsg_RecordMsg::_internal_set_rec_segment_minutes(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  rec_segment_minutes_ = value;
}
inline void AgleConfMsg_RecordMsg::set_rec_segment_minutes(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rec_segment_minutes(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.RecordMsg.rec_segment_minutes)
}

// string rec_start_time = 6;
inline void AgleConfMsg_RecordMsg::clear_rec_start_time() {
  rec_start_time_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& AgleConfMsg_RecordMsg::rec_start_time() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.RecordMsg.rec_start_time)
  return _internal_rec_start_time();
}
inline void AgleConfMsg_RecordMsg::set_rec_start_time(const std::string& value) {
  _internal_set_rec_start_time(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.RecordMsg.rec_start_time)
}
inline std::string* AgleConfMsg_RecordMsg::mutable_rec_start_time() {
  // @@protoc_insertion_point(field_mutable:ivi.agle.AgleConfMsg.RecordMsg.rec_start_time)
  return _internal_mutable_rec_start_time();
}
inline const std::string& AgleConfMsg_RecordMsg::_internal_rec_start_time() const {
  return rec_start_time_.GetNoArena();
}
inline void AgleConfMsg_RecordMsg::_internal_set_rec_start_time(const std::string& value) {
  
  rec_start_time_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void AgleConfMsg_RecordMsg::set_rec_start_time(std::string&& value) {
  
  rec_start_time_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ivi.agle.AgleConfMsg.RecordMsg.rec_start_time)
}
inline void AgleConfMsg_RecordMsg::set_rec_start_time(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  rec_start_time_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ivi.agle.AgleConfMsg.RecordMsg.rec_start_time)
}
inline void AgleConfMsg_RecordMsg::set_rec_start_time(const char* value, size_t size) {
  
  rec_start_time_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ivi.agle.AgleConfMsg.RecordMsg.rec_start_time)
}
inline std::string* AgleConfMsg_RecordMsg::_internal_mutable_rec_start_time() {
  
  return rec_start_time_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AgleConfMsg_RecordMsg::release_rec_start_time() {
  // @@protoc_insertion_point(field_release:ivi.agle.AgleConfMsg.RecordMsg.rec_start_time)
  
  return rec_start_time_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AgleConfMsg_RecordMsg::set_allocated_rec_start_time(std::string* rec_start_time) {
  if (rec_start_time != nullptr) {
    
  } else {
    
  }
  rec_start_time_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), rec_start_time);
  // @@protoc_insertion_point(field_set_allocated:ivi.agle.AgleConfMsg.RecordMsg.rec_start_time)
}

// string rec_stop_time = 7;
inline void AgleConfMsg_RecordMsg::clear_rec_stop_time() {
  rec_stop_time_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& AgleConfMsg_RecordMsg::rec_stop_time() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.RecordMsg.rec_stop_time)
  return _internal_rec_stop_time();
}
inline void AgleConfMsg_RecordMsg::set_rec_stop_time(const std::string& value) {
  _internal_set_rec_stop_time(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.RecordMsg.rec_stop_time)
}
inline std::string* AgleConfMsg_RecordMsg::mutable_rec_stop_time() {
  // @@protoc_insertion_point(field_mutable:ivi.agle.AgleConfMsg.RecordMsg.rec_stop_time)
  return _internal_mutable_rec_stop_time();
}
inline const std::string& AgleConfMsg_RecordMsg::_internal_rec_stop_time() const {
  return rec_stop_time_.GetNoArena();
}
inline void AgleConfMsg_RecordMsg::_internal_set_rec_stop_time(const std::string& value) {
  
  rec_stop_time_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void AgleConfMsg_RecordMsg::set_rec_stop_time(std::string&& value) {
  
  rec_stop_time_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ivi.agle.AgleConfMsg.RecordMsg.rec_stop_time)
}
inline void AgleConfMsg_RecordMsg::set_rec_stop_time(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  rec_stop_time_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ivi.agle.AgleConfMsg.RecordMsg.rec_stop_time)
}
inline void AgleConfMsg_RecordMsg::set_rec_stop_time(const char* value, size_t size) {
  
  rec_stop_time_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ivi.agle.AgleConfMsg.RecordMsg.rec_stop_time)
}
inline std::string* AgleConfMsg_RecordMsg::_internal_mutable_rec_stop_time() {
  
  return rec_stop_time_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AgleConfMsg_RecordMsg::release_rec_stop_time() {
  // @@protoc_insertion_point(field_release:ivi.agle.AgleConfMsg.RecordMsg.rec_stop_time)
  
  return rec_stop_time_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AgleConfMsg_RecordMsg::set_allocated_rec_stop_time(std::string* rec_stop_time) {
  if (rec_stop_time != nullptr) {
    
  } else {
    
  }
  rec_stop_time_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), rec_stop_time);
  // @@protoc_insertion_point(field_set_allocated:ivi.agle.AgleConfMsg.RecordMsg.rec_stop_time)
}

// -------------------------------------------------------------------

// AgleConfMsg_RtmpServerMsg_ServerEntityMsg

// bool is_master = 1;
inline void AgleConfMsg_RtmpServerMsg_ServerEntityMsg::clear_is_master() {
  is_master_ = false;
}
inline bool AgleConfMsg_RtmpServerMsg_ServerEntityMsg::_internal_is_master() const {
  return is_master_;
}
inline bool AgleConfMsg_RtmpServerMsg_ServerEntityMsg::is_master() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg.is_master)
  return _internal_is_master();
}
inline void AgleConfMsg_RtmpServerMsg_ServerEntityMsg::_internal_set_is_master(bool value) {
  
  is_master_ = value;
}
inline void AgleConfMsg_RtmpServerMsg_ServerEntityMsg::set_is_master(bool value) {
  _internal_set_is_master(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg.is_master)
}

// uint32 entity_id = 2;
inline void AgleConfMsg_RtmpServerMsg_ServerEntityMsg::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AgleConfMsg_RtmpServerMsg_ServerEntityMsg::_internal_entity_id() const {
  return entity_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AgleConfMsg_RtmpServerMsg_ServerEntityMsg::entity_id() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg.entity_id)
  return _internal_entity_id();
}
inline void AgleConfMsg_RtmpServerMsg_ServerEntityMsg::_internal_set_entity_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  entity_id_ = value;
}
inline void AgleConfMsg_RtmpServerMsg_ServerEntityMsg::set_entity_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_entity_id(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg.entity_id)
}

// string rtmp_server_url = 3;
inline void AgleConfMsg_RtmpServerMsg_ServerEntityMsg::clear_rtmp_server_url() {
  rtmp_server_url_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& AgleConfMsg_RtmpServerMsg_ServerEntityMsg::rtmp_server_url() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg.rtmp_server_url)
  return _internal_rtmp_server_url();
}
inline void AgleConfMsg_RtmpServerMsg_ServerEntityMsg::set_rtmp_server_url(const std::string& value) {
  _internal_set_rtmp_server_url(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg.rtmp_server_url)
}
inline std::string* AgleConfMsg_RtmpServerMsg_ServerEntityMsg::mutable_rtmp_server_url() {
  // @@protoc_insertion_point(field_mutable:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg.rtmp_server_url)
  return _internal_mutable_rtmp_server_url();
}
inline const std::string& AgleConfMsg_RtmpServerMsg_ServerEntityMsg::_internal_rtmp_server_url() const {
  return rtmp_server_url_.GetNoArena();
}
inline void AgleConfMsg_RtmpServerMsg_ServerEntityMsg::_internal_set_rtmp_server_url(const std::string& value) {
  
  rtmp_server_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void AgleConfMsg_RtmpServerMsg_ServerEntityMsg::set_rtmp_server_url(std::string&& value) {
  
  rtmp_server_url_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg.rtmp_server_url)
}
inline void AgleConfMsg_RtmpServerMsg_ServerEntityMsg::set_rtmp_server_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  rtmp_server_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg.rtmp_server_url)
}
inline void AgleConfMsg_RtmpServerMsg_ServerEntityMsg::set_rtmp_server_url(const char* value, size_t size) {
  
  rtmp_server_url_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg.rtmp_server_url)
}
inline std::string* AgleConfMsg_RtmpServerMsg_ServerEntityMsg::_internal_mutable_rtmp_server_url() {
  
  return rtmp_server_url_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AgleConfMsg_RtmpServerMsg_ServerEntityMsg::release_rtmp_server_url() {
  // @@protoc_insertion_point(field_release:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg.rtmp_server_url)
  
  return rtmp_server_url_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AgleConfMsg_RtmpServerMsg_ServerEntityMsg::set_allocated_rtmp_server_url(std::string* rtmp_server_url) {
  if (rtmp_server_url != nullptr) {
    
  } else {
    
  }
  rtmp_server_url_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), rtmp_server_url);
  // @@protoc_insertion_point(field_set_allocated:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg.rtmp_server_url)
}

// string stream_name = 4;
inline void AgleConfMsg_RtmpServerMsg_ServerEntityMsg::clear_stream_name() {
  stream_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& AgleConfMsg_RtmpServerMsg_ServerEntityMsg::stream_name() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg.stream_name)
  return _internal_stream_name();
}
inline void AgleConfMsg_RtmpServerMsg_ServerEntityMsg::set_stream_name(const std::string& value) {
  _internal_set_stream_name(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg.stream_name)
}
inline std::string* AgleConfMsg_RtmpServerMsg_ServerEntityMsg::mutable_stream_name() {
  // @@protoc_insertion_point(field_mutable:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg.stream_name)
  return _internal_mutable_stream_name();
}
inline const std::string& AgleConfMsg_RtmpServerMsg_ServerEntityMsg::_internal_stream_name() const {
  return stream_name_.GetNoArena();
}
inline void AgleConfMsg_RtmpServerMsg_ServerEntityMsg::_internal_set_stream_name(const std::string& value) {
  
  stream_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void AgleConfMsg_RtmpServerMsg_ServerEntityMsg::set_stream_name(std::string&& value) {
  
  stream_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg.stream_name)
}
inline void AgleConfMsg_RtmpServerMsg_ServerEntityMsg::set_stream_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  stream_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg.stream_name)
}
inline void AgleConfMsg_RtmpServerMsg_ServerEntityMsg::set_stream_name(const char* value, size_t size) {
  
  stream_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg.stream_name)
}
inline std::string* AgleConfMsg_RtmpServerMsg_ServerEntityMsg::_internal_mutable_stream_name() {
  
  return stream_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AgleConfMsg_RtmpServerMsg_ServerEntityMsg::release_stream_name() {
  // @@protoc_insertion_point(field_release:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg.stream_name)
  
  return stream_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AgleConfMsg_RtmpServerMsg_ServerEntityMsg::set_allocated_stream_name(std::string* stream_name) {
  if (stream_name != nullptr) {
    
  } else {
    
  }
  stream_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), stream_name);
  // @@protoc_insertion_point(field_set_allocated:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg.stream_name)
}

// -------------------------------------------------------------------

// AgleConfMsg_RtmpServerMsg

// bool is_enable = 1;
inline void AgleConfMsg_RtmpServerMsg::clear_is_enable() {
  is_enable_ = false;
}
inline bool AgleConfMsg_RtmpServerMsg::_internal_is_enable() const {
  return is_enable_;
}
inline bool AgleConfMsg_RtmpServerMsg::is_enable() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.RtmpServerMsg.is_enable)
  return _internal_is_enable();
}
inline void AgleConfMsg_RtmpServerMsg::_internal_set_is_enable(bool value) {
  
  is_enable_ = value;
}
inline void AgleConfMsg_RtmpServerMsg::set_is_enable(bool value) {
  _internal_set_is_enable(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.RtmpServerMsg.is_enable)
}

// repeated .ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg rtmp_servers = 2;
inline int AgleConfMsg_RtmpServerMsg::_internal_rtmp_servers_size() const {
  return rtmp_servers_.size();
}
inline int AgleConfMsg_RtmpServerMsg::rtmp_servers_size() const {
  return _internal_rtmp_servers_size();
}
inline void AgleConfMsg_RtmpServerMsg::clear_rtmp_servers() {
  rtmp_servers_.Clear();
}
inline ::ivi::agle::AgleConfMsg_RtmpServerMsg_ServerEntityMsg* AgleConfMsg_RtmpServerMsg::mutable_rtmp_servers(int index) {
  // @@protoc_insertion_point(field_mutable:ivi.agle.AgleConfMsg.RtmpServerMsg.rtmp_servers)
  return rtmp_servers_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ivi::agle::AgleConfMsg_RtmpServerMsg_ServerEntityMsg >*
AgleConfMsg_RtmpServerMsg::mutable_rtmp_servers() {
  // @@protoc_insertion_point(field_mutable_list:ivi.agle.AgleConfMsg.RtmpServerMsg.rtmp_servers)
  return &rtmp_servers_;
}
inline const ::ivi::agle::AgleConfMsg_RtmpServerMsg_ServerEntityMsg& AgleConfMsg_RtmpServerMsg::_internal_rtmp_servers(int index) const {
  return rtmp_servers_.Get(index);
}
inline const ::ivi::agle::AgleConfMsg_RtmpServerMsg_ServerEntityMsg& AgleConfMsg_RtmpServerMsg::rtmp_servers(int index) const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.RtmpServerMsg.rtmp_servers)
  return _internal_rtmp_servers(index);
}
inline ::ivi::agle::AgleConfMsg_RtmpServerMsg_ServerEntityMsg* AgleConfMsg_RtmpServerMsg::_internal_add_rtmp_servers() {
  return rtmp_servers_.Add();
}
inline ::ivi::agle::AgleConfMsg_RtmpServerMsg_ServerEntityMsg* AgleConfMsg_RtmpServerMsg::add_rtmp_servers() {
  // @@protoc_insertion_point(field_add:ivi.agle.AgleConfMsg.RtmpServerMsg.rtmp_servers)
  return _internal_add_rtmp_servers();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ivi::agle::AgleConfMsg_RtmpServerMsg_ServerEntityMsg >&
AgleConfMsg_RtmpServerMsg::rtmp_servers() const {
  // @@protoc_insertion_point(field_list:ivi.agle.AgleConfMsg.RtmpServerMsg.rtmp_servers)
  return rtmp_servers_;
}

// -------------------------------------------------------------------

// AgleConfMsg_AudiosMsg_AudioEntityMsg

// bool is_enable = 1;
inline void AgleConfMsg_AudiosMsg_AudioEntityMsg::clear_is_enable() {
  is_enable_ = false;
}
inline bool AgleConfMsg_AudiosMsg_AudioEntityMsg::_internal_is_enable() const {
  return is_enable_;
}
inline bool AgleConfMsg_AudiosMsg_AudioEntityMsg::is_enable() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg.is_enable)
  return _internal_is_enable();
}
inline void AgleConfMsg_AudiosMsg_AudioEntityMsg::_internal_set_is_enable(bool value) {
  
  is_enable_ = value;
}
inline void AgleConfMsg_AudiosMsg_AudioEntityMsg::set_is_enable(bool value) {
  _internal_set_is_enable(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg.is_enable)
}

// uint32 entity_id = 2;
inline void AgleConfMsg_AudiosMsg_AudioEntityMsg::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AgleConfMsg_AudiosMsg_AudioEntityMsg::_internal_entity_id() const {
  return entity_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AgleConfMsg_AudiosMsg_AudioEntityMsg::entity_id() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg.entity_id)
  return _internal_entity_id();
}
inline void AgleConfMsg_AudiosMsg_AudioEntityMsg::_internal_set_entity_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  entity_id_ = value;
}
inline void AgleConfMsg_AudiosMsg_AudioEntityMsg::set_entity_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_entity_id(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg.entity_id)
}

// string channels = 3;
inline void AgleConfMsg_AudiosMsg_AudioEntityMsg::clear_channels() {
  channels_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& AgleConfMsg_AudiosMsg_AudioEntityMsg::channels() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg.channels)
  return _internal_channels();
}
inline void AgleConfMsg_AudiosMsg_AudioEntityMsg::set_channels(const std::string& value) {
  _internal_set_channels(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg.channels)
}
inline std::string* AgleConfMsg_AudiosMsg_AudioEntityMsg::mutable_channels() {
  // @@protoc_insertion_point(field_mutable:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg.channels)
  return _internal_mutable_channels();
}
inline const std::string& AgleConfMsg_AudiosMsg_AudioEntityMsg::_internal_channels() const {
  return channels_.GetNoArena();
}
inline void AgleConfMsg_AudiosMsg_AudioEntityMsg::_internal_set_channels(const std::string& value) {
  
  channels_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void AgleConfMsg_AudiosMsg_AudioEntityMsg::set_channels(std::string&& value) {
  
  channels_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg.channels)
}
inline void AgleConfMsg_AudiosMsg_AudioEntityMsg::set_channels(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  channels_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg.channels)
}
inline void AgleConfMsg_AudiosMsg_AudioEntityMsg::set_channels(const char* value, size_t size) {
  
  channels_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg.channels)
}
inline std::string* AgleConfMsg_AudiosMsg_AudioEntityMsg::_internal_mutable_channels() {
  
  return channels_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AgleConfMsg_AudiosMsg_AudioEntityMsg::release_channels() {
  // @@protoc_insertion_point(field_release:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg.channels)
  
  return channels_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AgleConfMsg_AudiosMsg_AudioEntityMsg::set_allocated_channels(std::string* channels) {
  if (channels != nullptr) {
    
  } else {
    
  }
  channels_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), channels);
  // @@protoc_insertion_point(field_set_allocated:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg.channels)
}

// .ivi.agle.AgleConfMsg.AudiosMsg.EnumAudioBitrate bitrate = 4;
inline void AgleConfMsg_AudiosMsg_AudioEntityMsg::clear_bitrate() {
  bitrate_ = 0;
}
inline ::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioBitrate AgleConfMsg_AudiosMsg_AudioEntityMsg::_internal_bitrate() const {
  return static_cast< ::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioBitrate >(bitrate_);
}
inline ::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioBitrate AgleConfMsg_AudiosMsg_AudioEntityMsg::bitrate() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg.bitrate)
  return _internal_bitrate();
}
inline void AgleConfMsg_AudiosMsg_AudioEntityMsg::_internal_set_bitrate(::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioBitrate value) {
  
  bitrate_ = value;
}
inline void AgleConfMsg_AudiosMsg_AudioEntityMsg::set_bitrate(::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioBitrate value) {
  _internal_set_bitrate(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg.bitrate)
}

// .ivi.agle.AgleConfMsg.AudiosMsg.EnumAudioFormat format = 5;
inline void AgleConfMsg_AudiosMsg_AudioEntityMsg::clear_format() {
  format_ = 0;
}
inline ::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioFormat AgleConfMsg_AudiosMsg_AudioEntityMsg::_internal_format() const {
  return static_cast< ::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioFormat >(format_);
}
inline ::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioFormat AgleConfMsg_AudiosMsg_AudioEntityMsg::format() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg.format)
  return _internal_format();
}
inline void AgleConfMsg_AudiosMsg_AudioEntityMsg::_internal_set_format(::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioFormat value) {
  
  format_ = value;
}
inline void AgleConfMsg_AudiosMsg_AudioEntityMsg::set_format(::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioFormat value) {
  _internal_set_format(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg.format)
}

// .ivi.agle.AgleConfMsg.AudiosMsg.EnumAudioSamplerate samplerate = 6;
inline void AgleConfMsg_AudiosMsg_AudioEntityMsg::clear_samplerate() {
  samplerate_ = 0;
}
inline ::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioSamplerate AgleConfMsg_AudiosMsg_AudioEntityMsg::_internal_samplerate() const {
  return static_cast< ::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioSamplerate >(samplerate_);
}
inline ::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioSamplerate AgleConfMsg_AudiosMsg_AudioEntityMsg::samplerate() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg.samplerate)
  return _internal_samplerate();
}
inline void AgleConfMsg_AudiosMsg_AudioEntityMsg::_internal_set_samplerate(::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioSamplerate value) {
  
  samplerate_ = value;
}
inline void AgleConfMsg_AudiosMsg_AudioEntityMsg::set_samplerate(::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioSamplerate value) {
  _internal_set_samplerate(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg.samplerate)
}

// -------------------------------------------------------------------

// AgleConfMsg_AudiosMsg

// bool is_enable = 1;
inline void AgleConfMsg_AudiosMsg::clear_is_enable() {
  is_enable_ = false;
}
inline bool AgleConfMsg_AudiosMsg::_internal_is_enable() const {
  return is_enable_;
}
inline bool AgleConfMsg_AudiosMsg::is_enable() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.AudiosMsg.is_enable)
  return _internal_is_enable();
}
inline void AgleConfMsg_AudiosMsg::_internal_set_is_enable(bool value) {
  
  is_enable_ = value;
}
inline void AgleConfMsg_AudiosMsg::set_is_enable(bool value) {
  _internal_set_is_enable(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.AudiosMsg.is_enable)
}

// string device_name = 2;
inline void AgleConfMsg_AudiosMsg::clear_device_name() {
  device_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& AgleConfMsg_AudiosMsg::device_name() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.AudiosMsg.device_name)
  return _internal_device_name();
}
inline void AgleConfMsg_AudiosMsg::set_device_name(const std::string& value) {
  _internal_set_device_name(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.AudiosMsg.device_name)
}
inline std::string* AgleConfMsg_AudiosMsg::mutable_device_name() {
  // @@protoc_insertion_point(field_mutable:ivi.agle.AgleConfMsg.AudiosMsg.device_name)
  return _internal_mutable_device_name();
}
inline const std::string& AgleConfMsg_AudiosMsg::_internal_device_name() const {
  return device_name_.GetNoArena();
}
inline void AgleConfMsg_AudiosMsg::_internal_set_device_name(const std::string& value) {
  
  device_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void AgleConfMsg_AudiosMsg::set_device_name(std::string&& value) {
  
  device_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ivi.agle.AgleConfMsg.AudiosMsg.device_name)
}
inline void AgleConfMsg_AudiosMsg::set_device_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  device_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ivi.agle.AgleConfMsg.AudiosMsg.device_name)
}
inline void AgleConfMsg_AudiosMsg::set_device_name(const char* value, size_t size) {
  
  device_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ivi.agle.AgleConfMsg.AudiosMsg.device_name)
}
inline std::string* AgleConfMsg_AudiosMsg::_internal_mutable_device_name() {
  
  return device_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AgleConfMsg_AudiosMsg::release_device_name() {
  // @@protoc_insertion_point(field_release:ivi.agle.AgleConfMsg.AudiosMsg.device_name)
  
  return device_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AgleConfMsg_AudiosMsg::set_allocated_device_name(std::string* device_name) {
  if (device_name != nullptr) {
    
  } else {
    
  }
  device_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), device_name);
  // @@protoc_insertion_point(field_set_allocated:ivi.agle.AgleConfMsg.AudiosMsg.device_name)
}

// string device_path = 3;
inline void AgleConfMsg_AudiosMsg::clear_device_path() {
  device_path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& AgleConfMsg_AudiosMsg::device_path() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.AudiosMsg.device_path)
  return _internal_device_path();
}
inline void AgleConfMsg_AudiosMsg::set_device_path(const std::string& value) {
  _internal_set_device_path(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.AudiosMsg.device_path)
}
inline std::string* AgleConfMsg_AudiosMsg::mutable_device_path() {
  // @@protoc_insertion_point(field_mutable:ivi.agle.AgleConfMsg.AudiosMsg.device_path)
  return _internal_mutable_device_path();
}
inline const std::string& AgleConfMsg_AudiosMsg::_internal_device_path() const {
  return device_path_.GetNoArena();
}
inline void AgleConfMsg_AudiosMsg::_internal_set_device_path(const std::string& value) {
  
  device_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void AgleConfMsg_AudiosMsg::set_device_path(std::string&& value) {
  
  device_path_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ivi.agle.AgleConfMsg.AudiosMsg.device_path)
}
inline void AgleConfMsg_AudiosMsg::set_device_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  device_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ivi.agle.AgleConfMsg.AudiosMsg.device_path)
}
inline void AgleConfMsg_AudiosMsg::set_device_path(const char* value, size_t size) {
  
  device_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ivi.agle.AgleConfMsg.AudiosMsg.device_path)
}
inline std::string* AgleConfMsg_AudiosMsg::_internal_mutable_device_path() {
  
  return device_path_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AgleConfMsg_AudiosMsg::release_device_path() {
  // @@protoc_insertion_point(field_release:ivi.agle.AgleConfMsg.AudiosMsg.device_path)
  
  return device_path_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AgleConfMsg_AudiosMsg::set_allocated_device_path(std::string* device_path) {
  if (device_path != nullptr) {
    
  } else {
    
  }
  device_path_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), device_path);
  // @@protoc_insertion_point(field_set_allocated:ivi.agle.AgleConfMsg.AudiosMsg.device_path)
}

// repeated .ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg audios = 4;
inline int AgleConfMsg_AudiosMsg::_internal_audios_size() const {
  return audios_.size();
}
inline int AgleConfMsg_AudiosMsg::audios_size() const {
  return _internal_audios_size();
}
inline void AgleConfMsg_AudiosMsg::clear_audios() {
  audios_.Clear();
}
inline ::ivi::agle::AgleConfMsg_AudiosMsg_AudioEntityMsg* AgleConfMsg_AudiosMsg::mutable_audios(int index) {
  // @@protoc_insertion_point(field_mutable:ivi.agle.AgleConfMsg.AudiosMsg.audios)
  return audios_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ivi::agle::AgleConfMsg_AudiosMsg_AudioEntityMsg >*
AgleConfMsg_AudiosMsg::mutable_audios() {
  // @@protoc_insertion_point(field_mutable_list:ivi.agle.AgleConfMsg.AudiosMsg.audios)
  return &audios_;
}
inline const ::ivi::agle::AgleConfMsg_AudiosMsg_AudioEntityMsg& AgleConfMsg_AudiosMsg::_internal_audios(int index) const {
  return audios_.Get(index);
}
inline const ::ivi::agle::AgleConfMsg_AudiosMsg_AudioEntityMsg& AgleConfMsg_AudiosMsg::audios(int index) const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.AudiosMsg.audios)
  return _internal_audios(index);
}
inline ::ivi::agle::AgleConfMsg_AudiosMsg_AudioEntityMsg* AgleConfMsg_AudiosMsg::_internal_add_audios() {
  return audios_.Add();
}
inline ::ivi::agle::AgleConfMsg_AudiosMsg_AudioEntityMsg* AgleConfMsg_AudiosMsg::add_audios() {
  // @@protoc_insertion_point(field_add:ivi.agle.AgleConfMsg.AudiosMsg.audios)
  return _internal_add_audios();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ivi::agle::AgleConfMsg_AudiosMsg_AudioEntityMsg >&
AgleConfMsg_AudiosMsg::audios() const {
  // @@protoc_insertion_point(field_list:ivi.agle.AgleConfMsg.AudiosMsg.audios)
  return audios_;
}

// -------------------------------------------------------------------

// AgleConfMsg_VideosMsg_CropMsg

// bool is_enable = 1;
inline void AgleConfMsg_VideosMsg_CropMsg::clear_is_enable() {
  is_enable_ = false;
}
inline bool AgleConfMsg_VideosMsg_CropMsg::_internal_is_enable() const {
  return is_enable_;
}
inline bool AgleConfMsg_VideosMsg_CropMsg::is_enable() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.VideosMsg.CropMsg.is_enable)
  return _internal_is_enable();
}
inline void AgleConfMsg_VideosMsg_CropMsg::_internal_set_is_enable(bool value) {
  
  is_enable_ = value;
}
inline void AgleConfMsg_VideosMsg_CropMsg::set_is_enable(bool value) {
  _internal_set_is_enable(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.VideosMsg.CropMsg.is_enable)
}

// uint32 crop_x = 2;
inline void AgleConfMsg_VideosMsg_CropMsg::clear_crop_x() {
  crop_x_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AgleConfMsg_VideosMsg_CropMsg::_internal_crop_x() const {
  return crop_x_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AgleConfMsg_VideosMsg_CropMsg::crop_x() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.VideosMsg.CropMsg.crop_x)
  return _internal_crop_x();
}
inline void AgleConfMsg_VideosMsg_CropMsg::_internal_set_crop_x(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  crop_x_ = value;
}
inline void AgleConfMsg_VideosMsg_CropMsg::set_crop_x(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_crop_x(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.VideosMsg.CropMsg.crop_x)
}

// uint32 crop_y = 3;
inline void AgleConfMsg_VideosMsg_CropMsg::clear_crop_y() {
  crop_y_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AgleConfMsg_VideosMsg_CropMsg::_internal_crop_y() const {
  return crop_y_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AgleConfMsg_VideosMsg_CropMsg::crop_y() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.VideosMsg.CropMsg.crop_y)
  return _internal_crop_y();
}
inline void AgleConfMsg_VideosMsg_CropMsg::_internal_set_crop_y(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  crop_y_ = value;
}
inline void AgleConfMsg_VideosMsg_CropMsg::set_crop_y(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_crop_y(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.VideosMsg.CropMsg.crop_y)
}

// uint32 crop_width = 4;
inline void AgleConfMsg_VideosMsg_CropMsg::clear_crop_width() {
  crop_width_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AgleConfMsg_VideosMsg_CropMsg::_internal_crop_width() const {
  return crop_width_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AgleConfMsg_VideosMsg_CropMsg::crop_width() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.VideosMsg.CropMsg.crop_width)
  return _internal_crop_width();
}
inline void AgleConfMsg_VideosMsg_CropMsg::_internal_set_crop_width(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  crop_width_ = value;
}
inline void AgleConfMsg_VideosMsg_CropMsg::set_crop_width(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_crop_width(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.VideosMsg.CropMsg.crop_width)
}

// uint32 crop_height = 5;
inline void AgleConfMsg_VideosMsg_CropMsg::clear_crop_height() {
  crop_height_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AgleConfMsg_VideosMsg_CropMsg::_internal_crop_height() const {
  return crop_height_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AgleConfMsg_VideosMsg_CropMsg::crop_height() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.VideosMsg.CropMsg.crop_height)
  return _internal_crop_height();
}
inline void AgleConfMsg_VideosMsg_CropMsg::_internal_set_crop_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  crop_height_ = value;
}
inline void AgleConfMsg_VideosMsg_CropMsg::set_crop_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_crop_height(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.VideosMsg.CropMsg.crop_height)
}

// -------------------------------------------------------------------

// AgleConfMsg_VideosMsg_VideoEntityMsg

// bool is_enable = 1;
inline void AgleConfMsg_VideosMsg_VideoEntityMsg::clear_is_enable() {
  is_enable_ = false;
}
inline bool AgleConfMsg_VideosMsg_VideoEntityMsg::_internal_is_enable() const {
  return is_enable_;
}
inline bool AgleConfMsg_VideosMsg_VideoEntityMsg::is_enable() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg.is_enable)
  return _internal_is_enable();
}
inline void AgleConfMsg_VideosMsg_VideoEntityMsg::_internal_set_is_enable(bool value) {
  
  is_enable_ = value;
}
inline void AgleConfMsg_VideosMsg_VideoEntityMsg::set_is_enable(bool value) {
  _internal_set_is_enable(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg.is_enable)
}

// uint32 entity_id = 2;
inline void AgleConfMsg_VideosMsg_VideoEntityMsg::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AgleConfMsg_VideosMsg_VideoEntityMsg::_internal_entity_id() const {
  return entity_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AgleConfMsg_VideosMsg_VideoEntityMsg::entity_id() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg.entity_id)
  return _internal_entity_id();
}
inline void AgleConfMsg_VideosMsg_VideoEntityMsg::_internal_set_entity_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  entity_id_ = value;
}
inline void AgleConfMsg_VideosMsg_VideoEntityMsg::set_entity_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_entity_id(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg.entity_id)
}

// .ivi.agle.AgleConfMsg.VideosMsg.EnumVideoOutSize outputsize = 3;
inline void AgleConfMsg_VideosMsg_VideoEntityMsg::clear_outputsize() {
  outputsize_ = 0;
}
inline ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoOutSize AgleConfMsg_VideosMsg_VideoEntityMsg::_internal_outputsize() const {
  return static_cast< ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoOutSize >(outputsize_);
}
inline ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoOutSize AgleConfMsg_VideosMsg_VideoEntityMsg::outputsize() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg.outputsize)
  return _internal_outputsize();
}
inline void AgleConfMsg_VideosMsg_VideoEntityMsg::_internal_set_outputsize(::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoOutSize value) {
  
  outputsize_ = value;
}
inline void AgleConfMsg_VideosMsg_VideoEntityMsg::set_outputsize(::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoOutSize value) {
  _internal_set_outputsize(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg.outputsize)
}

// .ivi.agle.AgleConfMsg.VideosMsg.EnumVideoBitrate bitrate = 4;
inline void AgleConfMsg_VideosMsg_VideoEntityMsg::clear_bitrate() {
  bitrate_ = 0;
}
inline ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoBitrate AgleConfMsg_VideosMsg_VideoEntityMsg::_internal_bitrate() const {
  return static_cast< ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoBitrate >(bitrate_);
}
inline ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoBitrate AgleConfMsg_VideosMsg_VideoEntityMsg::bitrate() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg.bitrate)
  return _internal_bitrate();
}
inline void AgleConfMsg_VideosMsg_VideoEntityMsg::_internal_set_bitrate(::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoBitrate value) {
  
  bitrate_ = value;
}
inline void AgleConfMsg_VideosMsg_VideoEntityMsg::set_bitrate(::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoBitrate value) {
  _internal_set_bitrate(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg.bitrate)
}

// .ivi.agle.AgleConfMsg.VideosMsg.EnumVideoFramerate framerate = 5;
inline void AgleConfMsg_VideosMsg_VideoEntityMsg::clear_framerate() {
  framerate_ = 0;
}
inline ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoFramerate AgleConfMsg_VideosMsg_VideoEntityMsg::_internal_framerate() const {
  return static_cast< ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoFramerate >(framerate_);
}
inline ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoFramerate AgleConfMsg_VideosMsg_VideoEntityMsg::framerate() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg.framerate)
  return _internal_framerate();
}
inline void AgleConfMsg_VideosMsg_VideoEntityMsg::_internal_set_framerate(::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoFramerate value) {
  
  framerate_ = value;
}
inline void AgleConfMsg_VideosMsg_VideoEntityMsg::set_framerate(::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoFramerate value) {
  _internal_set_framerate(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg.framerate)
}

// uint32 keyframe_frequency = 6;
inline void AgleConfMsg_VideosMsg_VideoEntityMsg::clear_keyframe_frequency() {
  keyframe_frequency_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AgleConfMsg_VideosMsg_VideoEntityMsg::_internal_keyframe_frequency() const {
  return keyframe_frequency_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AgleConfMsg_VideosMsg_VideoEntityMsg::keyframe_frequency() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg.keyframe_frequency)
  return _internal_keyframe_frequency();
}
inline void AgleConfMsg_VideosMsg_VideoEntityMsg::_internal_set_keyframe_frequency(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  keyframe_frequency_ = value;
}
inline void AgleConfMsg_VideosMsg_VideoEntityMsg::set_keyframe_frequency(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_keyframe_frequency(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg.keyframe_frequency)
}

// .ivi.agle.AgleConfMsg.VideosMsg.CropMsg crop_setting = 7;
inline bool AgleConfMsg_VideosMsg_VideoEntityMsg::_internal_has_crop_setting() const {
  return this != internal_default_instance() && crop_setting_ != nullptr;
}
inline bool AgleConfMsg_VideosMsg_VideoEntityMsg::has_crop_setting() const {
  return _internal_has_crop_setting();
}
inline void AgleConfMsg_VideosMsg_VideoEntityMsg::clear_crop_setting() {
  if (GetArenaNoVirtual() == nullptr && crop_setting_ != nullptr) {
    delete crop_setting_;
  }
  crop_setting_ = nullptr;
}
inline const ::ivi::agle::AgleConfMsg_VideosMsg_CropMsg& AgleConfMsg_VideosMsg_VideoEntityMsg::_internal_crop_setting() const {
  const ::ivi::agle::AgleConfMsg_VideosMsg_CropMsg* p = crop_setting_;
  return p != nullptr ? *p : *reinterpret_cast<const ::ivi::agle::AgleConfMsg_VideosMsg_CropMsg*>(
      &::ivi::agle::_AgleConfMsg_VideosMsg_CropMsg_default_instance_);
}
inline const ::ivi::agle::AgleConfMsg_VideosMsg_CropMsg& AgleConfMsg_VideosMsg_VideoEntityMsg::crop_setting() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg.crop_setting)
  return _internal_crop_setting();
}
inline ::ivi::agle::AgleConfMsg_VideosMsg_CropMsg* AgleConfMsg_VideosMsg_VideoEntityMsg::release_crop_setting() {
  // @@protoc_insertion_point(field_release:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg.crop_setting)
  
  ::ivi::agle::AgleConfMsg_VideosMsg_CropMsg* temp = crop_setting_;
  crop_setting_ = nullptr;
  return temp;
}
inline ::ivi::agle::AgleConfMsg_VideosMsg_CropMsg* AgleConfMsg_VideosMsg_VideoEntityMsg::_internal_mutable_crop_setting() {
  
  if (crop_setting_ == nullptr) {
    auto* p = CreateMaybeMessage<::ivi::agle::AgleConfMsg_VideosMsg_CropMsg>(GetArenaNoVirtual());
    crop_setting_ = p;
  }
  return crop_setting_;
}
inline ::ivi::agle::AgleConfMsg_VideosMsg_CropMsg* AgleConfMsg_VideosMsg_VideoEntityMsg::mutable_crop_setting() {
  // @@protoc_insertion_point(field_mutable:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg.crop_setting)
  return _internal_mutable_crop_setting();
}
inline void AgleConfMsg_VideosMsg_VideoEntityMsg::set_allocated_crop_setting(::ivi::agle::AgleConfMsg_VideosMsg_CropMsg* crop_setting) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete crop_setting_;
  }
  if (crop_setting) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      crop_setting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, crop_setting, submessage_arena);
    }
    
  } else {
    
  }
  crop_setting_ = crop_setting;
  // @@protoc_insertion_point(field_set_allocated:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg.crop_setting)
}

// -------------------------------------------------------------------

// AgleConfMsg_VideosMsg

// bool is_enable = 1;
inline void AgleConfMsg_VideosMsg::clear_is_enable() {
  is_enable_ = false;
}
inline bool AgleConfMsg_VideosMsg::_internal_is_enable() const {
  return is_enable_;
}
inline bool AgleConfMsg_VideosMsg::is_enable() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.VideosMsg.is_enable)
  return _internal_is_enable();
}
inline void AgleConfMsg_VideosMsg::_internal_set_is_enable(bool value) {
  
  is_enable_ = value;
}
inline void AgleConfMsg_VideosMsg::set_is_enable(bool value) {
  _internal_set_is_enable(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.VideosMsg.is_enable)
}

// string device_name = 2;
inline void AgleConfMsg_VideosMsg::clear_device_name() {
  device_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& AgleConfMsg_VideosMsg::device_name() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.VideosMsg.device_name)
  return _internal_device_name();
}
inline void AgleConfMsg_VideosMsg::set_device_name(const std::string& value) {
  _internal_set_device_name(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.VideosMsg.device_name)
}
inline std::string* AgleConfMsg_VideosMsg::mutable_device_name() {
  // @@protoc_insertion_point(field_mutable:ivi.agle.AgleConfMsg.VideosMsg.device_name)
  return _internal_mutable_device_name();
}
inline const std::string& AgleConfMsg_VideosMsg::_internal_device_name() const {
  return device_name_.GetNoArena();
}
inline void AgleConfMsg_VideosMsg::_internal_set_device_name(const std::string& value) {
  
  device_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void AgleConfMsg_VideosMsg::set_device_name(std::string&& value) {
  
  device_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ivi.agle.AgleConfMsg.VideosMsg.device_name)
}
inline void AgleConfMsg_VideosMsg::set_device_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  device_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ivi.agle.AgleConfMsg.VideosMsg.device_name)
}
inline void AgleConfMsg_VideosMsg::set_device_name(const char* value, size_t size) {
  
  device_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ivi.agle.AgleConfMsg.VideosMsg.device_name)
}
inline std::string* AgleConfMsg_VideosMsg::_internal_mutable_device_name() {
  
  return device_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AgleConfMsg_VideosMsg::release_device_name() {
  // @@protoc_insertion_point(field_release:ivi.agle.AgleConfMsg.VideosMsg.device_name)
  
  return device_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AgleConfMsg_VideosMsg::set_allocated_device_name(std::string* device_name) {
  if (device_name != nullptr) {
    
  } else {
    
  }
  device_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), device_name);
  // @@protoc_insertion_point(field_set_allocated:ivi.agle.AgleConfMsg.VideosMsg.device_name)
}

// string device_path = 3;
inline void AgleConfMsg_VideosMsg::clear_device_path() {
  device_path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& AgleConfMsg_VideosMsg::device_path() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.VideosMsg.device_path)
  return _internal_device_path();
}
inline void AgleConfMsg_VideosMsg::set_device_path(const std::string& value) {
  _internal_set_device_path(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.VideosMsg.device_path)
}
inline std::string* AgleConfMsg_VideosMsg::mutable_device_path() {
  // @@protoc_insertion_point(field_mutable:ivi.agle.AgleConfMsg.VideosMsg.device_path)
  return _internal_mutable_device_path();
}
inline const std::string& AgleConfMsg_VideosMsg::_internal_device_path() const {
  return device_path_.GetNoArena();
}
inline void AgleConfMsg_VideosMsg::_internal_set_device_path(const std::string& value) {
  
  device_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void AgleConfMsg_VideosMsg::set_device_path(std::string&& value) {
  
  device_path_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ivi.agle.AgleConfMsg.VideosMsg.device_path)
}
inline void AgleConfMsg_VideosMsg::set_device_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  device_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ivi.agle.AgleConfMsg.VideosMsg.device_path)
}
inline void AgleConfMsg_VideosMsg::set_device_path(const char* value, size_t size) {
  
  device_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ivi.agle.AgleConfMsg.VideosMsg.device_path)
}
inline std::string* AgleConfMsg_VideosMsg::_internal_mutable_device_path() {
  
  return device_path_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AgleConfMsg_VideosMsg::release_device_path() {
  // @@protoc_insertion_point(field_release:ivi.agle.AgleConfMsg.VideosMsg.device_path)
  
  return device_path_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AgleConfMsg_VideosMsg::set_allocated_device_path(std::string* device_path) {
  if (device_path != nullptr) {
    
  } else {
    
  }
  device_path_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), device_path);
  // @@protoc_insertion_point(field_set_allocated:ivi.agle.AgleConfMsg.VideosMsg.device_path)
}

// .ivi.agle.AgleConfMsg.VideosMsg.EnumVideoEncodeFormat video_encoder = 4;
inline void AgleConfMsg_VideosMsg::clear_video_encoder() {
  video_encoder_ = 0;
}
inline ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoEncodeFormat AgleConfMsg_VideosMsg::_internal_video_encoder() const {
  return static_cast< ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoEncodeFormat >(video_encoder_);
}
inline ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoEncodeFormat AgleConfMsg_VideosMsg::video_encoder() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.VideosMsg.video_encoder)
  return _internal_video_encoder();
}
inline void AgleConfMsg_VideosMsg::_internal_set_video_encoder(::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoEncodeFormat value) {
  
  video_encoder_ = value;
}
inline void AgleConfMsg_VideosMsg::set_video_encoder(::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoEncodeFormat value) {
  _internal_set_video_encoder(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.VideosMsg.video_encoder)
}

// .ivi.agle.AgleConfMsg.VideosMsg.EnumVideoEncodeQuality video_quality = 5;
inline void AgleConfMsg_VideosMsg::clear_video_quality() {
  video_quality_ = 0;
}
inline ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoEncodeQuality AgleConfMsg_VideosMsg::_internal_video_quality() const {
  return static_cast< ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoEncodeQuality >(video_quality_);
}
inline ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoEncodeQuality AgleConfMsg_VideosMsg::video_quality() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.VideosMsg.video_quality)
  return _internal_video_quality();
}
inline void AgleConfMsg_VideosMsg::_internal_set_video_quality(::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoEncodeQuality value) {
  
  video_quality_ = value;
}
inline void AgleConfMsg_VideosMsg::set_video_quality(::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoEncodeQuality value) {
  _internal_set_video_quality(value);
  // @@protoc_insertion_point(field_set:ivi.agle.AgleConfMsg.VideosMsg.video_quality)
}

// repeated .ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg videos = 6;
inline int AgleConfMsg_VideosMsg::_internal_videos_size() const {
  return videos_.size();
}
inline int AgleConfMsg_VideosMsg::videos_size() const {
  return _internal_videos_size();
}
inline void AgleConfMsg_VideosMsg::clear_videos() {
  videos_.Clear();
}
inline ::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg* AgleConfMsg_VideosMsg::mutable_videos(int index) {
  // @@protoc_insertion_point(field_mutable:ivi.agle.AgleConfMsg.VideosMsg.videos)
  return videos_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg >*
AgleConfMsg_VideosMsg::mutable_videos() {
  // @@protoc_insertion_point(field_mutable_list:ivi.agle.AgleConfMsg.VideosMsg.videos)
  return &videos_;
}
inline const ::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg& AgleConfMsg_VideosMsg::_internal_videos(int index) const {
  return videos_.Get(index);
}
inline const ::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg& AgleConfMsg_VideosMsg::videos(int index) const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.VideosMsg.videos)
  return _internal_videos(index);
}
inline ::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg* AgleConfMsg_VideosMsg::_internal_add_videos() {
  return videos_.Add();
}
inline ::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg* AgleConfMsg_VideosMsg::add_videos() {
  // @@protoc_insertion_point(field_add:ivi.agle.AgleConfMsg.VideosMsg.videos)
  return _internal_add_videos();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg >&
AgleConfMsg_VideosMsg::videos() const {
  // @@protoc_insertion_point(field_list:ivi.agle.AgleConfMsg.VideosMsg.videos)
  return videos_;
}

// -------------------------------------------------------------------

// AgleConfMsg

// .ivi.agle.AgleConfMsg.NtpMsg ntp_msg = 1;
inline bool AgleConfMsg::_internal_has_ntp_msg() const {
  return this != internal_default_instance() && ntp_msg_ != nullptr;
}
inline bool AgleConfMsg::has_ntp_msg() const {
  return _internal_has_ntp_msg();
}
inline void AgleConfMsg::clear_ntp_msg() {
  if (GetArenaNoVirtual() == nullptr && ntp_msg_ != nullptr) {
    delete ntp_msg_;
  }
  ntp_msg_ = nullptr;
}
inline const ::ivi::agle::AgleConfMsg_NtpMsg& AgleConfMsg::_internal_ntp_msg() const {
  const ::ivi::agle::AgleConfMsg_NtpMsg* p = ntp_msg_;
  return p != nullptr ? *p : *reinterpret_cast<const ::ivi::agle::AgleConfMsg_NtpMsg*>(
      &::ivi::agle::_AgleConfMsg_NtpMsg_default_instance_);
}
inline const ::ivi::agle::AgleConfMsg_NtpMsg& AgleConfMsg::ntp_msg() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.ntp_msg)
  return _internal_ntp_msg();
}
inline ::ivi::agle::AgleConfMsg_NtpMsg* AgleConfMsg::release_ntp_msg() {
  // @@protoc_insertion_point(field_release:ivi.agle.AgleConfMsg.ntp_msg)
  
  ::ivi::agle::AgleConfMsg_NtpMsg* temp = ntp_msg_;
  ntp_msg_ = nullptr;
  return temp;
}
inline ::ivi::agle::AgleConfMsg_NtpMsg* AgleConfMsg::_internal_mutable_ntp_msg() {
  
  if (ntp_msg_ == nullptr) {
    auto* p = CreateMaybeMessage<::ivi::agle::AgleConfMsg_NtpMsg>(GetArenaNoVirtual());
    ntp_msg_ = p;
  }
  return ntp_msg_;
}
inline ::ivi::agle::AgleConfMsg_NtpMsg* AgleConfMsg::mutable_ntp_msg() {
  // @@protoc_insertion_point(field_mutable:ivi.agle.AgleConfMsg.ntp_msg)
  return _internal_mutable_ntp_msg();
}
inline void AgleConfMsg::set_allocated_ntp_msg(::ivi::agle::AgleConfMsg_NtpMsg* ntp_msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete ntp_msg_;
  }
  if (ntp_msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ntp_msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ntp_msg, submessage_arena);
    }
    
  } else {
    
  }
  ntp_msg_ = ntp_msg;
  // @@protoc_insertion_point(field_set_allocated:ivi.agle.AgleConfMsg.ntp_msg)
}

// .ivi.agle.AgleConfMsg.LogMsg log_msg = 2;
inline bool AgleConfMsg::_internal_has_log_msg() const {
  return this != internal_default_instance() && log_msg_ != nullptr;
}
inline bool AgleConfMsg::has_log_msg() const {
  return _internal_has_log_msg();
}
inline void AgleConfMsg::clear_log_msg() {
  if (GetArenaNoVirtual() == nullptr && log_msg_ != nullptr) {
    delete log_msg_;
  }
  log_msg_ = nullptr;
}
inline const ::ivi::agle::AgleConfMsg_LogMsg& AgleConfMsg::_internal_log_msg() const {
  const ::ivi::agle::AgleConfMsg_LogMsg* p = log_msg_;
  return p != nullptr ? *p : *reinterpret_cast<const ::ivi::agle::AgleConfMsg_LogMsg*>(
      &::ivi::agle::_AgleConfMsg_LogMsg_default_instance_);
}
inline const ::ivi::agle::AgleConfMsg_LogMsg& AgleConfMsg::log_msg() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.log_msg)
  return _internal_log_msg();
}
inline ::ivi::agle::AgleConfMsg_LogMsg* AgleConfMsg::release_log_msg() {
  // @@protoc_insertion_point(field_release:ivi.agle.AgleConfMsg.log_msg)
  
  ::ivi::agle::AgleConfMsg_LogMsg* temp = log_msg_;
  log_msg_ = nullptr;
  return temp;
}
inline ::ivi::agle::AgleConfMsg_LogMsg* AgleConfMsg::_internal_mutable_log_msg() {
  
  if (log_msg_ == nullptr) {
    auto* p = CreateMaybeMessage<::ivi::agle::AgleConfMsg_LogMsg>(GetArenaNoVirtual());
    log_msg_ = p;
  }
  return log_msg_;
}
inline ::ivi::agle::AgleConfMsg_LogMsg* AgleConfMsg::mutable_log_msg() {
  // @@protoc_insertion_point(field_mutable:ivi.agle.AgleConfMsg.log_msg)
  return _internal_mutable_log_msg();
}
inline void AgleConfMsg::set_allocated_log_msg(::ivi::agle::AgleConfMsg_LogMsg* log_msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete log_msg_;
  }
  if (log_msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      log_msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, log_msg, submessage_arena);
    }
    
  } else {
    
  }
  log_msg_ = log_msg;
  // @@protoc_insertion_point(field_set_allocated:ivi.agle.AgleConfMsg.log_msg)
}

// .ivi.agle.AgleConfMsg.ManagementMsg management_msg = 3;
inline bool AgleConfMsg::_internal_has_management_msg() const {
  return this != internal_default_instance() && management_msg_ != nullptr;
}
inline bool AgleConfMsg::has_management_msg() const {
  return _internal_has_management_msg();
}
inline void AgleConfMsg::clear_management_msg() {
  if (GetArenaNoVirtual() == nullptr && management_msg_ != nullptr) {
    delete management_msg_;
  }
  management_msg_ = nullptr;
}
inline const ::ivi::agle::AgleConfMsg_ManagementMsg& AgleConfMsg::_internal_management_msg() const {
  const ::ivi::agle::AgleConfMsg_ManagementMsg* p = management_msg_;
  return p != nullptr ? *p : *reinterpret_cast<const ::ivi::agle::AgleConfMsg_ManagementMsg*>(
      &::ivi::agle::_AgleConfMsg_ManagementMsg_default_instance_);
}
inline const ::ivi::agle::AgleConfMsg_ManagementMsg& AgleConfMsg::management_msg() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.management_msg)
  return _internal_management_msg();
}
inline ::ivi::agle::AgleConfMsg_ManagementMsg* AgleConfMsg::release_management_msg() {
  // @@protoc_insertion_point(field_release:ivi.agle.AgleConfMsg.management_msg)
  
  ::ivi::agle::AgleConfMsg_ManagementMsg* temp = management_msg_;
  management_msg_ = nullptr;
  return temp;
}
inline ::ivi::agle::AgleConfMsg_ManagementMsg* AgleConfMsg::_internal_mutable_management_msg() {
  
  if (management_msg_ == nullptr) {
    auto* p = CreateMaybeMessage<::ivi::agle::AgleConfMsg_ManagementMsg>(GetArenaNoVirtual());
    management_msg_ = p;
  }
  return management_msg_;
}
inline ::ivi::agle::AgleConfMsg_ManagementMsg* AgleConfMsg::mutable_management_msg() {
  // @@protoc_insertion_point(field_mutable:ivi.agle.AgleConfMsg.management_msg)
  return _internal_mutable_management_msg();
}
inline void AgleConfMsg::set_allocated_management_msg(::ivi::agle::AgleConfMsg_ManagementMsg* management_msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete management_msg_;
  }
  if (management_msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      management_msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, management_msg, submessage_arena);
    }
    
  } else {
    
  }
  management_msg_ = management_msg;
  // @@protoc_insertion_point(field_set_allocated:ivi.agle.AgleConfMsg.management_msg)
}

// .ivi.agle.AgleConfMsg.RecordMsg record_msg = 4;
inline bool AgleConfMsg::_internal_has_record_msg() const {
  return this != internal_default_instance() && record_msg_ != nullptr;
}
inline bool AgleConfMsg::has_record_msg() const {
  return _internal_has_record_msg();
}
inline void AgleConfMsg::clear_record_msg() {
  if (GetArenaNoVirtual() == nullptr && record_msg_ != nullptr) {
    delete record_msg_;
  }
  record_msg_ = nullptr;
}
inline const ::ivi::agle::AgleConfMsg_RecordMsg& AgleConfMsg::_internal_record_msg() const {
  const ::ivi::agle::AgleConfMsg_RecordMsg* p = record_msg_;
  return p != nullptr ? *p : *reinterpret_cast<const ::ivi::agle::AgleConfMsg_RecordMsg*>(
      &::ivi::agle::_AgleConfMsg_RecordMsg_default_instance_);
}
inline const ::ivi::agle::AgleConfMsg_RecordMsg& AgleConfMsg::record_msg() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.record_msg)
  return _internal_record_msg();
}
inline ::ivi::agle::AgleConfMsg_RecordMsg* AgleConfMsg::release_record_msg() {
  // @@protoc_insertion_point(field_release:ivi.agle.AgleConfMsg.record_msg)
  
  ::ivi::agle::AgleConfMsg_RecordMsg* temp = record_msg_;
  record_msg_ = nullptr;
  return temp;
}
inline ::ivi::agle::AgleConfMsg_RecordMsg* AgleConfMsg::_internal_mutable_record_msg() {
  
  if (record_msg_ == nullptr) {
    auto* p = CreateMaybeMessage<::ivi::agle::AgleConfMsg_RecordMsg>(GetArenaNoVirtual());
    record_msg_ = p;
  }
  return record_msg_;
}
inline ::ivi::agle::AgleConfMsg_RecordMsg* AgleConfMsg::mutable_record_msg() {
  // @@protoc_insertion_point(field_mutable:ivi.agle.AgleConfMsg.record_msg)
  return _internal_mutable_record_msg();
}
inline void AgleConfMsg::set_allocated_record_msg(::ivi::agle::AgleConfMsg_RecordMsg* record_msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete record_msg_;
  }
  if (record_msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      record_msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, record_msg, submessage_arena);
    }
    
  } else {
    
  }
  record_msg_ = record_msg;
  // @@protoc_insertion_point(field_set_allocated:ivi.agle.AgleConfMsg.record_msg)
}

// .ivi.agle.AgleConfMsg.RtmpServerMsg rtmp_server_msg = 5;
inline bool AgleConfMsg::_internal_has_rtmp_server_msg() const {
  return this != internal_default_instance() && rtmp_server_msg_ != nullptr;
}
inline bool AgleConfMsg::has_rtmp_server_msg() const {
  return _internal_has_rtmp_server_msg();
}
inline void AgleConfMsg::clear_rtmp_server_msg() {
  if (GetArenaNoVirtual() == nullptr && rtmp_server_msg_ != nullptr) {
    delete rtmp_server_msg_;
  }
  rtmp_server_msg_ = nullptr;
}
inline const ::ivi::agle::AgleConfMsg_RtmpServerMsg& AgleConfMsg::_internal_rtmp_server_msg() const {
  const ::ivi::agle::AgleConfMsg_RtmpServerMsg* p = rtmp_server_msg_;
  return p != nullptr ? *p : *reinterpret_cast<const ::ivi::agle::AgleConfMsg_RtmpServerMsg*>(
      &::ivi::agle::_AgleConfMsg_RtmpServerMsg_default_instance_);
}
inline const ::ivi::agle::AgleConfMsg_RtmpServerMsg& AgleConfMsg::rtmp_server_msg() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.rtmp_server_msg)
  return _internal_rtmp_server_msg();
}
inline ::ivi::agle::AgleConfMsg_RtmpServerMsg* AgleConfMsg::release_rtmp_server_msg() {
  // @@protoc_insertion_point(field_release:ivi.agle.AgleConfMsg.rtmp_server_msg)
  
  ::ivi::agle::AgleConfMsg_RtmpServerMsg* temp = rtmp_server_msg_;
  rtmp_server_msg_ = nullptr;
  return temp;
}
inline ::ivi::agle::AgleConfMsg_RtmpServerMsg* AgleConfMsg::_internal_mutable_rtmp_server_msg() {
  
  if (rtmp_server_msg_ == nullptr) {
    auto* p = CreateMaybeMessage<::ivi::agle::AgleConfMsg_RtmpServerMsg>(GetArenaNoVirtual());
    rtmp_server_msg_ = p;
  }
  return rtmp_server_msg_;
}
inline ::ivi::agle::AgleConfMsg_RtmpServerMsg* AgleConfMsg::mutable_rtmp_server_msg() {
  // @@protoc_insertion_point(field_mutable:ivi.agle.AgleConfMsg.rtmp_server_msg)
  return _internal_mutable_rtmp_server_msg();
}
inline void AgleConfMsg::set_allocated_rtmp_server_msg(::ivi::agle::AgleConfMsg_RtmpServerMsg* rtmp_server_msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete rtmp_server_msg_;
  }
  if (rtmp_server_msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      rtmp_server_msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rtmp_server_msg, submessage_arena);
    }
    
  } else {
    
  }
  rtmp_server_msg_ = rtmp_server_msg;
  // @@protoc_insertion_point(field_set_allocated:ivi.agle.AgleConfMsg.rtmp_server_msg)
}

// .ivi.agle.AgleConfMsg.AudiosMsg audio_msg = 6;
inline bool AgleConfMsg::_internal_has_audio_msg() const {
  return this != internal_default_instance() && audio_msg_ != nullptr;
}
inline bool AgleConfMsg::has_audio_msg() const {
  return _internal_has_audio_msg();
}
inline void AgleConfMsg::clear_audio_msg() {
  if (GetArenaNoVirtual() == nullptr && audio_msg_ != nullptr) {
    delete audio_msg_;
  }
  audio_msg_ = nullptr;
}
inline const ::ivi::agle::AgleConfMsg_AudiosMsg& AgleConfMsg::_internal_audio_msg() const {
  const ::ivi::agle::AgleConfMsg_AudiosMsg* p = audio_msg_;
  return p != nullptr ? *p : *reinterpret_cast<const ::ivi::agle::AgleConfMsg_AudiosMsg*>(
      &::ivi::agle::_AgleConfMsg_AudiosMsg_default_instance_);
}
inline const ::ivi::agle::AgleConfMsg_AudiosMsg& AgleConfMsg::audio_msg() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.audio_msg)
  return _internal_audio_msg();
}
inline ::ivi::agle::AgleConfMsg_AudiosMsg* AgleConfMsg::release_audio_msg() {
  // @@protoc_insertion_point(field_release:ivi.agle.AgleConfMsg.audio_msg)
  
  ::ivi::agle::AgleConfMsg_AudiosMsg* temp = audio_msg_;
  audio_msg_ = nullptr;
  return temp;
}
inline ::ivi::agle::AgleConfMsg_AudiosMsg* AgleConfMsg::_internal_mutable_audio_msg() {
  
  if (audio_msg_ == nullptr) {
    auto* p = CreateMaybeMessage<::ivi::agle::AgleConfMsg_AudiosMsg>(GetArenaNoVirtual());
    audio_msg_ = p;
  }
  return audio_msg_;
}
inline ::ivi::agle::AgleConfMsg_AudiosMsg* AgleConfMsg::mutable_audio_msg() {
  // @@protoc_insertion_point(field_mutable:ivi.agle.AgleConfMsg.audio_msg)
  return _internal_mutable_audio_msg();
}
inline void AgleConfMsg::set_allocated_audio_msg(::ivi::agle::AgleConfMsg_AudiosMsg* audio_msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete audio_msg_;
  }
  if (audio_msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      audio_msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, audio_msg, submessage_arena);
    }
    
  } else {
    
  }
  audio_msg_ = audio_msg;
  // @@protoc_insertion_point(field_set_allocated:ivi.agle.AgleConfMsg.audio_msg)
}

// .ivi.agle.AgleConfMsg.VideosMsg video_msg = 7;
inline bool AgleConfMsg::_internal_has_video_msg() const {
  return this != internal_default_instance() && video_msg_ != nullptr;
}
inline bool AgleConfMsg::has_video_msg() const {
  return _internal_has_video_msg();
}
inline void AgleConfMsg::clear_video_msg() {
  if (GetArenaNoVirtual() == nullptr && video_msg_ != nullptr) {
    delete video_msg_;
  }
  video_msg_ = nullptr;
}
inline const ::ivi::agle::AgleConfMsg_VideosMsg& AgleConfMsg::_internal_video_msg() const {
  const ::ivi::agle::AgleConfMsg_VideosMsg* p = video_msg_;
  return p != nullptr ? *p : *reinterpret_cast<const ::ivi::agle::AgleConfMsg_VideosMsg*>(
      &::ivi::agle::_AgleConfMsg_VideosMsg_default_instance_);
}
inline const ::ivi::agle::AgleConfMsg_VideosMsg& AgleConfMsg::video_msg() const {
  // @@protoc_insertion_point(field_get:ivi.agle.AgleConfMsg.video_msg)
  return _internal_video_msg();
}
inline ::ivi::agle::AgleConfMsg_VideosMsg* AgleConfMsg::release_video_msg() {
  // @@protoc_insertion_point(field_release:ivi.agle.AgleConfMsg.video_msg)
  
  ::ivi::agle::AgleConfMsg_VideosMsg* temp = video_msg_;
  video_msg_ = nullptr;
  return temp;
}
inline ::ivi::agle::AgleConfMsg_VideosMsg* AgleConfMsg::_internal_mutable_video_msg() {
  
  if (video_msg_ == nullptr) {
    auto* p = CreateMaybeMessage<::ivi::agle::AgleConfMsg_VideosMsg>(GetArenaNoVirtual());
    video_msg_ = p;
  }
  return video_msg_;
}
inline ::ivi::agle::AgleConfMsg_VideosMsg* AgleConfMsg::mutable_video_msg() {
  // @@protoc_insertion_point(field_mutable:ivi.agle.AgleConfMsg.video_msg)
  return _internal_mutable_video_msg();
}
inline void AgleConfMsg::set_allocated_video_msg(::ivi::agle::AgleConfMsg_VideosMsg* video_msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete video_msg_;
  }
  if (video_msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      video_msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, video_msg, submessage_arena);
    }
    
  } else {
    
  }
  video_msg_ = video_msg;
  // @@protoc_insertion_point(field_set_allocated:ivi.agle.AgleConfMsg.video_msg)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace agle
}  // namespace ivi

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioBitrate> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioBitrate>() {
  return ::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioBitrate_descriptor();
}
template <> struct is_proto_enum< ::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioFormat> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioFormat>() {
  return ::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioFormat_descriptor();
}
template <> struct is_proto_enum< ::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioSamplerate> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioSamplerate>() {
  return ::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioSamplerate_descriptor();
}
template <> struct is_proto_enum< ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoEncodeFormat> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoEncodeFormat>() {
  return ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_descriptor();
}
template <> struct is_proto_enum< ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoEncodeQuality> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoEncodeQuality>() {
  return ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_descriptor();
}
template <> struct is_proto_enum< ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoOutSize> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoOutSize>() {
  return ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoOutSize_descriptor();
}
template <> struct is_proto_enum< ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoBitrate> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoBitrate>() {
  return ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoBitrate_descriptor();
}
template <> struct is_proto_enum< ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoFramerate> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoFramerate>() {
  return ::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoFramerate_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_agle_5fconf_2eproto
