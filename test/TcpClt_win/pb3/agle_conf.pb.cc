// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: agle_conf.proto

#include "agle_conf.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_agle_5fconf_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AgleConfMsg_AudiosMsg_agle_5fconf_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_agle_5fconf_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AgleConfMsg_AudiosMsg_AudioEntityMsg_agle_5fconf_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_agle_5fconf_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AgleConfMsg_LogMsg_agle_5fconf_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_agle_5fconf_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AgleConfMsg_ManagementMsg_agle_5fconf_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_agle_5fconf_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AgleConfMsg_NtpMsg_agle_5fconf_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_agle_5fconf_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AgleConfMsg_NtpMsg_NtpEntityMsg_agle_5fconf_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_agle_5fconf_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AgleConfMsg_RecordMsg_agle_5fconf_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_agle_5fconf_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AgleConfMsg_RtmpServerMsg_agle_5fconf_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_agle_5fconf_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AgleConfMsg_RtmpServerMsg_ServerEntityMsg_agle_5fconf_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_agle_5fconf_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AgleConfMsg_VideosMsg_agle_5fconf_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_agle_5fconf_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AgleConfMsg_VideosMsg_CropMsg_agle_5fconf_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_agle_5fconf_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AgleConfMsg_VideosMsg_VideoEntityMsg_agle_5fconf_2eproto;
namespace ivi {
namespace agle {
class AgleConfMsg_NtpMsg_NtpEntityMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AgleConfMsg_NtpMsg_NtpEntityMsg> _instance;
} _AgleConfMsg_NtpMsg_NtpEntityMsg_default_instance_;
class AgleConfMsg_NtpMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AgleConfMsg_NtpMsg> _instance;
} _AgleConfMsg_NtpMsg_default_instance_;
class AgleConfMsg_LogMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AgleConfMsg_LogMsg> _instance;
} _AgleConfMsg_LogMsg_default_instance_;
class AgleConfMsg_ManagementMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AgleConfMsg_ManagementMsg> _instance;
} _AgleConfMsg_ManagementMsg_default_instance_;
class AgleConfMsg_RecordMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AgleConfMsg_RecordMsg> _instance;
} _AgleConfMsg_RecordMsg_default_instance_;
class AgleConfMsg_RtmpServerMsg_ServerEntityMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AgleConfMsg_RtmpServerMsg_ServerEntityMsg> _instance;
} _AgleConfMsg_RtmpServerMsg_ServerEntityMsg_default_instance_;
class AgleConfMsg_RtmpServerMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AgleConfMsg_RtmpServerMsg> _instance;
} _AgleConfMsg_RtmpServerMsg_default_instance_;
class AgleConfMsg_AudiosMsg_AudioEntityMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AgleConfMsg_AudiosMsg_AudioEntityMsg> _instance;
} _AgleConfMsg_AudiosMsg_AudioEntityMsg_default_instance_;
class AgleConfMsg_AudiosMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AgleConfMsg_AudiosMsg> _instance;
} _AgleConfMsg_AudiosMsg_default_instance_;
class AgleConfMsg_VideosMsg_CropMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AgleConfMsg_VideosMsg_CropMsg> _instance;
} _AgleConfMsg_VideosMsg_CropMsg_default_instance_;
class AgleConfMsg_VideosMsg_VideoEntityMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AgleConfMsg_VideosMsg_VideoEntityMsg> _instance;
} _AgleConfMsg_VideosMsg_VideoEntityMsg_default_instance_;
class AgleConfMsg_VideosMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AgleConfMsg_VideosMsg> _instance;
} _AgleConfMsg_VideosMsg_default_instance_;
class AgleConfMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AgleConfMsg> _instance;
} _AgleConfMsg_default_instance_;
}  // namespace agle
}  // namespace ivi
static void InitDefaultsscc_info_AgleConfMsg_agle_5fconf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ivi::agle::_AgleConfMsg_default_instance_;
    new (ptr) ::ivi::agle::AgleConfMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ivi::agle::AgleConfMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<7> scc_info_AgleConfMsg_agle_5fconf_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 7, 0, InitDefaultsscc_info_AgleConfMsg_agle_5fconf_2eproto}, {
      &scc_info_AgleConfMsg_NtpMsg_agle_5fconf_2eproto.base,
      &scc_info_AgleConfMsg_LogMsg_agle_5fconf_2eproto.base,
      &scc_info_AgleConfMsg_ManagementMsg_agle_5fconf_2eproto.base,
      &scc_info_AgleConfMsg_RecordMsg_agle_5fconf_2eproto.base,
      &scc_info_AgleConfMsg_RtmpServerMsg_agle_5fconf_2eproto.base,
      &scc_info_AgleConfMsg_AudiosMsg_agle_5fconf_2eproto.base,
      &scc_info_AgleConfMsg_VideosMsg_agle_5fconf_2eproto.base,}};

static void InitDefaultsscc_info_AgleConfMsg_AudiosMsg_agle_5fconf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ivi::agle::_AgleConfMsg_AudiosMsg_default_instance_;
    new (ptr) ::ivi::agle::AgleConfMsg_AudiosMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ivi::agle::AgleConfMsg_AudiosMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AgleConfMsg_AudiosMsg_agle_5fconf_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AgleConfMsg_AudiosMsg_agle_5fconf_2eproto}, {
      &scc_info_AgleConfMsg_AudiosMsg_AudioEntityMsg_agle_5fconf_2eproto.base,}};

static void InitDefaultsscc_info_AgleConfMsg_AudiosMsg_AudioEntityMsg_agle_5fconf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ivi::agle::_AgleConfMsg_AudiosMsg_AudioEntityMsg_default_instance_;
    new (ptr) ::ivi::agle::AgleConfMsg_AudiosMsg_AudioEntityMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ivi::agle::AgleConfMsg_AudiosMsg_AudioEntityMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AgleConfMsg_AudiosMsg_AudioEntityMsg_agle_5fconf_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AgleConfMsg_AudiosMsg_AudioEntityMsg_agle_5fconf_2eproto}, {}};

static void InitDefaultsscc_info_AgleConfMsg_LogMsg_agle_5fconf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ivi::agle::_AgleConfMsg_LogMsg_default_instance_;
    new (ptr) ::ivi::agle::AgleConfMsg_LogMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ivi::agle::AgleConfMsg_LogMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AgleConfMsg_LogMsg_agle_5fconf_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AgleConfMsg_LogMsg_agle_5fconf_2eproto}, {}};

static void InitDefaultsscc_info_AgleConfMsg_ManagementMsg_agle_5fconf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ivi::agle::_AgleConfMsg_ManagementMsg_default_instance_;
    new (ptr) ::ivi::agle::AgleConfMsg_ManagementMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ivi::agle::AgleConfMsg_ManagementMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AgleConfMsg_ManagementMsg_agle_5fconf_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AgleConfMsg_ManagementMsg_agle_5fconf_2eproto}, {}};

static void InitDefaultsscc_info_AgleConfMsg_NtpMsg_agle_5fconf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ivi::agle::_AgleConfMsg_NtpMsg_default_instance_;
    new (ptr) ::ivi::agle::AgleConfMsg_NtpMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ivi::agle::AgleConfMsg_NtpMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AgleConfMsg_NtpMsg_agle_5fconf_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AgleConfMsg_NtpMsg_agle_5fconf_2eproto}, {
      &scc_info_AgleConfMsg_NtpMsg_NtpEntityMsg_agle_5fconf_2eproto.base,}};

static void InitDefaultsscc_info_AgleConfMsg_NtpMsg_NtpEntityMsg_agle_5fconf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ivi::agle::_AgleConfMsg_NtpMsg_NtpEntityMsg_default_instance_;
    new (ptr) ::ivi::agle::AgleConfMsg_NtpMsg_NtpEntityMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ivi::agle::AgleConfMsg_NtpMsg_NtpEntityMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AgleConfMsg_NtpMsg_NtpEntityMsg_agle_5fconf_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AgleConfMsg_NtpMsg_NtpEntityMsg_agle_5fconf_2eproto}, {}};

static void InitDefaultsscc_info_AgleConfMsg_RecordMsg_agle_5fconf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ivi::agle::_AgleConfMsg_RecordMsg_default_instance_;
    new (ptr) ::ivi::agle::AgleConfMsg_RecordMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ivi::agle::AgleConfMsg_RecordMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AgleConfMsg_RecordMsg_agle_5fconf_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AgleConfMsg_RecordMsg_agle_5fconf_2eproto}, {}};

static void InitDefaultsscc_info_AgleConfMsg_RtmpServerMsg_agle_5fconf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ivi::agle::_AgleConfMsg_RtmpServerMsg_default_instance_;
    new (ptr) ::ivi::agle::AgleConfMsg_RtmpServerMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ivi::agle::AgleConfMsg_RtmpServerMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AgleConfMsg_RtmpServerMsg_agle_5fconf_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AgleConfMsg_RtmpServerMsg_agle_5fconf_2eproto}, {
      &scc_info_AgleConfMsg_RtmpServerMsg_ServerEntityMsg_agle_5fconf_2eproto.base,}};

static void InitDefaultsscc_info_AgleConfMsg_RtmpServerMsg_ServerEntityMsg_agle_5fconf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ivi::agle::_AgleConfMsg_RtmpServerMsg_ServerEntityMsg_default_instance_;
    new (ptr) ::ivi::agle::AgleConfMsg_RtmpServerMsg_ServerEntityMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ivi::agle::AgleConfMsg_RtmpServerMsg_ServerEntityMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AgleConfMsg_RtmpServerMsg_ServerEntityMsg_agle_5fconf_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AgleConfMsg_RtmpServerMsg_ServerEntityMsg_agle_5fconf_2eproto}, {}};

static void InitDefaultsscc_info_AgleConfMsg_VideosMsg_agle_5fconf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ivi::agle::_AgleConfMsg_VideosMsg_default_instance_;
    new (ptr) ::ivi::agle::AgleConfMsg_VideosMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ivi::agle::AgleConfMsg_VideosMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AgleConfMsg_VideosMsg_agle_5fconf_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AgleConfMsg_VideosMsg_agle_5fconf_2eproto}, {
      &scc_info_AgleConfMsg_VideosMsg_VideoEntityMsg_agle_5fconf_2eproto.base,}};

static void InitDefaultsscc_info_AgleConfMsg_VideosMsg_CropMsg_agle_5fconf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ivi::agle::_AgleConfMsg_VideosMsg_CropMsg_default_instance_;
    new (ptr) ::ivi::agle::AgleConfMsg_VideosMsg_CropMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ivi::agle::AgleConfMsg_VideosMsg_CropMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AgleConfMsg_VideosMsg_CropMsg_agle_5fconf_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AgleConfMsg_VideosMsg_CropMsg_agle_5fconf_2eproto}, {}};

static void InitDefaultsscc_info_AgleConfMsg_VideosMsg_VideoEntityMsg_agle_5fconf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ivi::agle::_AgleConfMsg_VideosMsg_VideoEntityMsg_default_instance_;
    new (ptr) ::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AgleConfMsg_VideosMsg_VideoEntityMsg_agle_5fconf_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AgleConfMsg_VideosMsg_VideoEntityMsg_agle_5fconf_2eproto}, {
      &scc_info_AgleConfMsg_VideosMsg_CropMsg_agle_5fconf_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_agle_5fconf_2eproto[13];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_agle_5fconf_2eproto[8];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_agle_5fconf_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_agle_5fconf_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_NtpMsg_NtpEntityMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_NtpMsg_NtpEntityMsg, server_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_NtpMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_NtpMsg, is_enable_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_NtpMsg, ntp_server_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_LogMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_LogMsg, is_enable_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_LogMsg, log_path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_ManagementMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_ManagementMsg, is_enable_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_ManagementMsg, tcp_server_ip_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_ManagementMsg, tcp_server_port_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_ManagementMsg, client_type_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_ManagementMsg, client_id_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_ManagementMsg, login_interval_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_RecordMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_RecordMsg, is_enable_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_RecordMsg, rec_path_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_RecordMsg, rec_recycle_days_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_RecordMsg, rec_segment_hour_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_RecordMsg, rec_segment_minutes_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_RecordMsg, rec_start_time_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_RecordMsg, rec_stop_time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_RtmpServerMsg_ServerEntityMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_RtmpServerMsg_ServerEntityMsg, is_master_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_RtmpServerMsg_ServerEntityMsg, entity_id_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_RtmpServerMsg_ServerEntityMsg, rtmp_server_url_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_RtmpServerMsg_ServerEntityMsg, stream_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_RtmpServerMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_RtmpServerMsg, is_enable_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_RtmpServerMsg, rtmp_servers_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_AudiosMsg_AudioEntityMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_AudiosMsg_AudioEntityMsg, is_enable_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_AudiosMsg_AudioEntityMsg, entity_id_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_AudiosMsg_AudioEntityMsg, channels_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_AudiosMsg_AudioEntityMsg, bitrate_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_AudiosMsg_AudioEntityMsg, format_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_AudiosMsg_AudioEntityMsg, samplerate_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_AudiosMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_AudiosMsg, is_enable_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_AudiosMsg, device_name_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_AudiosMsg, device_path_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_AudiosMsg, audios_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_VideosMsg_CropMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_VideosMsg_CropMsg, is_enable_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_VideosMsg_CropMsg, crop_x_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_VideosMsg_CropMsg, crop_y_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_VideosMsg_CropMsg, crop_width_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_VideosMsg_CropMsg, crop_height_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg, is_enable_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg, entity_id_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg, outputsize_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg, bitrate_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg, framerate_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg, keyframe_frequency_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg, crop_setting_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_VideosMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_VideosMsg, is_enable_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_VideosMsg, device_name_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_VideosMsg, device_path_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_VideosMsg, video_encoder_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_VideosMsg, video_quality_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg_VideosMsg, videos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg, ntp_msg_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg, log_msg_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg, management_msg_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg, record_msg_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg, rtmp_server_msg_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg, audio_msg_),
  PROTOBUF_FIELD_OFFSET(::ivi::agle::AgleConfMsg, video_msg_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ivi::agle::AgleConfMsg_NtpMsg_NtpEntityMsg)},
  { 6, -1, sizeof(::ivi::agle::AgleConfMsg_NtpMsg)},
  { 13, -1, sizeof(::ivi::agle::AgleConfMsg_LogMsg)},
  { 20, -1, sizeof(::ivi::agle::AgleConfMsg_ManagementMsg)},
  { 31, -1, sizeof(::ivi::agle::AgleConfMsg_RecordMsg)},
  { 43, -1, sizeof(::ivi::agle::AgleConfMsg_RtmpServerMsg_ServerEntityMsg)},
  { 52, -1, sizeof(::ivi::agle::AgleConfMsg_RtmpServerMsg)},
  { 59, -1, sizeof(::ivi::agle::AgleConfMsg_AudiosMsg_AudioEntityMsg)},
  { 70, -1, sizeof(::ivi::agle::AgleConfMsg_AudiosMsg)},
  { 79, -1, sizeof(::ivi::agle::AgleConfMsg_VideosMsg_CropMsg)},
  { 89, -1, sizeof(::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg)},
  { 101, -1, sizeof(::ivi::agle::AgleConfMsg_VideosMsg)},
  { 112, -1, sizeof(::ivi::agle::AgleConfMsg)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ivi::agle::_AgleConfMsg_NtpMsg_NtpEntityMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ivi::agle::_AgleConfMsg_NtpMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ivi::agle::_AgleConfMsg_LogMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ivi::agle::_AgleConfMsg_ManagementMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ivi::agle::_AgleConfMsg_RecordMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ivi::agle::_AgleConfMsg_RtmpServerMsg_ServerEntityMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ivi::agle::_AgleConfMsg_RtmpServerMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ivi::agle::_AgleConfMsg_AudiosMsg_AudioEntityMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ivi::agle::_AgleConfMsg_AudiosMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ivi::agle::_AgleConfMsg_VideosMsg_CropMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ivi::agle::_AgleConfMsg_VideosMsg_VideoEntityMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ivi::agle::_AgleConfMsg_VideosMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ivi::agle::_AgleConfMsg_default_instance_),
};

const char descriptor_table_protodef_agle_5fconf_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017agle_conf.proto\022\010ivi.agle\032\013commu.proto"
  "\"\333\027\n\013AgleConfMsg\022-\n\007ntp_msg\030\001 \001(\0132\034.ivi."
  "agle.AgleConfMsg.NtpMsg\022-\n\007log_msg\030\002 \001(\013"
  "2\034.ivi.agle.AgleConfMsg.LogMsg\022;\n\016manage"
  "ment_msg\030\003 \001(\0132#.ivi.agle.AgleConfMsg.Ma"
  "nagementMsg\0223\n\nrecord_msg\030\004 \001(\0132\037.ivi.ag"
  "le.AgleConfMsg.RecordMsg\022<\n\017rtmp_server_"
  "msg\030\005 \001(\0132#.ivi.agle.AgleConfMsg.RtmpSer"
  "verMsg\0222\n\taudio_msg\030\006 \001(\0132\037.ivi.agle.Agl"
  "eConfMsg.AudiosMsg\0222\n\tvideo_msg\030\007 \001(\0132\037."
  "ivi.agle.AgleConfMsg.VideosMsg\032\177\n\006NtpMsg"
  "\022\021\n\tis_enable\030\001 \001(\010\022=\n\nntp_server\030\002 \003(\0132"
  ").ivi.agle.AgleConfMsg.NtpMsg.NtpEntityM"
  "sg\032#\n\014NtpEntityMsg\022\023\n\013server_name\030\001 \001(\t\032"
  "-\n\006LogMsg\022\021\n\tis_enable\030\001 \001(\010\022\020\n\010log_path"
  "\030\002 \001(\t\032\222\001\n\rManagementMsg\022\021\n\tis_enable\030\001 "
  "\001(\010\022\025\n\rtcp_server_ip\030\002 \001(\t\022\027\n\017tcp_server"
  "_port\030\003 \001(\r\022\023\n\013client_type\030\004 \001(\t\022\021\n\tclie"
  "nt_ID\030\005 \001(\t\022\026\n\016login_interval\030\006 \001(\r\032\260\001\n\t"
  "RecordMsg\022\021\n\tis_enable\030\001 \001(\010\022\020\n\010rec_path"
  "\030\002 \001(\t\022\030\n\020rec_recycle_days\030\003 \001(\r\022\030\n\020rec_"
  "segment_hour\030\004 \001(\r\022\033\n\023rec_segment_minute"
  "s\030\005 \001(\r\022\026\n\016rec_start_time\030\006 \001(\t\022\025\n\rrec_s"
  "top_time\030\007 \001(\t\032\324\001\n\rRtmpServerMsg\022\021\n\tis_e"
  "nable\030\001 \001(\010\022I\n\014rtmp_servers\030\002 \003(\01323.ivi."
  "agle.AgleConfMsg.RtmpServerMsg.ServerEnt"
  "ityMsg\032e\n\017ServerEntityMsg\022\021\n\tis_master\030\001"
  " \001(\010\022\021\n\tentity_id\030\002 \001(\r\022\027\n\017rtmp_server_u"
  "rl\030\003 \001(\t\022\023\n\013stream_name\030\004 \001(\t\032\234\005\n\tAudios"
  "Msg\022\021\n\tis_enable\030\001 \001(\010\022\023\n\013device_name\030\002 "
  "\001(\t\022\023\n\013device_path\030\003 \001(\t\022>\n\006audios\030\004 \003(\013"
  "2..ivi.agle.AgleConfMsg.AudiosMsg.AudioE"
  "ntityMsg\032\225\002\n\016AudioEntityMsg\022\021\n\tis_enable"
  "\030\001 \001(\010\022\021\n\tentity_id\030\002 \001(\r\022\020\n\010channels\030\003 "
  "\001(\t\022A\n\007bitrate\030\004 \001(\01620.ivi.agle.AgleConf"
  "Msg.AudiosMsg.EnumAudioBitrate\022\?\n\006format"
  "\030\005 \001(\0162/.ivi.agle.AgleConfMsg.AudiosMsg."
  "EnumAudioFormat\022G\n\nsamplerate\030\006 \001(\01623.iv"
  "i.agle.AgleConfMsg.AudiosMsg.EnumAudioSa"
  "mplerate\"}\n\020EnumAudioBitrate\022\014\n\010kbps_320"
  "\020\000\022\014\n\010kbps_256\020\001\022\014\n\010kbps_128\020\002\022\013\n\007kbps_9"
  "6\020\003\022\013\n\007kbps_80\020\004\022\013\n\007kbps_64\020\005\022\013\n\007kbps_48"
  "\020\006\022\013\n\007kbps_36\020\007\"\036\n\017EnumAudioFormat\022\013\n\007aa"
  "c_low\020\000\"[\n\023EnumAudioSamplerate\022\014\n\010Hz_480"
  "00\020\000\022\014\n\010Hz_44100\020\001\022\014\n\010Hz_24000\020\002\022\014\n\010Hz_2"
  "2050\020\003\022\014\n\010Hz_16000\020\004\032\347\t\n\tVideosMsg\022\021\n\tis"
  "_enable\030\001 \001(\010\022\023\n\013device_name\030\002 \001(\t\022\023\n\013de"
  "vice_path\030\003 \001(\t\022L\n\rvideo_encoder\030\004 \001(\01625"
  ".ivi.agle.AgleConfMsg.VideosMsg.EnumVide"
  "oEncodeFormat\022M\n\rvideo_quality\030\005 \001(\01626.i"
  "vi.agle.AgleConfMsg.VideosMsg.EnumVideoE"
  "ncodeQuality\022>\n\006videos\030\006 \003(\0132..ivi.agle."
  "AgleConfMsg.VideosMsg.VideoEntityMsg\032e\n\007"
  "CropMsg\022\021\n\tis_enable\030\001 \001(\010\022\016\n\006crop_x\030\002 \001"
  "(\r\022\016\n\006crop_y\030\003 \001(\r\022\022\n\ncrop_width\030\004 \001(\r\022\023"
  "\n\013crop_height\030\005 \001(\r\032\341\002\n\016VideoEntityMsg\022\021"
  "\n\tis_enable\030\001 \001(\010\022\021\n\tentity_id\030\002 \001(\r\022D\n\n"
  "outputsize\030\003 \001(\01620.ivi.agle.AgleConfMsg."
  "VideosMsg.EnumVideoOutSize\022A\n\007bitrate\030\004 "
  "\001(\01620.ivi.agle.AgleConfMsg.VideosMsg.Enu"
  "mVideoBitrate\022E\n\tframerate\030\005 \001(\01622.ivi.a"
  "gle.AgleConfMsg.VideosMsg.EnumVideoFrame"
  "rate\022\032\n\022keyframe_frequency\030\006 \001(\r\022=\n\014crop"
  "_setting\030\007 \001(\0132\'.ivi.agle.AgleConfMsg.Vi"
  "deosMsg.CropMsg\"\?\n\025EnumVideoEncodeFormat"
  "\022\010\n\004x264\020\000\022\014\n\010h264_qsv\020\001\022\016\n\nh264_nvenc\020\002"
  "\"=\n\026EnumVideoEncodeQuality\022\t\n\005speed\020\000\022\013\n"
  "\007balance\020\001\022\013\n\007quality\020\002\"o\n\020EnumVideoOutS"
  "ize\022\022\n\016size_1920x1080\020\000\022\021\n\rsize_1280x720"
  "\020\001\022\020\n\014size_720x480\020\002\022\020\n\014size_640x480\020\003\022\020"
  "\n\014size_640x360\020\004\"\275\001\n\020EnumVideoBitrate\022\r\n"
  "\tkbps_3000\020\000\022\r\n\tkbps_2000\020\001\022\r\n\tkbps_1000"
  "\020\002\022\014\n\010kbps_800\020\003\022\014\n\010kbps_600\020\004\022\014\n\010kbps_5"
  "00\020\005\022\014\n\010kbps_400\020\006\022\014\n\010kbps_350\020\007\022\014\n\010kbps"
  "_300\020\010\022\014\n\010kbps_200\020\t\022\014\n\010kbps_150\020\n\022\014\n\010kb"
  "ps_100\020\013\"D\n\022EnumVideoFramerate\022\n\n\006fps_30"
  "\020\000\022\n\n\006fps_25\020\001\022\n\n\006fps_20\020\002\022\n\n\006fps_15\020\003b\006"
  "proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_agle_5fconf_2eproto_deps[1] = {
  &::descriptor_table_commu_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_agle_5fconf_2eproto_sccs[13] = {
  &scc_info_AgleConfMsg_agle_5fconf_2eproto.base,
  &scc_info_AgleConfMsg_AudiosMsg_agle_5fconf_2eproto.base,
  &scc_info_AgleConfMsg_AudiosMsg_AudioEntityMsg_agle_5fconf_2eproto.base,
  &scc_info_AgleConfMsg_LogMsg_agle_5fconf_2eproto.base,
  &scc_info_AgleConfMsg_ManagementMsg_agle_5fconf_2eproto.base,
  &scc_info_AgleConfMsg_NtpMsg_agle_5fconf_2eproto.base,
  &scc_info_AgleConfMsg_NtpMsg_NtpEntityMsg_agle_5fconf_2eproto.base,
  &scc_info_AgleConfMsg_RecordMsg_agle_5fconf_2eproto.base,
  &scc_info_AgleConfMsg_RtmpServerMsg_agle_5fconf_2eproto.base,
  &scc_info_AgleConfMsg_RtmpServerMsg_ServerEntityMsg_agle_5fconf_2eproto.base,
  &scc_info_AgleConfMsg_VideosMsg_agle_5fconf_2eproto.base,
  &scc_info_AgleConfMsg_VideosMsg_CropMsg_agle_5fconf_2eproto.base,
  &scc_info_AgleConfMsg_VideosMsg_VideoEntityMsg_agle_5fconf_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_agle_5fconf_2eproto_once;
static bool descriptor_table_agle_5fconf_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_agle_5fconf_2eproto = {
  &descriptor_table_agle_5fconf_2eproto_initialized, descriptor_table_protodef_agle_5fconf_2eproto, "agle_conf.proto", 3086,
  &descriptor_table_agle_5fconf_2eproto_once, descriptor_table_agle_5fconf_2eproto_sccs, descriptor_table_agle_5fconf_2eproto_deps, 13, 1,
  schemas, file_default_instances, TableStruct_agle_5fconf_2eproto::offsets,
  file_level_metadata_agle_5fconf_2eproto, 13, file_level_enum_descriptors_agle_5fconf_2eproto, file_level_service_descriptors_agle_5fconf_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_agle_5fconf_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_agle_5fconf_2eproto), true);
namespace ivi {
namespace agle {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AgleConfMsg_AudiosMsg_EnumAudioBitrate_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_agle_5fconf_2eproto);
  return file_level_enum_descriptors_agle_5fconf_2eproto[0];
}
bool AgleConfMsg_AudiosMsg_EnumAudioBitrate_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr AgleConfMsg_AudiosMsg_EnumAudioBitrate AgleConfMsg_AudiosMsg::kbps_320;
constexpr AgleConfMsg_AudiosMsg_EnumAudioBitrate AgleConfMsg_AudiosMsg::kbps_256;
constexpr AgleConfMsg_AudiosMsg_EnumAudioBitrate AgleConfMsg_AudiosMsg::kbps_128;
constexpr AgleConfMsg_AudiosMsg_EnumAudioBitrate AgleConfMsg_AudiosMsg::kbps_96;
constexpr AgleConfMsg_AudiosMsg_EnumAudioBitrate AgleConfMsg_AudiosMsg::kbps_80;
constexpr AgleConfMsg_AudiosMsg_EnumAudioBitrate AgleConfMsg_AudiosMsg::kbps_64;
constexpr AgleConfMsg_AudiosMsg_EnumAudioBitrate AgleConfMsg_AudiosMsg::kbps_48;
constexpr AgleConfMsg_AudiosMsg_EnumAudioBitrate AgleConfMsg_AudiosMsg::kbps_36;
constexpr AgleConfMsg_AudiosMsg_EnumAudioBitrate AgleConfMsg_AudiosMsg::EnumAudioBitrate_MIN;
constexpr AgleConfMsg_AudiosMsg_EnumAudioBitrate AgleConfMsg_AudiosMsg::EnumAudioBitrate_MAX;
constexpr int AgleConfMsg_AudiosMsg::EnumAudioBitrate_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AgleConfMsg_AudiosMsg_EnumAudioFormat_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_agle_5fconf_2eproto);
  return file_level_enum_descriptors_agle_5fconf_2eproto[1];
}
bool AgleConfMsg_AudiosMsg_EnumAudioFormat_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr AgleConfMsg_AudiosMsg_EnumAudioFormat AgleConfMsg_AudiosMsg::aac_low;
constexpr AgleConfMsg_AudiosMsg_EnumAudioFormat AgleConfMsg_AudiosMsg::EnumAudioFormat_MIN;
constexpr AgleConfMsg_AudiosMsg_EnumAudioFormat AgleConfMsg_AudiosMsg::EnumAudioFormat_MAX;
constexpr int AgleConfMsg_AudiosMsg::EnumAudioFormat_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AgleConfMsg_AudiosMsg_EnumAudioSamplerate_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_agle_5fconf_2eproto);
  return file_level_enum_descriptors_agle_5fconf_2eproto[2];
}
bool AgleConfMsg_AudiosMsg_EnumAudioSamplerate_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr AgleConfMsg_AudiosMsg_EnumAudioSamplerate AgleConfMsg_AudiosMsg::Hz_48000;
constexpr AgleConfMsg_AudiosMsg_EnumAudioSamplerate AgleConfMsg_AudiosMsg::Hz_44100;
constexpr AgleConfMsg_AudiosMsg_EnumAudioSamplerate AgleConfMsg_AudiosMsg::Hz_24000;
constexpr AgleConfMsg_AudiosMsg_EnumAudioSamplerate AgleConfMsg_AudiosMsg::Hz_22050;
constexpr AgleConfMsg_AudiosMsg_EnumAudioSamplerate AgleConfMsg_AudiosMsg::Hz_16000;
constexpr AgleConfMsg_AudiosMsg_EnumAudioSamplerate AgleConfMsg_AudiosMsg::EnumAudioSamplerate_MIN;
constexpr AgleConfMsg_AudiosMsg_EnumAudioSamplerate AgleConfMsg_AudiosMsg::EnumAudioSamplerate_MAX;
constexpr int AgleConfMsg_AudiosMsg::EnumAudioSamplerate_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_agle_5fconf_2eproto);
  return file_level_enum_descriptors_agle_5fconf_2eproto[3];
}
bool AgleConfMsg_VideosMsg_EnumVideoEncodeFormat_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr AgleConfMsg_VideosMsg_EnumVideoEncodeFormat AgleConfMsg_VideosMsg::x264;
constexpr AgleConfMsg_VideosMsg_EnumVideoEncodeFormat AgleConfMsg_VideosMsg::h264_qsv;
constexpr AgleConfMsg_VideosMsg_EnumVideoEncodeFormat AgleConfMsg_VideosMsg::h264_nvenc;
constexpr AgleConfMsg_VideosMsg_EnumVideoEncodeFormat AgleConfMsg_VideosMsg::EnumVideoEncodeFormat_MIN;
constexpr AgleConfMsg_VideosMsg_EnumVideoEncodeFormat AgleConfMsg_VideosMsg::EnumVideoEncodeFormat_MAX;
constexpr int AgleConfMsg_VideosMsg::EnumVideoEncodeFormat_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_agle_5fconf_2eproto);
  return file_level_enum_descriptors_agle_5fconf_2eproto[4];
}
bool AgleConfMsg_VideosMsg_EnumVideoEncodeQuality_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr AgleConfMsg_VideosMsg_EnumVideoEncodeQuality AgleConfMsg_VideosMsg::speed;
constexpr AgleConfMsg_VideosMsg_EnumVideoEncodeQuality AgleConfMsg_VideosMsg::balance;
constexpr AgleConfMsg_VideosMsg_EnumVideoEncodeQuality AgleConfMsg_VideosMsg::quality;
constexpr AgleConfMsg_VideosMsg_EnumVideoEncodeQuality AgleConfMsg_VideosMsg::EnumVideoEncodeQuality_MIN;
constexpr AgleConfMsg_VideosMsg_EnumVideoEncodeQuality AgleConfMsg_VideosMsg::EnumVideoEncodeQuality_MAX;
constexpr int AgleConfMsg_VideosMsg::EnumVideoEncodeQuality_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AgleConfMsg_VideosMsg_EnumVideoOutSize_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_agle_5fconf_2eproto);
  return file_level_enum_descriptors_agle_5fconf_2eproto[5];
}
bool AgleConfMsg_VideosMsg_EnumVideoOutSize_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr AgleConfMsg_VideosMsg_EnumVideoOutSize AgleConfMsg_VideosMsg::size_1920x1080;
constexpr AgleConfMsg_VideosMsg_EnumVideoOutSize AgleConfMsg_VideosMsg::size_1280x720;
constexpr AgleConfMsg_VideosMsg_EnumVideoOutSize AgleConfMsg_VideosMsg::size_720x480;
constexpr AgleConfMsg_VideosMsg_EnumVideoOutSize AgleConfMsg_VideosMsg::size_640x480;
constexpr AgleConfMsg_VideosMsg_EnumVideoOutSize AgleConfMsg_VideosMsg::size_640x360;
constexpr AgleConfMsg_VideosMsg_EnumVideoOutSize AgleConfMsg_VideosMsg::EnumVideoOutSize_MIN;
constexpr AgleConfMsg_VideosMsg_EnumVideoOutSize AgleConfMsg_VideosMsg::EnumVideoOutSize_MAX;
constexpr int AgleConfMsg_VideosMsg::EnumVideoOutSize_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AgleConfMsg_VideosMsg_EnumVideoBitrate_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_agle_5fconf_2eproto);
  return file_level_enum_descriptors_agle_5fconf_2eproto[6];
}
bool AgleConfMsg_VideosMsg_EnumVideoBitrate_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr AgleConfMsg_VideosMsg_EnumVideoBitrate AgleConfMsg_VideosMsg::kbps_3000;
constexpr AgleConfMsg_VideosMsg_EnumVideoBitrate AgleConfMsg_VideosMsg::kbps_2000;
constexpr AgleConfMsg_VideosMsg_EnumVideoBitrate AgleConfMsg_VideosMsg::kbps_1000;
constexpr AgleConfMsg_VideosMsg_EnumVideoBitrate AgleConfMsg_VideosMsg::kbps_800;
constexpr AgleConfMsg_VideosMsg_EnumVideoBitrate AgleConfMsg_VideosMsg::kbps_600;
constexpr AgleConfMsg_VideosMsg_EnumVideoBitrate AgleConfMsg_VideosMsg::kbps_500;
constexpr AgleConfMsg_VideosMsg_EnumVideoBitrate AgleConfMsg_VideosMsg::kbps_400;
constexpr AgleConfMsg_VideosMsg_EnumVideoBitrate AgleConfMsg_VideosMsg::kbps_350;
constexpr AgleConfMsg_VideosMsg_EnumVideoBitrate AgleConfMsg_VideosMsg::kbps_300;
constexpr AgleConfMsg_VideosMsg_EnumVideoBitrate AgleConfMsg_VideosMsg::kbps_200;
constexpr AgleConfMsg_VideosMsg_EnumVideoBitrate AgleConfMsg_VideosMsg::kbps_150;
constexpr AgleConfMsg_VideosMsg_EnumVideoBitrate AgleConfMsg_VideosMsg::kbps_100;
constexpr AgleConfMsg_VideosMsg_EnumVideoBitrate AgleConfMsg_VideosMsg::EnumVideoBitrate_MIN;
constexpr AgleConfMsg_VideosMsg_EnumVideoBitrate AgleConfMsg_VideosMsg::EnumVideoBitrate_MAX;
constexpr int AgleConfMsg_VideosMsg::EnumVideoBitrate_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AgleConfMsg_VideosMsg_EnumVideoFramerate_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_agle_5fconf_2eproto);
  return file_level_enum_descriptors_agle_5fconf_2eproto[7];
}
bool AgleConfMsg_VideosMsg_EnumVideoFramerate_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr AgleConfMsg_VideosMsg_EnumVideoFramerate AgleConfMsg_VideosMsg::fps_30;
constexpr AgleConfMsg_VideosMsg_EnumVideoFramerate AgleConfMsg_VideosMsg::fps_25;
constexpr AgleConfMsg_VideosMsg_EnumVideoFramerate AgleConfMsg_VideosMsg::fps_20;
constexpr AgleConfMsg_VideosMsg_EnumVideoFramerate AgleConfMsg_VideosMsg::fps_15;
constexpr AgleConfMsg_VideosMsg_EnumVideoFramerate AgleConfMsg_VideosMsg::EnumVideoFramerate_MIN;
constexpr AgleConfMsg_VideosMsg_EnumVideoFramerate AgleConfMsg_VideosMsg::EnumVideoFramerate_MAX;
constexpr int AgleConfMsg_VideosMsg::EnumVideoFramerate_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void AgleConfMsg_NtpMsg_NtpEntityMsg::InitAsDefaultInstance() {
}
class AgleConfMsg_NtpMsg_NtpEntityMsg::_Internal {
 public:
};

AgleConfMsg_NtpMsg_NtpEntityMsg::AgleConfMsg_NtpMsg_NtpEntityMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg)
}
AgleConfMsg_NtpMsg_NtpEntityMsg::AgleConfMsg_NtpMsg_NtpEntityMsg(const AgleConfMsg_NtpMsg_NtpEntityMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_server_name().empty()) {
    server_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  // @@protoc_insertion_point(copy_constructor:ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg)
}

void AgleConfMsg_NtpMsg_NtpEntityMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AgleConfMsg_NtpMsg_NtpEntityMsg_agle_5fconf_2eproto.base);
  server_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AgleConfMsg_NtpMsg_NtpEntityMsg::~AgleConfMsg_NtpMsg_NtpEntityMsg() {
  // @@protoc_insertion_point(destructor:ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg)
  SharedDtor();
}

void AgleConfMsg_NtpMsg_NtpEntityMsg::SharedDtor() {
  server_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AgleConfMsg_NtpMsg_NtpEntityMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AgleConfMsg_NtpMsg_NtpEntityMsg& AgleConfMsg_NtpMsg_NtpEntityMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AgleConfMsg_NtpMsg_NtpEntityMsg_agle_5fconf_2eproto.base);
  return *internal_default_instance();
}


void AgleConfMsg_NtpMsg_NtpEntityMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* AgleConfMsg_NtpMsg_NtpEntityMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string server_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_server_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg.server_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AgleConfMsg_NtpMsg_NtpEntityMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server_name = 1;
  if (this->server_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_server_name().data(), static_cast<int>(this->_internal_server_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg.server_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_server_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg)
  return target;
}

size_t AgleConfMsg_NtpMsg_NtpEntityMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string server_name = 1;
  if (this->server_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_server_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AgleConfMsg_NtpMsg_NtpEntityMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const AgleConfMsg_NtpMsg_NtpEntityMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AgleConfMsg_NtpMsg_NtpEntityMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg)
    MergeFrom(*source);
  }
}

void AgleConfMsg_NtpMsg_NtpEntityMsg::MergeFrom(const AgleConfMsg_NtpMsg_NtpEntityMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_name().size() > 0) {

    server_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
}

void AgleConfMsg_NtpMsg_NtpEntityMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgleConfMsg_NtpMsg_NtpEntityMsg::CopyFrom(const AgleConfMsg_NtpMsg_NtpEntityMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgleConfMsg_NtpMsg_NtpEntityMsg::IsInitialized() const {
  return true;
}

void AgleConfMsg_NtpMsg_NtpEntityMsg::InternalSwap(AgleConfMsg_NtpMsg_NtpEntityMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  server_name_.Swap(&other->server_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata AgleConfMsg_NtpMsg_NtpEntityMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AgleConfMsg_NtpMsg::InitAsDefaultInstance() {
}
class AgleConfMsg_NtpMsg::_Internal {
 public:
};

AgleConfMsg_NtpMsg::AgleConfMsg_NtpMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ivi.agle.AgleConfMsg.NtpMsg)
}
AgleConfMsg_NtpMsg::AgleConfMsg_NtpMsg(const AgleConfMsg_NtpMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      ntp_server_(from.ntp_server_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_enable_ = from.is_enable_;
  // @@protoc_insertion_point(copy_constructor:ivi.agle.AgleConfMsg.NtpMsg)
}

void AgleConfMsg_NtpMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AgleConfMsg_NtpMsg_agle_5fconf_2eproto.base);
  is_enable_ = false;
}

AgleConfMsg_NtpMsg::~AgleConfMsg_NtpMsg() {
  // @@protoc_insertion_point(destructor:ivi.agle.AgleConfMsg.NtpMsg)
  SharedDtor();
}

void AgleConfMsg_NtpMsg::SharedDtor() {
}

void AgleConfMsg_NtpMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AgleConfMsg_NtpMsg& AgleConfMsg_NtpMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AgleConfMsg_NtpMsg_agle_5fconf_2eproto.base);
  return *internal_default_instance();
}


void AgleConfMsg_NtpMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:ivi.agle.AgleConfMsg.NtpMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ntp_server_.Clear();
  is_enable_ = false;
  _internal_metadata_.Clear();
}

const char* AgleConfMsg_NtpMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool is_enable = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          is_enable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg ntp_server = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_ntp_server(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AgleConfMsg_NtpMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ivi.agle.AgleConfMsg.NtpMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_enable = 1;
  if (this->is_enable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_is_enable(), target);
  }

  // repeated .ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg ntp_server = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_ntp_server_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_ntp_server(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ivi.agle.AgleConfMsg.NtpMsg)
  return target;
}

size_t AgleConfMsg_NtpMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ivi.agle.AgleConfMsg.NtpMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ivi.agle.AgleConfMsg.NtpMsg.NtpEntityMsg ntp_server = 2;
  total_size += 1UL * this->_internal_ntp_server_size();
  for (const auto& msg : this->ntp_server_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bool is_enable = 1;
  if (this->is_enable() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AgleConfMsg_NtpMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ivi.agle.AgleConfMsg.NtpMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const AgleConfMsg_NtpMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AgleConfMsg_NtpMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ivi.agle.AgleConfMsg.NtpMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ivi.agle.AgleConfMsg.NtpMsg)
    MergeFrom(*source);
  }
}

void AgleConfMsg_NtpMsg::MergeFrom(const AgleConfMsg_NtpMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ivi.agle.AgleConfMsg.NtpMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ntp_server_.MergeFrom(from.ntp_server_);
  if (from.is_enable() != 0) {
    _internal_set_is_enable(from._internal_is_enable());
  }
}

void AgleConfMsg_NtpMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ivi.agle.AgleConfMsg.NtpMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgleConfMsg_NtpMsg::CopyFrom(const AgleConfMsg_NtpMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ivi.agle.AgleConfMsg.NtpMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgleConfMsg_NtpMsg::IsInitialized() const {
  return true;
}

void AgleConfMsg_NtpMsg::InternalSwap(AgleConfMsg_NtpMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  ntp_server_.InternalSwap(&other->ntp_server_);
  swap(is_enable_, other->is_enable_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgleConfMsg_NtpMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AgleConfMsg_LogMsg::InitAsDefaultInstance() {
}
class AgleConfMsg_LogMsg::_Internal {
 public:
};

AgleConfMsg_LogMsg::AgleConfMsg_LogMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ivi.agle.AgleConfMsg.LogMsg)
}
AgleConfMsg_LogMsg::AgleConfMsg_LogMsg(const AgleConfMsg_LogMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  log_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_log_path().empty()) {
    log_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.log_path_);
  }
  is_enable_ = from.is_enable_;
  // @@protoc_insertion_point(copy_constructor:ivi.agle.AgleConfMsg.LogMsg)
}

void AgleConfMsg_LogMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AgleConfMsg_LogMsg_agle_5fconf_2eproto.base);
  log_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  is_enable_ = false;
}

AgleConfMsg_LogMsg::~AgleConfMsg_LogMsg() {
  // @@protoc_insertion_point(destructor:ivi.agle.AgleConfMsg.LogMsg)
  SharedDtor();
}

void AgleConfMsg_LogMsg::SharedDtor() {
  log_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AgleConfMsg_LogMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AgleConfMsg_LogMsg& AgleConfMsg_LogMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AgleConfMsg_LogMsg_agle_5fconf_2eproto.base);
  return *internal_default_instance();
}


void AgleConfMsg_LogMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:ivi.agle.AgleConfMsg.LogMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  log_path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  is_enable_ = false;
  _internal_metadata_.Clear();
}

const char* AgleConfMsg_LogMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool is_enable = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          is_enable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string log_path = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_log_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ivi.agle.AgleConfMsg.LogMsg.log_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AgleConfMsg_LogMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ivi.agle.AgleConfMsg.LogMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_enable = 1;
  if (this->is_enable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_is_enable(), target);
  }

  // string log_path = 2;
  if (this->log_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_log_path().data(), static_cast<int>(this->_internal_log_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ivi.agle.AgleConfMsg.LogMsg.log_path");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_log_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ivi.agle.AgleConfMsg.LogMsg)
  return target;
}

size_t AgleConfMsg_LogMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ivi.agle.AgleConfMsg.LogMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string log_path = 2;
  if (this->log_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_log_path());
  }

  // bool is_enable = 1;
  if (this->is_enable() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AgleConfMsg_LogMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ivi.agle.AgleConfMsg.LogMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const AgleConfMsg_LogMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AgleConfMsg_LogMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ivi.agle.AgleConfMsg.LogMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ivi.agle.AgleConfMsg.LogMsg)
    MergeFrom(*source);
  }
}

void AgleConfMsg_LogMsg::MergeFrom(const AgleConfMsg_LogMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ivi.agle.AgleConfMsg.LogMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.log_path().size() > 0) {

    log_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.log_path_);
  }
  if (from.is_enable() != 0) {
    _internal_set_is_enable(from._internal_is_enable());
  }
}

void AgleConfMsg_LogMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ivi.agle.AgleConfMsg.LogMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgleConfMsg_LogMsg::CopyFrom(const AgleConfMsg_LogMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ivi.agle.AgleConfMsg.LogMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgleConfMsg_LogMsg::IsInitialized() const {
  return true;
}

void AgleConfMsg_LogMsg::InternalSwap(AgleConfMsg_LogMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  log_path_.Swap(&other->log_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_enable_, other->is_enable_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgleConfMsg_LogMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AgleConfMsg_ManagementMsg::InitAsDefaultInstance() {
}
class AgleConfMsg_ManagementMsg::_Internal {
 public:
};

AgleConfMsg_ManagementMsg::AgleConfMsg_ManagementMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ivi.agle.AgleConfMsg.ManagementMsg)
}
AgleConfMsg_ManagementMsg::AgleConfMsg_ManagementMsg(const AgleConfMsg_ManagementMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tcp_server_ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tcp_server_ip().empty()) {
    tcp_server_ip_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tcp_server_ip_);
  }
  client_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_client_type().empty()) {
    client_type_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.client_type_);
  }
  client_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_client_id().empty()) {
    client_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.client_id_);
  }
  ::memcpy(&is_enable_, &from.is_enable_,
    static_cast<size_t>(reinterpret_cast<char*>(&login_interval_) -
    reinterpret_cast<char*>(&is_enable_)) + sizeof(login_interval_));
  // @@protoc_insertion_point(copy_constructor:ivi.agle.AgleConfMsg.ManagementMsg)
}

void AgleConfMsg_ManagementMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AgleConfMsg_ManagementMsg_agle_5fconf_2eproto.base);
  tcp_server_ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_enable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&login_interval_) -
      reinterpret_cast<char*>(&is_enable_)) + sizeof(login_interval_));
}

AgleConfMsg_ManagementMsg::~AgleConfMsg_ManagementMsg() {
  // @@protoc_insertion_point(destructor:ivi.agle.AgleConfMsg.ManagementMsg)
  SharedDtor();
}

void AgleConfMsg_ManagementMsg::SharedDtor() {
  tcp_server_ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AgleConfMsg_ManagementMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AgleConfMsg_ManagementMsg& AgleConfMsg_ManagementMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AgleConfMsg_ManagementMsg_agle_5fconf_2eproto.base);
  return *internal_default_instance();
}


void AgleConfMsg_ManagementMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:ivi.agle.AgleConfMsg.ManagementMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tcp_server_ip_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_enable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&login_interval_) -
      reinterpret_cast<char*>(&is_enable_)) + sizeof(login_interval_));
  _internal_metadata_.Clear();
}

const char* AgleConfMsg_ManagementMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool is_enable = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          is_enable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string tcp_server_ip = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_tcp_server_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ivi.agle.AgleConfMsg.ManagementMsg.tcp_server_ip"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 tcp_server_port = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          tcp_server_port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string client_type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_client_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ivi.agle.AgleConfMsg.ManagementMsg.client_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string client_ID = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_client_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ivi.agle.AgleConfMsg.ManagementMsg.client_ID"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 login_interval = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          login_interval_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AgleConfMsg_ManagementMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ivi.agle.AgleConfMsg.ManagementMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_enable = 1;
  if (this->is_enable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_is_enable(), target);
  }

  // string tcp_server_ip = 2;
  if (this->tcp_server_ip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tcp_server_ip().data(), static_cast<int>(this->_internal_tcp_server_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ivi.agle.AgleConfMsg.ManagementMsg.tcp_server_ip");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_tcp_server_ip(), target);
  }

  // uint32 tcp_server_port = 3;
  if (this->tcp_server_port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_tcp_server_port(), target);
  }

  // string client_type = 4;
  if (this->client_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_type().data(), static_cast<int>(this->_internal_client_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ivi.agle.AgleConfMsg.ManagementMsg.client_type");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_client_type(), target);
  }

  // string client_ID = 5;
  if (this->client_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_id().data(), static_cast<int>(this->_internal_client_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ivi.agle.AgleConfMsg.ManagementMsg.client_ID");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_client_id(), target);
  }

  // uint32 login_interval = 6;
  if (this->login_interval() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_login_interval(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ivi.agle.AgleConfMsg.ManagementMsg)
  return target;
}

size_t AgleConfMsg_ManagementMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ivi.agle.AgleConfMsg.ManagementMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tcp_server_ip = 2;
  if (this->tcp_server_ip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tcp_server_ip());
  }

  // string client_type = 4;
  if (this->client_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_type());
  }

  // string client_ID = 5;
  if (this->client_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_id());
  }

  // bool is_enable = 1;
  if (this->is_enable() != 0) {
    total_size += 1 + 1;
  }

  // uint32 tcp_server_port = 3;
  if (this->tcp_server_port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_tcp_server_port());
  }

  // uint32 login_interval = 6;
  if (this->login_interval() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_login_interval());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AgleConfMsg_ManagementMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ivi.agle.AgleConfMsg.ManagementMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const AgleConfMsg_ManagementMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AgleConfMsg_ManagementMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ivi.agle.AgleConfMsg.ManagementMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ivi.agle.AgleConfMsg.ManagementMsg)
    MergeFrom(*source);
  }
}

void AgleConfMsg_ManagementMsg::MergeFrom(const AgleConfMsg_ManagementMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ivi.agle.AgleConfMsg.ManagementMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tcp_server_ip().size() > 0) {

    tcp_server_ip_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tcp_server_ip_);
  }
  if (from.client_type().size() > 0) {

    client_type_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.client_type_);
  }
  if (from.client_id().size() > 0) {

    client_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.client_id_);
  }
  if (from.is_enable() != 0) {
    _internal_set_is_enable(from._internal_is_enable());
  }
  if (from.tcp_server_port() != 0) {
    _internal_set_tcp_server_port(from._internal_tcp_server_port());
  }
  if (from.login_interval() != 0) {
    _internal_set_login_interval(from._internal_login_interval());
  }
}

void AgleConfMsg_ManagementMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ivi.agle.AgleConfMsg.ManagementMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgleConfMsg_ManagementMsg::CopyFrom(const AgleConfMsg_ManagementMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ivi.agle.AgleConfMsg.ManagementMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgleConfMsg_ManagementMsg::IsInitialized() const {
  return true;
}

void AgleConfMsg_ManagementMsg::InternalSwap(AgleConfMsg_ManagementMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  tcp_server_ip_.Swap(&other->tcp_server_ip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  client_type_.Swap(&other->client_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  client_id_.Swap(&other->client_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_enable_, other->is_enable_);
  swap(tcp_server_port_, other->tcp_server_port_);
  swap(login_interval_, other->login_interval_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgleConfMsg_ManagementMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AgleConfMsg_RecordMsg::InitAsDefaultInstance() {
}
class AgleConfMsg_RecordMsg::_Internal {
 public:
};

AgleConfMsg_RecordMsg::AgleConfMsg_RecordMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ivi.agle.AgleConfMsg.RecordMsg)
}
AgleConfMsg_RecordMsg::AgleConfMsg_RecordMsg(const AgleConfMsg_RecordMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rec_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rec_path().empty()) {
    rec_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.rec_path_);
  }
  rec_start_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rec_start_time().empty()) {
    rec_start_time_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.rec_start_time_);
  }
  rec_stop_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rec_stop_time().empty()) {
    rec_stop_time_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.rec_stop_time_);
  }
  ::memcpy(&is_enable_, &from.is_enable_,
    static_cast<size_t>(reinterpret_cast<char*>(&rec_segment_minutes_) -
    reinterpret_cast<char*>(&is_enable_)) + sizeof(rec_segment_minutes_));
  // @@protoc_insertion_point(copy_constructor:ivi.agle.AgleConfMsg.RecordMsg)
}

void AgleConfMsg_RecordMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AgleConfMsg_RecordMsg_agle_5fconf_2eproto.base);
  rec_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rec_start_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rec_stop_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_enable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rec_segment_minutes_) -
      reinterpret_cast<char*>(&is_enable_)) + sizeof(rec_segment_minutes_));
}

AgleConfMsg_RecordMsg::~AgleConfMsg_RecordMsg() {
  // @@protoc_insertion_point(destructor:ivi.agle.AgleConfMsg.RecordMsg)
  SharedDtor();
}

void AgleConfMsg_RecordMsg::SharedDtor() {
  rec_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rec_start_time_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rec_stop_time_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AgleConfMsg_RecordMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AgleConfMsg_RecordMsg& AgleConfMsg_RecordMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AgleConfMsg_RecordMsg_agle_5fconf_2eproto.base);
  return *internal_default_instance();
}


void AgleConfMsg_RecordMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:ivi.agle.AgleConfMsg.RecordMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rec_path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rec_start_time_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rec_stop_time_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_enable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rec_segment_minutes_) -
      reinterpret_cast<char*>(&is_enable_)) + sizeof(rec_segment_minutes_));
  _internal_metadata_.Clear();
}

const char* AgleConfMsg_RecordMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool is_enable = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          is_enable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rec_path = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rec_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ivi.agle.AgleConfMsg.RecordMsg.rec_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 rec_recycle_days = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          rec_recycle_days_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 rec_segment_hour = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          rec_segment_hour_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 rec_segment_minutes = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          rec_segment_minutes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rec_start_time = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_rec_start_time();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ivi.agle.AgleConfMsg.RecordMsg.rec_start_time"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rec_stop_time = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_rec_stop_time();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ivi.agle.AgleConfMsg.RecordMsg.rec_stop_time"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AgleConfMsg_RecordMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ivi.agle.AgleConfMsg.RecordMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_enable = 1;
  if (this->is_enable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_is_enable(), target);
  }

  // string rec_path = 2;
  if (this->rec_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rec_path().data(), static_cast<int>(this->_internal_rec_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ivi.agle.AgleConfMsg.RecordMsg.rec_path");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rec_path(), target);
  }

  // uint32 rec_recycle_days = 3;
  if (this->rec_recycle_days() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_rec_recycle_days(), target);
  }

  // uint32 rec_segment_hour = 4;
  if (this->rec_segment_hour() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_rec_segment_hour(), target);
  }

  // uint32 rec_segment_minutes = 5;
  if (this->rec_segment_minutes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_rec_segment_minutes(), target);
  }

  // string rec_start_time = 6;
  if (this->rec_start_time().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rec_start_time().data(), static_cast<int>(this->_internal_rec_start_time().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ivi.agle.AgleConfMsg.RecordMsg.rec_start_time");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_rec_start_time(), target);
  }

  // string rec_stop_time = 7;
  if (this->rec_stop_time().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rec_stop_time().data(), static_cast<int>(this->_internal_rec_stop_time().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ivi.agle.AgleConfMsg.RecordMsg.rec_stop_time");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_rec_stop_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ivi.agle.AgleConfMsg.RecordMsg)
  return target;
}

size_t AgleConfMsg_RecordMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ivi.agle.AgleConfMsg.RecordMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string rec_path = 2;
  if (this->rec_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rec_path());
  }

  // string rec_start_time = 6;
  if (this->rec_start_time().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rec_start_time());
  }

  // string rec_stop_time = 7;
  if (this->rec_stop_time().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rec_stop_time());
  }

  // bool is_enable = 1;
  if (this->is_enable() != 0) {
    total_size += 1 + 1;
  }

  // uint32 rec_recycle_days = 3;
  if (this->rec_recycle_days() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_rec_recycle_days());
  }

  // uint32 rec_segment_hour = 4;
  if (this->rec_segment_hour() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_rec_segment_hour());
  }

  // uint32 rec_segment_minutes = 5;
  if (this->rec_segment_minutes() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_rec_segment_minutes());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AgleConfMsg_RecordMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ivi.agle.AgleConfMsg.RecordMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const AgleConfMsg_RecordMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AgleConfMsg_RecordMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ivi.agle.AgleConfMsg.RecordMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ivi.agle.AgleConfMsg.RecordMsg)
    MergeFrom(*source);
  }
}

void AgleConfMsg_RecordMsg::MergeFrom(const AgleConfMsg_RecordMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ivi.agle.AgleConfMsg.RecordMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rec_path().size() > 0) {

    rec_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.rec_path_);
  }
  if (from.rec_start_time().size() > 0) {

    rec_start_time_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.rec_start_time_);
  }
  if (from.rec_stop_time().size() > 0) {

    rec_stop_time_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.rec_stop_time_);
  }
  if (from.is_enable() != 0) {
    _internal_set_is_enable(from._internal_is_enable());
  }
  if (from.rec_recycle_days() != 0) {
    _internal_set_rec_recycle_days(from._internal_rec_recycle_days());
  }
  if (from.rec_segment_hour() != 0) {
    _internal_set_rec_segment_hour(from._internal_rec_segment_hour());
  }
  if (from.rec_segment_minutes() != 0) {
    _internal_set_rec_segment_minutes(from._internal_rec_segment_minutes());
  }
}

void AgleConfMsg_RecordMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ivi.agle.AgleConfMsg.RecordMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgleConfMsg_RecordMsg::CopyFrom(const AgleConfMsg_RecordMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ivi.agle.AgleConfMsg.RecordMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgleConfMsg_RecordMsg::IsInitialized() const {
  return true;
}

void AgleConfMsg_RecordMsg::InternalSwap(AgleConfMsg_RecordMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  rec_path_.Swap(&other->rec_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rec_start_time_.Swap(&other->rec_start_time_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rec_stop_time_.Swap(&other->rec_stop_time_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_enable_, other->is_enable_);
  swap(rec_recycle_days_, other->rec_recycle_days_);
  swap(rec_segment_hour_, other->rec_segment_hour_);
  swap(rec_segment_minutes_, other->rec_segment_minutes_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgleConfMsg_RecordMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AgleConfMsg_RtmpServerMsg_ServerEntityMsg::InitAsDefaultInstance() {
}
class AgleConfMsg_RtmpServerMsg_ServerEntityMsg::_Internal {
 public:
};

AgleConfMsg_RtmpServerMsg_ServerEntityMsg::AgleConfMsg_RtmpServerMsg_ServerEntityMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg)
}
AgleConfMsg_RtmpServerMsg_ServerEntityMsg::AgleConfMsg_RtmpServerMsg_ServerEntityMsg(const AgleConfMsg_RtmpServerMsg_ServerEntityMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rtmp_server_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rtmp_server_url().empty()) {
    rtmp_server_url_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.rtmp_server_url_);
  }
  stream_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_stream_name().empty()) {
    stream_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.stream_name_);
  }
  ::memcpy(&is_master_, &from.is_master_,
    static_cast<size_t>(reinterpret_cast<char*>(&entity_id_) -
    reinterpret_cast<char*>(&is_master_)) + sizeof(entity_id_));
  // @@protoc_insertion_point(copy_constructor:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg)
}

void AgleConfMsg_RtmpServerMsg_ServerEntityMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AgleConfMsg_RtmpServerMsg_ServerEntityMsg_agle_5fconf_2eproto.base);
  rtmp_server_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  stream_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_master_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&is_master_)) + sizeof(entity_id_));
}

AgleConfMsg_RtmpServerMsg_ServerEntityMsg::~AgleConfMsg_RtmpServerMsg_ServerEntityMsg() {
  // @@protoc_insertion_point(destructor:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg)
  SharedDtor();
}

void AgleConfMsg_RtmpServerMsg_ServerEntityMsg::SharedDtor() {
  rtmp_server_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  stream_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AgleConfMsg_RtmpServerMsg_ServerEntityMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AgleConfMsg_RtmpServerMsg_ServerEntityMsg& AgleConfMsg_RtmpServerMsg_ServerEntityMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AgleConfMsg_RtmpServerMsg_ServerEntityMsg_agle_5fconf_2eproto.base);
  return *internal_default_instance();
}


void AgleConfMsg_RtmpServerMsg_ServerEntityMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rtmp_server_url_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  stream_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_master_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&is_master_)) + sizeof(entity_id_));
  _internal_metadata_.Clear();
}

const char* AgleConfMsg_RtmpServerMsg_ServerEntityMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool is_master = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          is_master_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 entity_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          entity_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rtmp_server_url = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_rtmp_server_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg.rtmp_server_url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string stream_name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_stream_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg.stream_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AgleConfMsg_RtmpServerMsg_ServerEntityMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_master = 1;
  if (this->is_master() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_is_master(), target);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_entity_id(), target);
  }

  // string rtmp_server_url = 3;
  if (this->rtmp_server_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rtmp_server_url().data(), static_cast<int>(this->_internal_rtmp_server_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg.rtmp_server_url");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_rtmp_server_url(), target);
  }

  // string stream_name = 4;
  if (this->stream_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stream_name().data(), static_cast<int>(this->_internal_stream_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg.stream_name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_stream_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg)
  return target;
}

size_t AgleConfMsg_RtmpServerMsg_ServerEntityMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string rtmp_server_url = 3;
  if (this->rtmp_server_url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rtmp_server_url());
  }

  // string stream_name = 4;
  if (this->stream_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_stream_name());
  }

  // bool is_master = 1;
  if (this->is_master() != 0) {
    total_size += 1 + 1;
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_entity_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AgleConfMsg_RtmpServerMsg_ServerEntityMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const AgleConfMsg_RtmpServerMsg_ServerEntityMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AgleConfMsg_RtmpServerMsg_ServerEntityMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg)
    MergeFrom(*source);
  }
}

void AgleConfMsg_RtmpServerMsg_ServerEntityMsg::MergeFrom(const AgleConfMsg_RtmpServerMsg_ServerEntityMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rtmp_server_url().size() > 0) {

    rtmp_server_url_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.rtmp_server_url_);
  }
  if (from.stream_name().size() > 0) {

    stream_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.stream_name_);
  }
  if (from.is_master() != 0) {
    _internal_set_is_master(from._internal_is_master());
  }
  if (from.entity_id() != 0) {
    _internal_set_entity_id(from._internal_entity_id());
  }
}

void AgleConfMsg_RtmpServerMsg_ServerEntityMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgleConfMsg_RtmpServerMsg_ServerEntityMsg::CopyFrom(const AgleConfMsg_RtmpServerMsg_ServerEntityMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgleConfMsg_RtmpServerMsg_ServerEntityMsg::IsInitialized() const {
  return true;
}

void AgleConfMsg_RtmpServerMsg_ServerEntityMsg::InternalSwap(AgleConfMsg_RtmpServerMsg_ServerEntityMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  rtmp_server_url_.Swap(&other->rtmp_server_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stream_name_.Swap(&other->stream_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_master_, other->is_master_);
  swap(entity_id_, other->entity_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgleConfMsg_RtmpServerMsg_ServerEntityMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AgleConfMsg_RtmpServerMsg::InitAsDefaultInstance() {
}
class AgleConfMsg_RtmpServerMsg::_Internal {
 public:
};

AgleConfMsg_RtmpServerMsg::AgleConfMsg_RtmpServerMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ivi.agle.AgleConfMsg.RtmpServerMsg)
}
AgleConfMsg_RtmpServerMsg::AgleConfMsg_RtmpServerMsg(const AgleConfMsg_RtmpServerMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      rtmp_servers_(from.rtmp_servers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_enable_ = from.is_enable_;
  // @@protoc_insertion_point(copy_constructor:ivi.agle.AgleConfMsg.RtmpServerMsg)
}

void AgleConfMsg_RtmpServerMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AgleConfMsg_RtmpServerMsg_agle_5fconf_2eproto.base);
  is_enable_ = false;
}

AgleConfMsg_RtmpServerMsg::~AgleConfMsg_RtmpServerMsg() {
  // @@protoc_insertion_point(destructor:ivi.agle.AgleConfMsg.RtmpServerMsg)
  SharedDtor();
}

void AgleConfMsg_RtmpServerMsg::SharedDtor() {
}

void AgleConfMsg_RtmpServerMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AgleConfMsg_RtmpServerMsg& AgleConfMsg_RtmpServerMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AgleConfMsg_RtmpServerMsg_agle_5fconf_2eproto.base);
  return *internal_default_instance();
}


void AgleConfMsg_RtmpServerMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:ivi.agle.AgleConfMsg.RtmpServerMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rtmp_servers_.Clear();
  is_enable_ = false;
  _internal_metadata_.Clear();
}

const char* AgleConfMsg_RtmpServerMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool is_enable = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          is_enable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg rtmp_servers = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_rtmp_servers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AgleConfMsg_RtmpServerMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ivi.agle.AgleConfMsg.RtmpServerMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_enable = 1;
  if (this->is_enable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_is_enable(), target);
  }

  // repeated .ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg rtmp_servers = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_rtmp_servers_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_rtmp_servers(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ivi.agle.AgleConfMsg.RtmpServerMsg)
  return target;
}

size_t AgleConfMsg_RtmpServerMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ivi.agle.AgleConfMsg.RtmpServerMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ivi.agle.AgleConfMsg.RtmpServerMsg.ServerEntityMsg rtmp_servers = 2;
  total_size += 1UL * this->_internal_rtmp_servers_size();
  for (const auto& msg : this->rtmp_servers_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bool is_enable = 1;
  if (this->is_enable() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AgleConfMsg_RtmpServerMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ivi.agle.AgleConfMsg.RtmpServerMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const AgleConfMsg_RtmpServerMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AgleConfMsg_RtmpServerMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ivi.agle.AgleConfMsg.RtmpServerMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ivi.agle.AgleConfMsg.RtmpServerMsg)
    MergeFrom(*source);
  }
}

void AgleConfMsg_RtmpServerMsg::MergeFrom(const AgleConfMsg_RtmpServerMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ivi.agle.AgleConfMsg.RtmpServerMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rtmp_servers_.MergeFrom(from.rtmp_servers_);
  if (from.is_enable() != 0) {
    _internal_set_is_enable(from._internal_is_enable());
  }
}

void AgleConfMsg_RtmpServerMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ivi.agle.AgleConfMsg.RtmpServerMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgleConfMsg_RtmpServerMsg::CopyFrom(const AgleConfMsg_RtmpServerMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ivi.agle.AgleConfMsg.RtmpServerMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgleConfMsg_RtmpServerMsg::IsInitialized() const {
  return true;
}

void AgleConfMsg_RtmpServerMsg::InternalSwap(AgleConfMsg_RtmpServerMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  rtmp_servers_.InternalSwap(&other->rtmp_servers_);
  swap(is_enable_, other->is_enable_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgleConfMsg_RtmpServerMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AgleConfMsg_AudiosMsg_AudioEntityMsg::InitAsDefaultInstance() {
}
class AgleConfMsg_AudiosMsg_AudioEntityMsg::_Internal {
 public:
};

AgleConfMsg_AudiosMsg_AudioEntityMsg::AgleConfMsg_AudiosMsg_AudioEntityMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg)
}
AgleConfMsg_AudiosMsg_AudioEntityMsg::AgleConfMsg_AudiosMsg_AudioEntityMsg(const AgleConfMsg_AudiosMsg_AudioEntityMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  channels_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_channels().empty()) {
    channels_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.channels_);
  }
  ::memcpy(&is_enable_, &from.is_enable_,
    static_cast<size_t>(reinterpret_cast<char*>(&samplerate_) -
    reinterpret_cast<char*>(&is_enable_)) + sizeof(samplerate_));
  // @@protoc_insertion_point(copy_constructor:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg)
}

void AgleConfMsg_AudiosMsg_AudioEntityMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AgleConfMsg_AudiosMsg_AudioEntityMsg_agle_5fconf_2eproto.base);
  channels_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_enable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&samplerate_) -
      reinterpret_cast<char*>(&is_enable_)) + sizeof(samplerate_));
}

AgleConfMsg_AudiosMsg_AudioEntityMsg::~AgleConfMsg_AudiosMsg_AudioEntityMsg() {
  // @@protoc_insertion_point(destructor:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg)
  SharedDtor();
}

void AgleConfMsg_AudiosMsg_AudioEntityMsg::SharedDtor() {
  channels_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AgleConfMsg_AudiosMsg_AudioEntityMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AgleConfMsg_AudiosMsg_AudioEntityMsg& AgleConfMsg_AudiosMsg_AudioEntityMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AgleConfMsg_AudiosMsg_AudioEntityMsg_agle_5fconf_2eproto.base);
  return *internal_default_instance();
}


void AgleConfMsg_AudiosMsg_AudioEntityMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channels_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_enable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&samplerate_) -
      reinterpret_cast<char*>(&is_enable_)) + sizeof(samplerate_));
  _internal_metadata_.Clear();
}

const char* AgleConfMsg_AudiosMsg_AudioEntityMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool is_enable = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          is_enable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 entity_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          entity_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string channels = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_channels();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg.channels"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ivi.agle.AgleConfMsg.AudiosMsg.EnumAudioBitrate bitrate = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_bitrate(static_cast<::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioBitrate>(val));
        } else goto handle_unusual;
        continue;
      // .ivi.agle.AgleConfMsg.AudiosMsg.EnumAudioFormat format = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_format(static_cast<::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioFormat>(val));
        } else goto handle_unusual;
        continue;
      // .ivi.agle.AgleConfMsg.AudiosMsg.EnumAudioSamplerate samplerate = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_samplerate(static_cast<::ivi::agle::AgleConfMsg_AudiosMsg_EnumAudioSamplerate>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AgleConfMsg_AudiosMsg_AudioEntityMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_enable = 1;
  if (this->is_enable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_is_enable(), target);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_entity_id(), target);
  }

  // string channels = 3;
  if (this->channels().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_channels().data(), static_cast<int>(this->_internal_channels().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg.channels");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_channels(), target);
  }

  // .ivi.agle.AgleConfMsg.AudiosMsg.EnumAudioBitrate bitrate = 4;
  if (this->bitrate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_bitrate(), target);
  }

  // .ivi.agle.AgleConfMsg.AudiosMsg.EnumAudioFormat format = 5;
  if (this->format() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_format(), target);
  }

  // .ivi.agle.AgleConfMsg.AudiosMsg.EnumAudioSamplerate samplerate = 6;
  if (this->samplerate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_samplerate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg)
  return target;
}

size_t AgleConfMsg_AudiosMsg_AudioEntityMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string channels = 3;
  if (this->channels().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_channels());
  }

  // bool is_enable = 1;
  if (this->is_enable() != 0) {
    total_size += 1 + 1;
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_entity_id());
  }

  // .ivi.agle.AgleConfMsg.AudiosMsg.EnumAudioBitrate bitrate = 4;
  if (this->bitrate() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_bitrate());
  }

  // .ivi.agle.AgleConfMsg.AudiosMsg.EnumAudioFormat format = 5;
  if (this->format() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_format());
  }

  // .ivi.agle.AgleConfMsg.AudiosMsg.EnumAudioSamplerate samplerate = 6;
  if (this->samplerate() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_samplerate());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AgleConfMsg_AudiosMsg_AudioEntityMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const AgleConfMsg_AudiosMsg_AudioEntityMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AgleConfMsg_AudiosMsg_AudioEntityMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg)
    MergeFrom(*source);
  }
}

void AgleConfMsg_AudiosMsg_AudioEntityMsg::MergeFrom(const AgleConfMsg_AudiosMsg_AudioEntityMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channels().size() > 0) {

    channels_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.channels_);
  }
  if (from.is_enable() != 0) {
    _internal_set_is_enable(from._internal_is_enable());
  }
  if (from.entity_id() != 0) {
    _internal_set_entity_id(from._internal_entity_id());
  }
  if (from.bitrate() != 0) {
    _internal_set_bitrate(from._internal_bitrate());
  }
  if (from.format() != 0) {
    _internal_set_format(from._internal_format());
  }
  if (from.samplerate() != 0) {
    _internal_set_samplerate(from._internal_samplerate());
  }
}

void AgleConfMsg_AudiosMsg_AudioEntityMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgleConfMsg_AudiosMsg_AudioEntityMsg::CopyFrom(const AgleConfMsg_AudiosMsg_AudioEntityMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgleConfMsg_AudiosMsg_AudioEntityMsg::IsInitialized() const {
  return true;
}

void AgleConfMsg_AudiosMsg_AudioEntityMsg::InternalSwap(AgleConfMsg_AudiosMsg_AudioEntityMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  channels_.Swap(&other->channels_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_enable_, other->is_enable_);
  swap(entity_id_, other->entity_id_);
  swap(bitrate_, other->bitrate_);
  swap(format_, other->format_);
  swap(samplerate_, other->samplerate_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgleConfMsg_AudiosMsg_AudioEntityMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AgleConfMsg_AudiosMsg::InitAsDefaultInstance() {
}
class AgleConfMsg_AudiosMsg::_Internal {
 public:
};

AgleConfMsg_AudiosMsg::AgleConfMsg_AudiosMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ivi.agle.AgleConfMsg.AudiosMsg)
}
AgleConfMsg_AudiosMsg::AgleConfMsg_AudiosMsg(const AgleConfMsg_AudiosMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      audios_(from.audios_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_device_name().empty()) {
    device_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.device_name_);
  }
  device_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_device_path().empty()) {
    device_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.device_path_);
  }
  is_enable_ = from.is_enable_;
  // @@protoc_insertion_point(copy_constructor:ivi.agle.AgleConfMsg.AudiosMsg)
}

void AgleConfMsg_AudiosMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AgleConfMsg_AudiosMsg_agle_5fconf_2eproto.base);
  device_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  device_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  is_enable_ = false;
}

AgleConfMsg_AudiosMsg::~AgleConfMsg_AudiosMsg() {
  // @@protoc_insertion_point(destructor:ivi.agle.AgleConfMsg.AudiosMsg)
  SharedDtor();
}

void AgleConfMsg_AudiosMsg::SharedDtor() {
  device_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  device_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AgleConfMsg_AudiosMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AgleConfMsg_AudiosMsg& AgleConfMsg_AudiosMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AgleConfMsg_AudiosMsg_agle_5fconf_2eproto.base);
  return *internal_default_instance();
}


void AgleConfMsg_AudiosMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:ivi.agle.AgleConfMsg.AudiosMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  audios_.Clear();
  device_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  device_path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  is_enable_ = false;
  _internal_metadata_.Clear();
}

const char* AgleConfMsg_AudiosMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool is_enable = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          is_enable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string device_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_device_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ivi.agle.AgleConfMsg.AudiosMsg.device_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string device_path = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_device_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ivi.agle.AgleConfMsg.AudiosMsg.device_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg audios = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_audios(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AgleConfMsg_AudiosMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ivi.agle.AgleConfMsg.AudiosMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_enable = 1;
  if (this->is_enable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_is_enable(), target);
  }

  // string device_name = 2;
  if (this->device_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_device_name().data(), static_cast<int>(this->_internal_device_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ivi.agle.AgleConfMsg.AudiosMsg.device_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_device_name(), target);
  }

  // string device_path = 3;
  if (this->device_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_device_path().data(), static_cast<int>(this->_internal_device_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ivi.agle.AgleConfMsg.AudiosMsg.device_path");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_device_path(), target);
  }

  // repeated .ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg audios = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_audios_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_audios(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ivi.agle.AgleConfMsg.AudiosMsg)
  return target;
}

size_t AgleConfMsg_AudiosMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ivi.agle.AgleConfMsg.AudiosMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ivi.agle.AgleConfMsg.AudiosMsg.AudioEntityMsg audios = 4;
  total_size += 1UL * this->_internal_audios_size();
  for (const auto& msg : this->audios_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string device_name = 2;
  if (this->device_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_device_name());
  }

  // string device_path = 3;
  if (this->device_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_device_path());
  }

  // bool is_enable = 1;
  if (this->is_enable() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AgleConfMsg_AudiosMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ivi.agle.AgleConfMsg.AudiosMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const AgleConfMsg_AudiosMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AgleConfMsg_AudiosMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ivi.agle.AgleConfMsg.AudiosMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ivi.agle.AgleConfMsg.AudiosMsg)
    MergeFrom(*source);
  }
}

void AgleConfMsg_AudiosMsg::MergeFrom(const AgleConfMsg_AudiosMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ivi.agle.AgleConfMsg.AudiosMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  audios_.MergeFrom(from.audios_);
  if (from.device_name().size() > 0) {

    device_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.device_name_);
  }
  if (from.device_path().size() > 0) {

    device_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.device_path_);
  }
  if (from.is_enable() != 0) {
    _internal_set_is_enable(from._internal_is_enable());
  }
}

void AgleConfMsg_AudiosMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ivi.agle.AgleConfMsg.AudiosMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgleConfMsg_AudiosMsg::CopyFrom(const AgleConfMsg_AudiosMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ivi.agle.AgleConfMsg.AudiosMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgleConfMsg_AudiosMsg::IsInitialized() const {
  return true;
}

void AgleConfMsg_AudiosMsg::InternalSwap(AgleConfMsg_AudiosMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  audios_.InternalSwap(&other->audios_);
  device_name_.Swap(&other->device_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  device_path_.Swap(&other->device_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_enable_, other->is_enable_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgleConfMsg_AudiosMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AgleConfMsg_VideosMsg_CropMsg::InitAsDefaultInstance() {
}
class AgleConfMsg_VideosMsg_CropMsg::_Internal {
 public:
};

AgleConfMsg_VideosMsg_CropMsg::AgleConfMsg_VideosMsg_CropMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ivi.agle.AgleConfMsg.VideosMsg.CropMsg)
}
AgleConfMsg_VideosMsg_CropMsg::AgleConfMsg_VideosMsg_CropMsg(const AgleConfMsg_VideosMsg_CropMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_enable_, &from.is_enable_,
    static_cast<size_t>(reinterpret_cast<char*>(&crop_height_) -
    reinterpret_cast<char*>(&is_enable_)) + sizeof(crop_height_));
  // @@protoc_insertion_point(copy_constructor:ivi.agle.AgleConfMsg.VideosMsg.CropMsg)
}

void AgleConfMsg_VideosMsg_CropMsg::SharedCtor() {
  ::memset(&is_enable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&crop_height_) -
      reinterpret_cast<char*>(&is_enable_)) + sizeof(crop_height_));
}

AgleConfMsg_VideosMsg_CropMsg::~AgleConfMsg_VideosMsg_CropMsg() {
  // @@protoc_insertion_point(destructor:ivi.agle.AgleConfMsg.VideosMsg.CropMsg)
  SharedDtor();
}

void AgleConfMsg_VideosMsg_CropMsg::SharedDtor() {
}

void AgleConfMsg_VideosMsg_CropMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AgleConfMsg_VideosMsg_CropMsg& AgleConfMsg_VideosMsg_CropMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AgleConfMsg_VideosMsg_CropMsg_agle_5fconf_2eproto.base);
  return *internal_default_instance();
}


void AgleConfMsg_VideosMsg_CropMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:ivi.agle.AgleConfMsg.VideosMsg.CropMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&is_enable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&crop_height_) -
      reinterpret_cast<char*>(&is_enable_)) + sizeof(crop_height_));
  _internal_metadata_.Clear();
}

const char* AgleConfMsg_VideosMsg_CropMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool is_enable = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          is_enable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 crop_x = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          crop_x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 crop_y = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          crop_y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 crop_width = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          crop_width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 crop_height = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          crop_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AgleConfMsg_VideosMsg_CropMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ivi.agle.AgleConfMsg.VideosMsg.CropMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_enable = 1;
  if (this->is_enable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_is_enable(), target);
  }

  // uint32 crop_x = 2;
  if (this->crop_x() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_crop_x(), target);
  }

  // uint32 crop_y = 3;
  if (this->crop_y() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_crop_y(), target);
  }

  // uint32 crop_width = 4;
  if (this->crop_width() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_crop_width(), target);
  }

  // uint32 crop_height = 5;
  if (this->crop_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_crop_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ivi.agle.AgleConfMsg.VideosMsg.CropMsg)
  return target;
}

size_t AgleConfMsg_VideosMsg_CropMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ivi.agle.AgleConfMsg.VideosMsg.CropMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool is_enable = 1;
  if (this->is_enable() != 0) {
    total_size += 1 + 1;
  }

  // uint32 crop_x = 2;
  if (this->crop_x() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_crop_x());
  }

  // uint32 crop_y = 3;
  if (this->crop_y() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_crop_y());
  }

  // uint32 crop_width = 4;
  if (this->crop_width() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_crop_width());
  }

  // uint32 crop_height = 5;
  if (this->crop_height() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_crop_height());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AgleConfMsg_VideosMsg_CropMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ivi.agle.AgleConfMsg.VideosMsg.CropMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const AgleConfMsg_VideosMsg_CropMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AgleConfMsg_VideosMsg_CropMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ivi.agle.AgleConfMsg.VideosMsg.CropMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ivi.agle.AgleConfMsg.VideosMsg.CropMsg)
    MergeFrom(*source);
  }
}

void AgleConfMsg_VideosMsg_CropMsg::MergeFrom(const AgleConfMsg_VideosMsg_CropMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ivi.agle.AgleConfMsg.VideosMsg.CropMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_enable() != 0) {
    _internal_set_is_enable(from._internal_is_enable());
  }
  if (from.crop_x() != 0) {
    _internal_set_crop_x(from._internal_crop_x());
  }
  if (from.crop_y() != 0) {
    _internal_set_crop_y(from._internal_crop_y());
  }
  if (from.crop_width() != 0) {
    _internal_set_crop_width(from._internal_crop_width());
  }
  if (from.crop_height() != 0) {
    _internal_set_crop_height(from._internal_crop_height());
  }
}

void AgleConfMsg_VideosMsg_CropMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ivi.agle.AgleConfMsg.VideosMsg.CropMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgleConfMsg_VideosMsg_CropMsg::CopyFrom(const AgleConfMsg_VideosMsg_CropMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ivi.agle.AgleConfMsg.VideosMsg.CropMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgleConfMsg_VideosMsg_CropMsg::IsInitialized() const {
  return true;
}

void AgleConfMsg_VideosMsg_CropMsg::InternalSwap(AgleConfMsg_VideosMsg_CropMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(is_enable_, other->is_enable_);
  swap(crop_x_, other->crop_x_);
  swap(crop_y_, other->crop_y_);
  swap(crop_width_, other->crop_width_);
  swap(crop_height_, other->crop_height_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgleConfMsg_VideosMsg_CropMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AgleConfMsg_VideosMsg_VideoEntityMsg::InitAsDefaultInstance() {
  ::ivi::agle::_AgleConfMsg_VideosMsg_VideoEntityMsg_default_instance_._instance.get_mutable()->crop_setting_ = const_cast< ::ivi::agle::AgleConfMsg_VideosMsg_CropMsg*>(
      ::ivi::agle::AgleConfMsg_VideosMsg_CropMsg::internal_default_instance());
}
class AgleConfMsg_VideosMsg_VideoEntityMsg::_Internal {
 public:
  static const ::ivi::agle::AgleConfMsg_VideosMsg_CropMsg& crop_setting(const AgleConfMsg_VideosMsg_VideoEntityMsg* msg);
};

const ::ivi::agle::AgleConfMsg_VideosMsg_CropMsg&
AgleConfMsg_VideosMsg_VideoEntityMsg::_Internal::crop_setting(const AgleConfMsg_VideosMsg_VideoEntityMsg* msg) {
  return *msg->crop_setting_;
}
AgleConfMsg_VideosMsg_VideoEntityMsg::AgleConfMsg_VideosMsg_VideoEntityMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg)
}
AgleConfMsg_VideosMsg_VideoEntityMsg::AgleConfMsg_VideosMsg_VideoEntityMsg(const AgleConfMsg_VideosMsg_VideoEntityMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_crop_setting()) {
    crop_setting_ = new ::ivi::agle::AgleConfMsg_VideosMsg_CropMsg(*from.crop_setting_);
  } else {
    crop_setting_ = nullptr;
  }
  ::memcpy(&is_enable_, &from.is_enable_,
    static_cast<size_t>(reinterpret_cast<char*>(&keyframe_frequency_) -
    reinterpret_cast<char*>(&is_enable_)) + sizeof(keyframe_frequency_));
  // @@protoc_insertion_point(copy_constructor:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg)
}

void AgleConfMsg_VideosMsg_VideoEntityMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AgleConfMsg_VideosMsg_VideoEntityMsg_agle_5fconf_2eproto.base);
  ::memset(&crop_setting_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&keyframe_frequency_) -
      reinterpret_cast<char*>(&crop_setting_)) + sizeof(keyframe_frequency_));
}

AgleConfMsg_VideosMsg_VideoEntityMsg::~AgleConfMsg_VideosMsg_VideoEntityMsg() {
  // @@protoc_insertion_point(destructor:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg)
  SharedDtor();
}

void AgleConfMsg_VideosMsg_VideoEntityMsg::SharedDtor() {
  if (this != internal_default_instance()) delete crop_setting_;
}

void AgleConfMsg_VideosMsg_VideoEntityMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AgleConfMsg_VideosMsg_VideoEntityMsg& AgleConfMsg_VideosMsg_VideoEntityMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AgleConfMsg_VideosMsg_VideoEntityMsg_agle_5fconf_2eproto.base);
  return *internal_default_instance();
}


void AgleConfMsg_VideosMsg_VideoEntityMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && crop_setting_ != nullptr) {
    delete crop_setting_;
  }
  crop_setting_ = nullptr;
  ::memset(&is_enable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&keyframe_frequency_) -
      reinterpret_cast<char*>(&is_enable_)) + sizeof(keyframe_frequency_));
  _internal_metadata_.Clear();
}

const char* AgleConfMsg_VideosMsg_VideoEntityMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool is_enable = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          is_enable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 entity_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          entity_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ivi.agle.AgleConfMsg.VideosMsg.EnumVideoOutSize outputsize = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_outputsize(static_cast<::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoOutSize>(val));
        } else goto handle_unusual;
        continue;
      // .ivi.agle.AgleConfMsg.VideosMsg.EnumVideoBitrate bitrate = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_bitrate(static_cast<::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoBitrate>(val));
        } else goto handle_unusual;
        continue;
      // .ivi.agle.AgleConfMsg.VideosMsg.EnumVideoFramerate framerate = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_framerate(static_cast<::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoFramerate>(val));
        } else goto handle_unusual;
        continue;
      // uint32 keyframe_frequency = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          keyframe_frequency_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ivi.agle.AgleConfMsg.VideosMsg.CropMsg crop_setting = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_crop_setting(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AgleConfMsg_VideosMsg_VideoEntityMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_enable = 1;
  if (this->is_enable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_is_enable(), target);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_entity_id(), target);
  }

  // .ivi.agle.AgleConfMsg.VideosMsg.EnumVideoOutSize outputsize = 3;
  if (this->outputsize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_outputsize(), target);
  }

  // .ivi.agle.AgleConfMsg.VideosMsg.EnumVideoBitrate bitrate = 4;
  if (this->bitrate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_bitrate(), target);
  }

  // .ivi.agle.AgleConfMsg.VideosMsg.EnumVideoFramerate framerate = 5;
  if (this->framerate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_framerate(), target);
  }

  // uint32 keyframe_frequency = 6;
  if (this->keyframe_frequency() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_keyframe_frequency(), target);
  }

  // .ivi.agle.AgleConfMsg.VideosMsg.CropMsg crop_setting = 7;
  if (this->has_crop_setting()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::crop_setting(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg)
  return target;
}

size_t AgleConfMsg_VideosMsg_VideoEntityMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ivi.agle.AgleConfMsg.VideosMsg.CropMsg crop_setting = 7;
  if (this->has_crop_setting()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *crop_setting_);
  }

  // bool is_enable = 1;
  if (this->is_enable() != 0) {
    total_size += 1 + 1;
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_entity_id());
  }

  // .ivi.agle.AgleConfMsg.VideosMsg.EnumVideoOutSize outputsize = 3;
  if (this->outputsize() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_outputsize());
  }

  // .ivi.agle.AgleConfMsg.VideosMsg.EnumVideoBitrate bitrate = 4;
  if (this->bitrate() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_bitrate());
  }

  // .ivi.agle.AgleConfMsg.VideosMsg.EnumVideoFramerate framerate = 5;
  if (this->framerate() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_framerate());
  }

  // uint32 keyframe_frequency = 6;
  if (this->keyframe_frequency() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_keyframe_frequency());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AgleConfMsg_VideosMsg_VideoEntityMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const AgleConfMsg_VideosMsg_VideoEntityMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AgleConfMsg_VideosMsg_VideoEntityMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg)
    MergeFrom(*source);
  }
}

void AgleConfMsg_VideosMsg_VideoEntityMsg::MergeFrom(const AgleConfMsg_VideosMsg_VideoEntityMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_crop_setting()) {
    _internal_mutable_crop_setting()->::ivi::agle::AgleConfMsg_VideosMsg_CropMsg::MergeFrom(from._internal_crop_setting());
  }
  if (from.is_enable() != 0) {
    _internal_set_is_enable(from._internal_is_enable());
  }
  if (from.entity_id() != 0) {
    _internal_set_entity_id(from._internal_entity_id());
  }
  if (from.outputsize() != 0) {
    _internal_set_outputsize(from._internal_outputsize());
  }
  if (from.bitrate() != 0) {
    _internal_set_bitrate(from._internal_bitrate());
  }
  if (from.framerate() != 0) {
    _internal_set_framerate(from._internal_framerate());
  }
  if (from.keyframe_frequency() != 0) {
    _internal_set_keyframe_frequency(from._internal_keyframe_frequency());
  }
}

void AgleConfMsg_VideosMsg_VideoEntityMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgleConfMsg_VideosMsg_VideoEntityMsg::CopyFrom(const AgleConfMsg_VideosMsg_VideoEntityMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgleConfMsg_VideosMsg_VideoEntityMsg::IsInitialized() const {
  return true;
}

void AgleConfMsg_VideosMsg_VideoEntityMsg::InternalSwap(AgleConfMsg_VideosMsg_VideoEntityMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(crop_setting_, other->crop_setting_);
  swap(is_enable_, other->is_enable_);
  swap(entity_id_, other->entity_id_);
  swap(outputsize_, other->outputsize_);
  swap(bitrate_, other->bitrate_);
  swap(framerate_, other->framerate_);
  swap(keyframe_frequency_, other->keyframe_frequency_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgleConfMsg_VideosMsg_VideoEntityMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AgleConfMsg_VideosMsg::InitAsDefaultInstance() {
}
class AgleConfMsg_VideosMsg::_Internal {
 public:
};

AgleConfMsg_VideosMsg::AgleConfMsg_VideosMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ivi.agle.AgleConfMsg.VideosMsg)
}
AgleConfMsg_VideosMsg::AgleConfMsg_VideosMsg(const AgleConfMsg_VideosMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      videos_(from.videos_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_device_name().empty()) {
    device_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.device_name_);
  }
  device_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_device_path().empty()) {
    device_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.device_path_);
  }
  ::memcpy(&is_enable_, &from.is_enable_,
    static_cast<size_t>(reinterpret_cast<char*>(&video_quality_) -
    reinterpret_cast<char*>(&is_enable_)) + sizeof(video_quality_));
  // @@protoc_insertion_point(copy_constructor:ivi.agle.AgleConfMsg.VideosMsg)
}

void AgleConfMsg_VideosMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AgleConfMsg_VideosMsg_agle_5fconf_2eproto.base);
  device_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  device_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_enable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&video_quality_) -
      reinterpret_cast<char*>(&is_enable_)) + sizeof(video_quality_));
}

AgleConfMsg_VideosMsg::~AgleConfMsg_VideosMsg() {
  // @@protoc_insertion_point(destructor:ivi.agle.AgleConfMsg.VideosMsg)
  SharedDtor();
}

void AgleConfMsg_VideosMsg::SharedDtor() {
  device_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  device_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AgleConfMsg_VideosMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AgleConfMsg_VideosMsg& AgleConfMsg_VideosMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AgleConfMsg_VideosMsg_agle_5fconf_2eproto.base);
  return *internal_default_instance();
}


void AgleConfMsg_VideosMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:ivi.agle.AgleConfMsg.VideosMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  videos_.Clear();
  device_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  device_path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_enable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&video_quality_) -
      reinterpret_cast<char*>(&is_enable_)) + sizeof(video_quality_));
  _internal_metadata_.Clear();
}

const char* AgleConfMsg_VideosMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool is_enable = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          is_enable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string device_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_device_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ivi.agle.AgleConfMsg.VideosMsg.device_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string device_path = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_device_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ivi.agle.AgleConfMsg.VideosMsg.device_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ivi.agle.AgleConfMsg.VideosMsg.EnumVideoEncodeFormat video_encoder = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_video_encoder(static_cast<::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoEncodeFormat>(val));
        } else goto handle_unusual;
        continue;
      // .ivi.agle.AgleConfMsg.VideosMsg.EnumVideoEncodeQuality video_quality = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_video_quality(static_cast<::ivi::agle::AgleConfMsg_VideosMsg_EnumVideoEncodeQuality>(val));
        } else goto handle_unusual;
        continue;
      // repeated .ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg videos = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_videos(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AgleConfMsg_VideosMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ivi.agle.AgleConfMsg.VideosMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_enable = 1;
  if (this->is_enable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_is_enable(), target);
  }

  // string device_name = 2;
  if (this->device_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_device_name().data(), static_cast<int>(this->_internal_device_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ivi.agle.AgleConfMsg.VideosMsg.device_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_device_name(), target);
  }

  // string device_path = 3;
  if (this->device_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_device_path().data(), static_cast<int>(this->_internal_device_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ivi.agle.AgleConfMsg.VideosMsg.device_path");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_device_path(), target);
  }

  // .ivi.agle.AgleConfMsg.VideosMsg.EnumVideoEncodeFormat video_encoder = 4;
  if (this->video_encoder() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_video_encoder(), target);
  }

  // .ivi.agle.AgleConfMsg.VideosMsg.EnumVideoEncodeQuality video_quality = 5;
  if (this->video_quality() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_video_quality(), target);
  }

  // repeated .ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg videos = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_videos_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_videos(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ivi.agle.AgleConfMsg.VideosMsg)
  return target;
}

size_t AgleConfMsg_VideosMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ivi.agle.AgleConfMsg.VideosMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ivi.agle.AgleConfMsg.VideosMsg.VideoEntityMsg videos = 6;
  total_size += 1UL * this->_internal_videos_size();
  for (const auto& msg : this->videos_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string device_name = 2;
  if (this->device_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_device_name());
  }

  // string device_path = 3;
  if (this->device_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_device_path());
  }

  // bool is_enable = 1;
  if (this->is_enable() != 0) {
    total_size += 1 + 1;
  }

  // .ivi.agle.AgleConfMsg.VideosMsg.EnumVideoEncodeFormat video_encoder = 4;
  if (this->video_encoder() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_video_encoder());
  }

  // .ivi.agle.AgleConfMsg.VideosMsg.EnumVideoEncodeQuality video_quality = 5;
  if (this->video_quality() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_video_quality());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AgleConfMsg_VideosMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ivi.agle.AgleConfMsg.VideosMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const AgleConfMsg_VideosMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AgleConfMsg_VideosMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ivi.agle.AgleConfMsg.VideosMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ivi.agle.AgleConfMsg.VideosMsg)
    MergeFrom(*source);
  }
}

void AgleConfMsg_VideosMsg::MergeFrom(const AgleConfMsg_VideosMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ivi.agle.AgleConfMsg.VideosMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  videos_.MergeFrom(from.videos_);
  if (from.device_name().size() > 0) {

    device_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.device_name_);
  }
  if (from.device_path().size() > 0) {

    device_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.device_path_);
  }
  if (from.is_enable() != 0) {
    _internal_set_is_enable(from._internal_is_enable());
  }
  if (from.video_encoder() != 0) {
    _internal_set_video_encoder(from._internal_video_encoder());
  }
  if (from.video_quality() != 0) {
    _internal_set_video_quality(from._internal_video_quality());
  }
}

void AgleConfMsg_VideosMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ivi.agle.AgleConfMsg.VideosMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgleConfMsg_VideosMsg::CopyFrom(const AgleConfMsg_VideosMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ivi.agle.AgleConfMsg.VideosMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgleConfMsg_VideosMsg::IsInitialized() const {
  return true;
}

void AgleConfMsg_VideosMsg::InternalSwap(AgleConfMsg_VideosMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  videos_.InternalSwap(&other->videos_);
  device_name_.Swap(&other->device_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  device_path_.Swap(&other->device_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_enable_, other->is_enable_);
  swap(video_encoder_, other->video_encoder_);
  swap(video_quality_, other->video_quality_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgleConfMsg_VideosMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AgleConfMsg::InitAsDefaultInstance() {
  ::ivi::agle::_AgleConfMsg_default_instance_._instance.get_mutable()->ntp_msg_ = const_cast< ::ivi::agle::AgleConfMsg_NtpMsg*>(
      ::ivi::agle::AgleConfMsg_NtpMsg::internal_default_instance());
  ::ivi::agle::_AgleConfMsg_default_instance_._instance.get_mutable()->log_msg_ = const_cast< ::ivi::agle::AgleConfMsg_LogMsg*>(
      ::ivi::agle::AgleConfMsg_LogMsg::internal_default_instance());
  ::ivi::agle::_AgleConfMsg_default_instance_._instance.get_mutable()->management_msg_ = const_cast< ::ivi::agle::AgleConfMsg_ManagementMsg*>(
      ::ivi::agle::AgleConfMsg_ManagementMsg::internal_default_instance());
  ::ivi::agle::_AgleConfMsg_default_instance_._instance.get_mutable()->record_msg_ = const_cast< ::ivi::agle::AgleConfMsg_RecordMsg*>(
      ::ivi::agle::AgleConfMsg_RecordMsg::internal_default_instance());
  ::ivi::agle::_AgleConfMsg_default_instance_._instance.get_mutable()->rtmp_server_msg_ = const_cast< ::ivi::agle::AgleConfMsg_RtmpServerMsg*>(
      ::ivi::agle::AgleConfMsg_RtmpServerMsg::internal_default_instance());
  ::ivi::agle::_AgleConfMsg_default_instance_._instance.get_mutable()->audio_msg_ = const_cast< ::ivi::agle::AgleConfMsg_AudiosMsg*>(
      ::ivi::agle::AgleConfMsg_AudiosMsg::internal_default_instance());
  ::ivi::agle::_AgleConfMsg_default_instance_._instance.get_mutable()->video_msg_ = const_cast< ::ivi::agle::AgleConfMsg_VideosMsg*>(
      ::ivi::agle::AgleConfMsg_VideosMsg::internal_default_instance());
}
class AgleConfMsg::_Internal {
 public:
  static const ::ivi::agle::AgleConfMsg_NtpMsg& ntp_msg(const AgleConfMsg* msg);
  static const ::ivi::agle::AgleConfMsg_LogMsg& log_msg(const AgleConfMsg* msg);
  static const ::ivi::agle::AgleConfMsg_ManagementMsg& management_msg(const AgleConfMsg* msg);
  static const ::ivi::agle::AgleConfMsg_RecordMsg& record_msg(const AgleConfMsg* msg);
  static const ::ivi::agle::AgleConfMsg_RtmpServerMsg& rtmp_server_msg(const AgleConfMsg* msg);
  static const ::ivi::agle::AgleConfMsg_AudiosMsg& audio_msg(const AgleConfMsg* msg);
  static const ::ivi::agle::AgleConfMsg_VideosMsg& video_msg(const AgleConfMsg* msg);
};

const ::ivi::agle::AgleConfMsg_NtpMsg&
AgleConfMsg::_Internal::ntp_msg(const AgleConfMsg* msg) {
  return *msg->ntp_msg_;
}
const ::ivi::agle::AgleConfMsg_LogMsg&
AgleConfMsg::_Internal::log_msg(const AgleConfMsg* msg) {
  return *msg->log_msg_;
}
const ::ivi::agle::AgleConfMsg_ManagementMsg&
AgleConfMsg::_Internal::management_msg(const AgleConfMsg* msg) {
  return *msg->management_msg_;
}
const ::ivi::agle::AgleConfMsg_RecordMsg&
AgleConfMsg::_Internal::record_msg(const AgleConfMsg* msg) {
  return *msg->record_msg_;
}
const ::ivi::agle::AgleConfMsg_RtmpServerMsg&
AgleConfMsg::_Internal::rtmp_server_msg(const AgleConfMsg* msg) {
  return *msg->rtmp_server_msg_;
}
const ::ivi::agle::AgleConfMsg_AudiosMsg&
AgleConfMsg::_Internal::audio_msg(const AgleConfMsg* msg) {
  return *msg->audio_msg_;
}
const ::ivi::agle::AgleConfMsg_VideosMsg&
AgleConfMsg::_Internal::video_msg(const AgleConfMsg* msg) {
  return *msg->video_msg_;
}
AgleConfMsg::AgleConfMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ivi.agle.AgleConfMsg)
}
AgleConfMsg::AgleConfMsg(const AgleConfMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_ntp_msg()) {
    ntp_msg_ = new ::ivi::agle::AgleConfMsg_NtpMsg(*from.ntp_msg_);
  } else {
    ntp_msg_ = nullptr;
  }
  if (from._internal_has_log_msg()) {
    log_msg_ = new ::ivi::agle::AgleConfMsg_LogMsg(*from.log_msg_);
  } else {
    log_msg_ = nullptr;
  }
  if (from._internal_has_management_msg()) {
    management_msg_ = new ::ivi::agle::AgleConfMsg_ManagementMsg(*from.management_msg_);
  } else {
    management_msg_ = nullptr;
  }
  if (from._internal_has_record_msg()) {
    record_msg_ = new ::ivi::agle::AgleConfMsg_RecordMsg(*from.record_msg_);
  } else {
    record_msg_ = nullptr;
  }
  if (from._internal_has_rtmp_server_msg()) {
    rtmp_server_msg_ = new ::ivi::agle::AgleConfMsg_RtmpServerMsg(*from.rtmp_server_msg_);
  } else {
    rtmp_server_msg_ = nullptr;
  }
  if (from._internal_has_audio_msg()) {
    audio_msg_ = new ::ivi::agle::AgleConfMsg_AudiosMsg(*from.audio_msg_);
  } else {
    audio_msg_ = nullptr;
  }
  if (from._internal_has_video_msg()) {
    video_msg_ = new ::ivi::agle::AgleConfMsg_VideosMsg(*from.video_msg_);
  } else {
    video_msg_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ivi.agle.AgleConfMsg)
}

void AgleConfMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AgleConfMsg_agle_5fconf_2eproto.base);
  ::memset(&ntp_msg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&video_msg_) -
      reinterpret_cast<char*>(&ntp_msg_)) + sizeof(video_msg_));
}

AgleConfMsg::~AgleConfMsg() {
  // @@protoc_insertion_point(destructor:ivi.agle.AgleConfMsg)
  SharedDtor();
}

void AgleConfMsg::SharedDtor() {
  if (this != internal_default_instance()) delete ntp_msg_;
  if (this != internal_default_instance()) delete log_msg_;
  if (this != internal_default_instance()) delete management_msg_;
  if (this != internal_default_instance()) delete record_msg_;
  if (this != internal_default_instance()) delete rtmp_server_msg_;
  if (this != internal_default_instance()) delete audio_msg_;
  if (this != internal_default_instance()) delete video_msg_;
}

void AgleConfMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AgleConfMsg& AgleConfMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AgleConfMsg_agle_5fconf_2eproto.base);
  return *internal_default_instance();
}


void AgleConfMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:ivi.agle.AgleConfMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && ntp_msg_ != nullptr) {
    delete ntp_msg_;
  }
  ntp_msg_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && log_msg_ != nullptr) {
    delete log_msg_;
  }
  log_msg_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && management_msg_ != nullptr) {
    delete management_msg_;
  }
  management_msg_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && record_msg_ != nullptr) {
    delete record_msg_;
  }
  record_msg_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && rtmp_server_msg_ != nullptr) {
    delete rtmp_server_msg_;
  }
  rtmp_server_msg_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && audio_msg_ != nullptr) {
    delete audio_msg_;
  }
  audio_msg_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && video_msg_ != nullptr) {
    delete video_msg_;
  }
  video_msg_ = nullptr;
  _internal_metadata_.Clear();
}

const char* AgleConfMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ivi.agle.AgleConfMsg.NtpMsg ntp_msg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_ntp_msg(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ivi.agle.AgleConfMsg.LogMsg log_msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_log_msg(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ivi.agle.AgleConfMsg.ManagementMsg management_msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_management_msg(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ivi.agle.AgleConfMsg.RecordMsg record_msg = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_record_msg(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ivi.agle.AgleConfMsg.RtmpServerMsg rtmp_server_msg = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_rtmp_server_msg(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ivi.agle.AgleConfMsg.AudiosMsg audio_msg = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_audio_msg(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ivi.agle.AgleConfMsg.VideosMsg video_msg = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_video_msg(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AgleConfMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ivi.agle.AgleConfMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ivi.agle.AgleConfMsg.NtpMsg ntp_msg = 1;
  if (this->has_ntp_msg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::ntp_msg(this), target, stream);
  }

  // .ivi.agle.AgleConfMsg.LogMsg log_msg = 2;
  if (this->has_log_msg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::log_msg(this), target, stream);
  }

  // .ivi.agle.AgleConfMsg.ManagementMsg management_msg = 3;
  if (this->has_management_msg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::management_msg(this), target, stream);
  }

  // .ivi.agle.AgleConfMsg.RecordMsg record_msg = 4;
  if (this->has_record_msg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::record_msg(this), target, stream);
  }

  // .ivi.agle.AgleConfMsg.RtmpServerMsg rtmp_server_msg = 5;
  if (this->has_rtmp_server_msg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::rtmp_server_msg(this), target, stream);
  }

  // .ivi.agle.AgleConfMsg.AudiosMsg audio_msg = 6;
  if (this->has_audio_msg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::audio_msg(this), target, stream);
  }

  // .ivi.agle.AgleConfMsg.VideosMsg video_msg = 7;
  if (this->has_video_msg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::video_msg(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ivi.agle.AgleConfMsg)
  return target;
}

size_t AgleConfMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ivi.agle.AgleConfMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ivi.agle.AgleConfMsg.NtpMsg ntp_msg = 1;
  if (this->has_ntp_msg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ntp_msg_);
  }

  // .ivi.agle.AgleConfMsg.LogMsg log_msg = 2;
  if (this->has_log_msg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *log_msg_);
  }

  // .ivi.agle.AgleConfMsg.ManagementMsg management_msg = 3;
  if (this->has_management_msg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *management_msg_);
  }

  // .ivi.agle.AgleConfMsg.RecordMsg record_msg = 4;
  if (this->has_record_msg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *record_msg_);
  }

  // .ivi.agle.AgleConfMsg.RtmpServerMsg rtmp_server_msg = 5;
  if (this->has_rtmp_server_msg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *rtmp_server_msg_);
  }

  // .ivi.agle.AgleConfMsg.AudiosMsg audio_msg = 6;
  if (this->has_audio_msg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *audio_msg_);
  }

  // .ivi.agle.AgleConfMsg.VideosMsg video_msg = 7;
  if (this->has_video_msg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *video_msg_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AgleConfMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ivi.agle.AgleConfMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const AgleConfMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AgleConfMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ivi.agle.AgleConfMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ivi.agle.AgleConfMsg)
    MergeFrom(*source);
  }
}

void AgleConfMsg::MergeFrom(const AgleConfMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ivi.agle.AgleConfMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ntp_msg()) {
    _internal_mutable_ntp_msg()->::ivi::agle::AgleConfMsg_NtpMsg::MergeFrom(from._internal_ntp_msg());
  }
  if (from.has_log_msg()) {
    _internal_mutable_log_msg()->::ivi::agle::AgleConfMsg_LogMsg::MergeFrom(from._internal_log_msg());
  }
  if (from.has_management_msg()) {
    _internal_mutable_management_msg()->::ivi::agle::AgleConfMsg_ManagementMsg::MergeFrom(from._internal_management_msg());
  }
  if (from.has_record_msg()) {
    _internal_mutable_record_msg()->::ivi::agle::AgleConfMsg_RecordMsg::MergeFrom(from._internal_record_msg());
  }
  if (from.has_rtmp_server_msg()) {
    _internal_mutable_rtmp_server_msg()->::ivi::agle::AgleConfMsg_RtmpServerMsg::MergeFrom(from._internal_rtmp_server_msg());
  }
  if (from.has_audio_msg()) {
    _internal_mutable_audio_msg()->::ivi::agle::AgleConfMsg_AudiosMsg::MergeFrom(from._internal_audio_msg());
  }
  if (from.has_video_msg()) {
    _internal_mutable_video_msg()->::ivi::agle::AgleConfMsg_VideosMsg::MergeFrom(from._internal_video_msg());
  }
}

void AgleConfMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ivi.agle.AgleConfMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgleConfMsg::CopyFrom(const AgleConfMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ivi.agle.AgleConfMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgleConfMsg::IsInitialized() const {
  return true;
}

void AgleConfMsg::InternalSwap(AgleConfMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(ntp_msg_, other->ntp_msg_);
  swap(log_msg_, other->log_msg_);
  swap(management_msg_, other->management_msg_);
  swap(record_msg_, other->record_msg_);
  swap(rtmp_server_msg_, other->rtmp_server_msg_);
  swap(audio_msg_, other->audio_msg_);
  swap(video_msg_, other->video_msg_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgleConfMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace agle
}  // namespace ivi
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ivi::agle::AgleConfMsg_NtpMsg_NtpEntityMsg* Arena::CreateMaybeMessage< ::ivi::agle::AgleConfMsg_NtpMsg_NtpEntityMsg >(Arena* arena) {
  return Arena::CreateInternal< ::ivi::agle::AgleConfMsg_NtpMsg_NtpEntityMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::ivi::agle::AgleConfMsg_NtpMsg* Arena::CreateMaybeMessage< ::ivi::agle::AgleConfMsg_NtpMsg >(Arena* arena) {
  return Arena::CreateInternal< ::ivi::agle::AgleConfMsg_NtpMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::ivi::agle::AgleConfMsg_LogMsg* Arena::CreateMaybeMessage< ::ivi::agle::AgleConfMsg_LogMsg >(Arena* arena) {
  return Arena::CreateInternal< ::ivi::agle::AgleConfMsg_LogMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::ivi::agle::AgleConfMsg_ManagementMsg* Arena::CreateMaybeMessage< ::ivi::agle::AgleConfMsg_ManagementMsg >(Arena* arena) {
  return Arena::CreateInternal< ::ivi::agle::AgleConfMsg_ManagementMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::ivi::agle::AgleConfMsg_RecordMsg* Arena::CreateMaybeMessage< ::ivi::agle::AgleConfMsg_RecordMsg >(Arena* arena) {
  return Arena::CreateInternal< ::ivi::agle::AgleConfMsg_RecordMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::ivi::agle::AgleConfMsg_RtmpServerMsg_ServerEntityMsg* Arena::CreateMaybeMessage< ::ivi::agle::AgleConfMsg_RtmpServerMsg_ServerEntityMsg >(Arena* arena) {
  return Arena::CreateInternal< ::ivi::agle::AgleConfMsg_RtmpServerMsg_ServerEntityMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::ivi::agle::AgleConfMsg_RtmpServerMsg* Arena::CreateMaybeMessage< ::ivi::agle::AgleConfMsg_RtmpServerMsg >(Arena* arena) {
  return Arena::CreateInternal< ::ivi::agle::AgleConfMsg_RtmpServerMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::ivi::agle::AgleConfMsg_AudiosMsg_AudioEntityMsg* Arena::CreateMaybeMessage< ::ivi::agle::AgleConfMsg_AudiosMsg_AudioEntityMsg >(Arena* arena) {
  return Arena::CreateInternal< ::ivi::agle::AgleConfMsg_AudiosMsg_AudioEntityMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::ivi::agle::AgleConfMsg_AudiosMsg* Arena::CreateMaybeMessage< ::ivi::agle::AgleConfMsg_AudiosMsg >(Arena* arena) {
  return Arena::CreateInternal< ::ivi::agle::AgleConfMsg_AudiosMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::ivi::agle::AgleConfMsg_VideosMsg_CropMsg* Arena::CreateMaybeMessage< ::ivi::agle::AgleConfMsg_VideosMsg_CropMsg >(Arena* arena) {
  return Arena::CreateInternal< ::ivi::agle::AgleConfMsg_VideosMsg_CropMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg* Arena::CreateMaybeMessage< ::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg >(Arena* arena) {
  return Arena::CreateInternal< ::ivi::agle::AgleConfMsg_VideosMsg_VideoEntityMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::ivi::agle::AgleConfMsg_VideosMsg* Arena::CreateMaybeMessage< ::ivi::agle::AgleConfMsg_VideosMsg >(Arena* arena) {
  return Arena::CreateInternal< ::ivi::agle::AgleConfMsg_VideosMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::ivi::agle::AgleConfMsg* Arena::CreateMaybeMessage< ::ivi::agle::AgleConfMsg >(Arena* arena) {
  return Arena::CreateInternal< ::ivi::agle::AgleConfMsg >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
